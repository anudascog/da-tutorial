{"version":3,"names":["atomicResultsPerPageCss","AtomicResultsPerPageStyle0","AtomicResultsPerPage","this","radioGroupName","randomID","isAppLoaded","choicesDisplayed","initialize","choices","convertChoicesToNumbers","initialChoice","validateInitialChoice","error","ChoiceIsNaNError","InitialChoiceNotInChoicesError","bindings","engine","logger","message","searchStatus","buildSearchStatus","resultPerPage","buildResultsPerPage","initialState","numberOfResults","createAppLoadedListener","store","label","i18n","t","render","h","PagerGuard","key","hasError","searchStatusState","hasItems","hasResults","class","role","Label","FieldsetGroup","Choices","groupName","pageSize","resultPerPageState","lang","language","scrollToTopEvent","emit","setItemSize","set","focusOnFirstResultAfterNextSearch","state","resultList","focusOnNextNewResult","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/search/atomic-results-per-page/atomic-results-per-page.pcss?tag=atomic-results-per-page&encapsulation=shadow","src/components/search/atomic-results-per-page/atomic-results-per-page.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n","import {\n  ResultsPerPage,\n  buildResultsPerPage,\n  ResultsPerPageState,\n  buildSearchStatus,\n  SearchStatus,\n  SearchStatusState,\n} from '@coveo/headless';\nimport {Component, Event, EventEmitter, h, Prop, State} from '@stencil/core';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {randomID} from '../../../utils/utils';\nimport {createAppLoadedListener} from '../../common/interface/store';\nimport {Choices} from '../../common/items-per-page/choices';\nimport {\n  ChoiceIsNaNError,\n  InitialChoiceNotInChoicesError,\n} from '../../common/items-per-page/error';\nimport {Label} from '../../common/items-per-page/label';\nimport {\n  convertChoicesToNumbers,\n  validateInitialChoice,\n} from '../../common/items-per-page/validate';\nimport {PagerGuard} from '../../common/pager/stencil-pager-guard';\nimport {FieldsetGroup} from '../../common/stencil-fieldset-group';\nimport {Bindings} from '../atomic-search-interface/atomic-search-interface';\n\n/**\n * The `atomic-results-per-page` component determines how many results to display per page.\n *\n * @part label - The \"Results per page\" label.\n * @part buttons - The list of buttons.\n * @part button - The result per page button.\n * @part active-button - The active result per page button.\n */\n@Component({\n  tag: 'atomic-results-per-page',\n  styleUrl: 'atomic-results-per-page.pcss',\n  shadow: true,\n})\nexport class AtomicResultsPerPage implements InitializableComponent {\n  @InitializeBindings() public bindings!: Bindings;\n  private resultPerPage!: ResultsPerPage;\n  public searchStatus!: SearchStatus;\n  private choices!: number[];\n  private readonly radioGroupName = randomID('atomic-results-per-page-');\n\n  @State()\n  @BindStateToController('resultPerPage')\n  public resultPerPageState!: ResultsPerPageState;\n  @BindStateToController('searchStatus')\n  @State()\n  private searchStatusState!: SearchStatusState;\n  @State() public error!: Error;\n  @State() private isAppLoaded = false;\n\n  /**\n   * A list of choices for the number of results to display per page, separated by commas.\n   */\n  @Prop({reflect: true}) choicesDisplayed = '10,25,50,100';\n  /**\n   * The initial selection for the number of result per page. This should be part of the `choicesDisplayed` option. By default, this is set to the first value in `choicesDisplayed`.\n   * @type {number}\n   */\n  @Prop({mutable: true, reflect: true}) initialChoice?: number;\n\n  @Event({\n    eventName: 'atomic/scrollToTop',\n  })\n  private scrollToTopEvent!: EventEmitter;\n\n  public initialize() {\n    try {\n      this.choices = convertChoicesToNumbers(this.choicesDisplayed);\n      this.initialChoice = this.initialChoice ?? this.choices[0];\n      validateInitialChoice(this.initialChoice, this.choices);\n    } catch (error) {\n      if (\n        error instanceof ChoiceIsNaNError ||\n        error instanceof InitialChoiceNotInChoicesError\n      ) {\n        this.bindings.engine.logger.error(error.message, this);\n        throw error;\n      }\n    }\n\n    this.searchStatus = buildSearchStatus(this.bindings.engine);\n    this.resultPerPage = buildResultsPerPage(this.bindings.engine, {\n      initialState: {numberOfResults: this.initialChoice},\n    });\n    createAppLoadedListener(this.bindings.store, (isAppLoaded) => {\n      this.isAppLoaded = isAppLoaded;\n    });\n  }\n\n  private get label() {\n    return this.bindings.i18n.t('results-per-page');\n  }\n\n  public render() {\n    return (\n      <PagerGuard\n        hasError={this.searchStatusState.hasError}\n        hasItems={this.searchStatusState.hasResults}\n        isAppLoaded={this.isAppLoaded}\n      >\n        <div class=\"flex items-center\" role=\"toolbar\" aria-label={this.label}>\n          <Label>{this.label}</Label>\n          <FieldsetGroup label={this.label}>\n            <Choices\n              label={this.label}\n              groupName={this.radioGroupName}\n              pageSize={this.resultPerPageState.numberOfResults}\n              choices={this.choices}\n              lang={this.bindings.i18n.language}\n              scrollToTopEvent={this.scrollToTopEvent.emit}\n              setItemSize={this.resultPerPage.set}\n              focusOnFirstResultAfterNextSearch={() =>\n                this.bindings.store.state.resultList?.focusOnFirstResultAfterNextSearch()\n              }\n              focusOnNextNewResult={() =>\n                this.bindings.store.state.resultList?.focusOnNextNewResult()\n              }\n            ></Choices>\n          </FieldsetGroup>\n        </div>\n      </PagerGuard>\n    );\n  }\n}\n"],"mappings":"olBAAA,MAAMA,EAA0B,k60DAChC,MAAAC,EAAeD,E,iXC0CFE,EAAoB,M,8EAKdC,KAAAC,eAAiBC,EAAS,4BAS1BF,KAAAG,YAAc,MAKRH,KAAAI,iBAAmB,e,yGALX,M,sBAKW,e,6BAYnC,UAAAC,GACL,IACEL,KAAKM,QAAUC,EAAwBP,KAAKI,kBAC5CJ,KAAKQ,cAAgBR,KAAKQ,eAAiBR,KAAKM,QAAQ,GACxDG,EAAsBT,KAAKQ,cAAeR,KAAKM,Q,CAC/C,MAAOI,GACP,GACEA,aAAiBC,GACjBD,aAAiBE,EACjB,CACAZ,KAAKa,SAASC,OAAOC,OAAOL,MAAMA,EAAMM,QAAShB,MACjD,MAAMU,C,EAIVV,KAAKiB,aAAeC,EAAkBlB,KAAKa,SAASC,QACpDd,KAAKmB,cAAgBC,EAAoBpB,KAAKa,SAASC,OAAQ,CAC7DO,aAAc,CAACC,gBAAiBtB,KAAKQ,iBAEvCe,EAAwBvB,KAAKa,SAASW,OAAQrB,IAC5CH,KAAKG,YAAcA,CAAW,G,CAIlC,SAAYsB,GACV,OAAOzB,KAAKa,SAASa,KAAKC,EAAE,mB,CAGvB,MAAAC,GACL,OACEC,EAACC,EAAU,CAAAC,IAAA,2CACTC,SAAUhC,KAAKiC,kBAAkBD,SACjCE,SAAUlC,KAAKiC,kBAAkBE,WACjChC,YAAaH,KAAKG,aAElB0B,EAAA,OAAAE,IAAA,2CAAKK,MAAM,oBAAoBC,KAAK,UAAS,aAAarC,KAAKyB,OAC7DI,EAACS,EAAK,CAAAP,IAAA,4CAAE/B,KAAKyB,OACbI,EAACU,EAAa,CAAAR,IAAA,2CAACN,MAAOzB,KAAKyB,OACzBI,EAACW,EAAO,CAAAT,IAAA,2CACNN,MAAOzB,KAAKyB,MACZgB,UAAWzC,KAAKC,eAChByC,SAAU1C,KAAK2C,mBAAmBrB,gBAClChB,QAASN,KAAKM,QACdsC,KAAM5C,KAAKa,SAASa,KAAKmB,SACzBC,iBAAkB9C,KAAK8C,iBAAiBC,KACxCC,YAAahD,KAAKmB,cAAc8B,IAChCC,kCAAmC,IACjClD,KAAKa,SAASW,MAAM2B,MAAMC,YAAYF,oCAExCG,qBAAsB,IACpBrD,KAAKa,SAASW,MAAM2B,MAAMC,YAAYC,2B,GAhFvBC,EAAA,CAA5BC,K,+BAQMD,EAAA,CADNE,EAAsB,kB,yCAIfF,EAAA,CAFPE,EAAsB,iB","ignoreList":[]}