{"file":"atomic-insight-user-actions-toggle.js","mappings":";;;;;;;;;;;AAAA,MAAM,iCAAiC,GAAG,qi1DAAqi1D,CAAC;AAChl1D,6CAAe,iCAAiC;;;;;;;;;;;;MCuBnCA,gCAA8B;;;;;;;;QAsB1B,0BAAqB,GAAa,EAAE,CAAC;;;;;qCAAH,EAAE;;IAE5C,UAAU;QACf,IAAI,CAAC,WAAW,GAAGC,gBAAuB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YAC/D,OAAO,EAAE;gBACP,kBAAkB,EAAE,IAAI,CAAC,sBAAsB;gBAC/C,qBAAqB,EAAE,IAAI,CAAC,qBAAqB;aAClD;SACF,CAAC,CAAC;KACJ;IAKO,WAAW;QACjB,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC;KACvC;IAEO,SAAS;QACf,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO;SACR;QAED,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,mCAAmC,CAAC,CAAC;QAE5E,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9D,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;QAC1C,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QACnC,IAAI,CAAC,QAAQ,CAAC,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC;QACnE,IAAI,CAAC,QAAQ,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC;KAClE;IAEM,MAAM;QACX,QACE,EAAC,UAAU,qDACT,UAAU,EAAC,6BAA6B,EACxC,KAAK,EAAC,iBAAiB,EACvB,IAAI,EAAEC,KAAS,EACf,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC,EAC/C,OAAO,EAAE;gBACP,IAAI,CAAC,WAAW,EAAE,CAAC;aACpB,EACD,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC,EAC3C,SAAS,EAAE,CAAC,MAA0B;gBACpC,IAAI,CAAC,MAAM,EAAE;oBACX,OAAO;iBACR;gBACD,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;gBACxB,IAAI,CAAC,SAAS,EAAE,CAAC;aAClB,GACD,EACF;KACH;;;;;;;;;;AAvE4B;IAA5B,kBAAkB,EAAE;kEAAmC;AAIjD;IAFN,qBAAqB,CAAC,aAAa,CAAC;0EAEa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["AtomicInsightUserActionsToggle","buildInsightUserActions","Clockicon"],"sources":["src/components/insight/user-actions/atomic-insight-user-actions-toggle/atomic-insight-user-actions-toggle.pcss?tag=atomic-insight-user-actions-toggle&encapsulation=shadow","src/components/insight/user-actions/atomic-insight-user-actions-toggle/atomic-insight-user-actions-toggle.tsx"],"sourcesContent":["@import '../../../../global/global.pcss';\n","import {\n  buildUserActions as buildInsightUserActions,\n  UserActions as InsightUserActions,\n  UserActionsState as InsightUserActionsState,\n} from '@coveo/headless/insight';\nimport {Component, h, Prop, Element, State} from '@stencil/core';\nimport Clockicon from '../../../../images/clock.svg';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {IconButton} from '../../../common/iconButton';\nimport {InsightBindings} from '../../atomic-insight-interface/atomic-insight-interface';\n\n/**\n * @internal\n * The `atomic-insight-user-actions-toggle` component displays a button that opens a modal containing the user actions timeline component.\n */\n@Component({\n  tag: 'atomic-insight-user-actions-toggle',\n  styleUrl: 'atomic-insight-user-actions-toggle.pcss',\n  shadow: true,\n})\nexport class AtomicInsightUserActionsToggle\n  implements InitializableComponent<InsightBindings>\n{\n  @Element() public host!: HTMLElement;\n  @InitializeBindings() public bindings!: InsightBindings;\n  public userActions!: InsightUserActions;\n  @BindStateToController('userActions')\n  @State()\n  public userActionsState!: InsightUserActionsState;\n  @State() public error!: Error;\n\n  /**\n   * The ID of the user whose actions are being displayed.\n   */\n  @Prop() public userId!: string;\n  /**\n   * The date and time when the case was created. For example \"2024-01-01T00:00:00Z\"\n   */\n  @Prop() public ticketCreationDateTime!: string;\n  /**\n   * The names of custom events to exclude.\n   */\n  @Prop() public excludedCustomActions: string[] = [];\n\n  public initialize() {\n    this.userActions = buildInsightUserActions(this.bindings.engine, {\n      options: {\n        ticketCreationDate: this.ticketCreationDateTime,\n        excludedCustomActions: this.excludedCustomActions,\n      },\n    });\n  }\n\n  private buttonRef?: HTMLButtonElement;\n  private modalRef?: HTMLAtomicInsightUserActionsModalElement;\n\n  private enableModal() {\n    this.modalRef && (this.modalRef.isOpen = true);\n    this.userActions.logOpenUserActions();\n  }\n\n  private loadModal() {\n    if (this.modalRef) {\n      return;\n    }\n\n    this.modalRef = document.createElement('atomic-insight-user-actions-modal');\n\n    this.host.insertAdjacentElement('beforebegin', this.modalRef);\n    this.modalRef.openButton = this.buttonRef;\n    this.modalRef.userId = this.userId;\n    this.modalRef.ticketCreationDateTime = this.ticketCreationDateTime;\n    this.modalRef.excludedCustomActions = this.excludedCustomActions;\n  }\n\n  public render() {\n    return (\n      <IconButton\n        partPrefix=\"insight-user-actions-toggle\"\n        style=\"outline-neutral\"\n        icon={Clockicon}\n        ariaLabel={this.bindings.i18n.t('user-actions')}\n        onClick={() => {\n          this.enableModal();\n        }}\n        title={this.bindings.i18n.t('user-actions')}\n        buttonRef={(button?: HTMLButtonElement) => {\n          if (!button) {\n            return;\n          }\n          this.buttonRef = button;\n          this.loadModal();\n        }}\n      />\n    );\n  }\n}\n"],"version":3}