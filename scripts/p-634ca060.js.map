{"version":3,"names":["getNamedSlotFromHost","host","slotName","children","Array","from","targetSlot","filter","child","getAttribute","length","console","warn","getDefaultSlotFromHost","defaultSlot","hasAttribute"],"sources":["src/utils/slot-utils.ts"],"sourcesContent":["export function getNamedSlotFromHost(host: HTMLElement, slotName: string) {\n  const children = Array.from(host.children);\n  const targetSlot = children.filter(\n    (child) => child.getAttribute('slot') === slotName\n  );\n\n  if (!targetSlot.length) {\n    return;\n  }\n\n  if (targetSlot.length > 1) {\n    console.warn(`Element should only have 1 slot named \"${slotName}\".`, host);\n  }\n\n  return targetSlot[0];\n}\n\nexport function getDefaultSlotFromHost(host: HTMLElement) {\n  const children = Array.from(host.children);\n  const defaultSlot = children.filter(\n    (child) => !child.hasAttribute('slot') || child.getAttribute('slot') === ''\n  );\n\n  if (!defaultSlot.length) {\n    return;\n  }\n\n  if (defaultSlot.length > 1) {\n    console.warn('Element should only have 1 default slot.', host);\n  }\n\n  return defaultSlot[0];\n}\n"],"mappings":"SAAgBA,EAAqBC,EAAmBC,GACtD,MAAMC,EAAWC,MAAMC,KAAKJ,EAAKE,UACjC,MAAMG,EAAaH,EAASI,QACzBC,GAAUA,EAAMC,aAAa,UAAYP,IAG5C,IAAKI,EAAWI,OAAQ,CACtB,M,CAGF,GAAIJ,EAAWI,OAAS,EAAG,CACzBC,QAAQC,KAAK,0CAA0CV,MAAcD,E,CAGvE,OAAOK,EAAW,EACpB,C,SAEgBO,EAAuBZ,GACrC,MAAME,EAAWC,MAAMC,KAAKJ,EAAKE,UACjC,MAAMW,EAAcX,EAASI,QAC1BC,IAAWA,EAAMO,aAAa,SAAWP,EAAMC,aAAa,UAAY,KAG3E,IAAKK,EAAYJ,OAAQ,CACvB,M,CAGF,GAAII,EAAYJ,OAAS,EAAG,CAC1BC,QAAQC,KAAK,2CAA4CX,E,CAG3D,OAAOa,EAAY,EACrB,Q","ignoreList":[]}