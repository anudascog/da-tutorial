{"version":3,"names":["atomicInsightResultListCss","AtomicInsightResultListStyle0","AtomicInsightResultList","this","loadingFlag","randomID","display","templateHasError","resultTemplateRegistered","isAppLoaded","density","imageSize","setRenderFunction","resultRenderingFunction","itemRenderingFunction","initialize","resultList","buildInsightResultList","bindings","engine","options","fieldsToInclude","store","state","undefined","resultsPerPage","buildInsightResultsPerPage","itemTemplateProvider","ItemTemplateProvider","includeDefaultTemplate","templateElements","Array","from","host","querySelectorAll","getResultTemplateRegistered","getTemplateHasError","setResultTemplateRegistered","value","setTemplateHasError","itemListCommon","ItemListCommon","engineSubscribe","subscribe","getCurrentNumberOfItems","resultListState","results","length","getIsLoading","isLoading","nextNewItemTarget","focusTarget","createAppLoadedListener","nextNewResultTarget","FocusTargetController","render","updateBreakpoints","listClasses","computeListDisplayClasses","h","ItemListGuard","key","hasTemplate","hasError","firstRequestExecuted","firstSearchExecuted","hasItems","hasResults","DisplayWrapper","ResultsPlaceholdersGuard","displayPlaceholders","numberOfPlaceholders","resultsPerPageState","numberOfResults","ItemDisplayGuard","map","result","i","atomicInsightResultProps","getPropsForAtomicInsightResult","part","ref","element","setNewResultRef","getItemListDisplayClasses","interactiveResult","buildInsightInteractiveResult","renderingFunction","getResultId","uniqueId","searchResponseId","content","getTemplateContent","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/insight/result-lists/atomic-insight-result-list/atomic-insight-result-list.pcss?tag=atomic-insight-result-list&encapsulation=shadow","src/components/insight/result-lists/atomic-insight-result-list/atomic-insight-result-list.tsx"],"sourcesContent":["@import '../../../common/item-list/styles/placeholders.pcss';\n@import '../styles/list-display.pcss';\natomic-result:not(.hydrated) {\n  visibility: hidden;\n}\n","import {\n  ResultList as InsightResultList,\n  ResultListState as InsightResultListState,\n  buildResultList as buildInsightResultList,\n  Result as InsightResult,\n  buildInteractiveResult as buildInsightInteractiveResult,\n  buildResultsPerPage as buildInsightResultsPerPage,\n  ResultsPerPage as InsightResultsPerPage,\n  ResultsPerPageState as InsightResultsPerPageState,\n} from '@coveo/headless/insight';\nimport {Component, h, Element, State, Prop, Method} from '@stencil/core';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {FocusTargetController} from '../../../../utils/stencil-accessibility-utils';\nimport {randomID} from '../../../../utils/utils';\nimport {ResultsPlaceholdersGuard} from '../../../common/atomic-result-placeholder/stencil-placeholders';\nimport {createAppLoadedListener} from '../../../common/interface/store';\nimport {ItemDisplayGuard} from '../../../common/item-list/item-display-guard';\nimport {ItemListGuard} from '../../../common/item-list/item-list-guard';\nimport {ItemTemplateProvider} from '../../../common/item-list/item-template-provider';\nimport {DisplayWrapper} from '../../../common/item-list/stencil-display-wrapper';\nimport {\n  ItemListCommon,\n  ItemRenderingFunction,\n} from '../../../common/item-list/stencil-item-list-common';\nimport {\n  getItemListDisplayClasses,\n  ItemDisplayDensity,\n  ItemDisplayImageSize,\n  ItemDisplayLayout,\n} from '../../../common/layout/display-options';\nimport {InsightBindings} from '../../atomic-insight-interface/atomic-insight-interface';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-insight-result-list',\n  styleUrl: 'atomic-insight-result-list.pcss',\n  shadow: true,\n})\nexport class AtomicInsightResultList\n  implements InitializableComponent<InsightBindings>\n{\n  @InitializeBindings() public bindings!: InsightBindings;\n  public resultList!: InsightResultList;\n  public resultsPerPage!: InsightResultsPerPage;\n  private loadingFlag = randomID('firstInsightResultLoaded-');\n  private itemRenderingFunction: ItemRenderingFunction;\n  private itemTemplateProvider!: ItemTemplateProvider;\n  private nextNewResultTarget?: FocusTargetController;\n  private display: ItemDisplayLayout = 'list';\n  private itemListCommon!: ItemListCommon;\n\n  @Element() public host!: HTMLDivElement;\n\n  @BindStateToController('resultsPerPage')\n  @State()\n  public resultsPerPageState!: InsightResultsPerPageState;\n  @BindStateToController('resultList')\n  @State()\n  public resultListState!: InsightResultListState;\n  @State() private templateHasError = false;\n  @State() private resultTemplateRegistered = false;\n  @State() public error!: Error;\n  @State() private isAppLoaded = false;\n\n  /**\n   * The spacing of various elements in the result list, including the gap between results, the gap between parts of a result, and the font sizes of different parts in a result.\n   */\n  @Prop({reflect: true}) density: ItemDisplayDensity = 'normal';\n  /**\n   * The expected size of the image displayed in the results.\n   */\n  @Prop({reflect: true}) imageSize: ItemDisplayImageSize = 'icon';\n  /**\n   * Sets a rendering function to bypass the standard HTML template mechanism for rendering results.\n   * You can use this function while working with web frameworks that don't use plain HTML syntax, e.g., React, Angular or Vue.\n   *\n   * Do not use this method if you integrate Atomic in a plain HTML deployment.\n   *\n   * @param resultRenderingFunction\n   */\n  @Method() public async setRenderFunction(\n    resultRenderingFunction: ItemRenderingFunction\n  ) {\n    this.itemRenderingFunction = resultRenderingFunction;\n  }\n\n  public initialize() {\n    this.resultList = buildInsightResultList(this.bindings.engine, {\n      options: {\n        fieldsToInclude: this.bindings.store.state.fieldsToInclude || undefined,\n      },\n    });\n    this.resultsPerPage = buildInsightResultsPerPage(this.bindings.engine);\n\n    this.itemTemplateProvider = new ItemTemplateProvider({\n      includeDefaultTemplate: true,\n      templateElements: Array.from(\n        this.host.querySelectorAll('atomic-insight-result-template')\n      ),\n      getResultTemplateRegistered: () => this.resultTemplateRegistered,\n      getTemplateHasError: () => this.templateHasError,\n      setResultTemplateRegistered: (value: boolean) => {\n        this.resultTemplateRegistered = value;\n      },\n      setTemplateHasError: (value: boolean) => {\n        this.templateHasError = value;\n      },\n      bindings: this.bindings,\n    });\n\n    this.itemListCommon = new ItemListCommon({\n      engineSubscribe: this.bindings.engine.subscribe,\n      getCurrentNumberOfItems: () => this.resultListState.results.length,\n      getIsLoading: () => this.resultListState.isLoading,\n      host: this.host,\n      loadingFlag: this.loadingFlag,\n      nextNewItemTarget: this.focusTarget,\n      store: this.bindings.store,\n    });\n    createAppLoadedListener(this.bindings.store, (isAppLoaded) => {\n      this.isAppLoaded = isAppLoaded;\n    });\n  }\n\n  public get focusTarget(): FocusTargetController {\n    if (!this.nextNewResultTarget) {\n      this.nextNewResultTarget = new FocusTargetController(this);\n    }\n    return this.nextNewResultTarget;\n  }\n\n  public render() {\n    this.itemListCommon.updateBreakpoints();\n    const listClasses = this.computeListDisplayClasses();\n\n    return (\n      <ItemListGuard\n        hasTemplate={this.resultTemplateRegistered}\n        templateHasError={this.itemTemplateProvider.hasError}\n        firstRequestExecuted={this.resultListState.firstSearchExecuted}\n        hasItems={this.resultListState.hasResults}\n        hasError={this.resultListState.hasError}\n      >\n        <DisplayWrapper listClasses={listClasses} display={this.display}>\n          <ResultsPlaceholdersGuard\n            displayPlaceholders={!this.isAppLoaded}\n            numberOfPlaceholders={this.resultsPerPageState.numberOfResults}\n            display={this.display}\n            density={this.density}\n            imageSize={this.imageSize}\n          ></ResultsPlaceholdersGuard>\n          <ItemDisplayGuard\n            firstRequestExecuted={this.resultListState.firstSearchExecuted}\n            hasItems={this.resultListState.hasResults}\n          >\n            {this.resultListState.results.map((result, i) => {\n              const atomicInsightResultProps =\n                this.getPropsForAtomicInsightResult(result);\n              return (\n                <atomic-insight-result\n                  {...atomicInsightResultProps}\n                  part=\"outline\"\n                  ref={(element) =>\n                    element && this.itemListCommon.setNewResultRef(element, i)\n                  }\n                ></atomic-insight-result>\n              );\n            })}\n          </ItemDisplayGuard>\n        </DisplayWrapper>\n      </ItemListGuard>\n    );\n  }\n\n  private computeListDisplayClasses() {\n    const displayPlaceholders = !this.isAppLoaded;\n\n    return getItemListDisplayClasses(\n      this.display,\n      this.density,\n      this.imageSize,\n      this.resultListState.firstSearchExecuted &&\n        this.resultListState.isLoading,\n      displayPlaceholders\n    );\n  }\n\n  private getPropsForAtomicInsightResult(result: InsightResult) {\n    return {\n      interactiveResult: buildInsightInteractiveResult(this.bindings.engine, {\n        options: {result},\n      }),\n      result,\n      renderingFunction: this.itemRenderingFunction,\n      loadingFlag: this.loadingFlag,\n      key: this.itemListCommon.getResultId(\n        result.uniqueId,\n        this.resultListState.searchResponseId,\n        this.density,\n        this.imageSize\n      ),\n      content: this.itemTemplateProvider.getTemplateContent(result),\n      store: this.bindings.store,\n      density: this.density,\n      imageSize: this.imageSize,\n      display: this.display,\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]}