{"file":"atomic-tab-manager.entry.cjs.js","mappings":";;;;;;;;;;;;AAAA,MAAM,mBAAmB,GAAG,0x2DAA0x2D,CAAC;AACvz2D,+BAAe,mBAAmB;;;;;;;;;;;;MC+BrB,gBAAgB;;;QASnB,SAAI,GAAwD,EAAE,CAAC;;;;QAK/D,4BAAuB,GAAa,KAAK,CAAC;;uCAAN,KAAK;;;IAI1C,UAAU;QACf,IAAI,CAAC,UAAU,GAAGA,wBAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAExD,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,CAAC;QAEzE,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;YAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CACpB,4EAA4E,CAC7E,CAAC;YACF,OAAO;SACR;QAED,WAAW,CAAC,OAAO,CAAC,CAAC,UAAU;YAC7B,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE;gBACpB,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CACpB,oEAAoE,CACrE,CAAC;gBACF,OAAO;aACR;YACD,MAAM,aAAa,GAAGC,iBAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;gBACnD,OAAO,EAAE;oBACP,UAAU,EAAE,UAAU,CAAC,UAAU;oBACjC,EAAE,EAAE,UAAU,CAAC,IAAI;oBACnB,uBAAuB,EAAE,IAAI,CAAC,uBAAuB;iBACtD;aACF,CAAC,CAAC;YAEH,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBACb,KAAK,EAAE,UAAU,CAAC,KAAK;gBACvB,IAAI,EAAE,UAAU,CAAC,IAAI;gBACrB,aAAa;aACd,CAAC,CAAC;SACJ,CAAC,CAAC;KACJ;IAED,MAAM;QACJ,QACEC,QAACC,UAAI,uDACHD,+EACEA,kEACE,IAAI,EAAC,MAAM,gBACA,UAAU,EACrB,IAAI,EAAC,UAAU,EACf,KAAK,EAAC,mDAAmD,IAExD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,MACjBA,+BACE,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,KAAK,GAAG,CAAC,IAAI,EACnD,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE;gBACrC,YAAY,EAAE,GAAG,CAAC,KAAK;aACxB,CAAC,EACF,MAAM,EAAE;gBACN,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC,QAAQ,EAAE;oBACrC,GAAG,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;iBAC5B;aACF,GACkB,CACtB,CAAC,CACE,CACS,CACZ,EACP;KACH;;;AA/E4B;IAA5BE,sCAAkB,EAAE;kDAA4B;AAGzC;IAFPC,yCAAqB,CAAC,YAAY,CAAC;yDAEM;;;;;","names":["buildTabManager","buildTab","h","Host","InitializeBindings","BindStateToController"],"sources":["src/components/search/tabs/atomic-tab-manager/atomic-tab-manager.pcss?tag=atomic-tab-manager&encapsulation=shadow","src/components/search/tabs/atomic-tab-manager/atomic-tab-manager.tsx"],"sourcesContent":["@import '../../../../global/global.pcss';\n\n:host {\n  atomic-tab-bar::part(popover-button) {\n    @apply m-0 px-2 pb-1 text-left text-xl font-normal text-black sm:px-6;\n  }\n\n  atomic-tab-bar::part(value-label) {\n    @apply font-normal;\n  }\n\n  ::part(popover-tab) {\n    @apply font-normal;\n  }\n}\n","import {\n  TabManager,\n  TabManagerState,\n  buildTabManager,\n  Tab,\n  buildTab,\n} from '@coveo/headless';\nimport {Component, h, Element, State, Prop, Host} from '@stencil/core';\nimport {\n  BindStateToController,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {Bindings} from '../../atomic-search-interface/atomic-search-interface';\n\n/**\n * The `atomic-tab-manager` component manages a collection of tabs,\n * allowing users to switch between them. Each child `atomic-tab` represents an\n * individual tab within the manager.\n *\n * @part button-container - The container for the tab button.\n * @part button-container-active - The container for the active tab button.\n * @part tab-button - The tab button.\n * @part tab-button-active - The container for the active tab button.\n * @part dropdown-area - The dropdown area.\n * @part tab-area - The tab area.\n * @slot default\n */\n@Component({\n  tag: 'atomic-tab-manager',\n  styleUrl: 'atomic-tab-manager.pcss',\n  shadow: true,\n})\nexport class AtomicTabManager {\n  @InitializeBindings() public bindings!: Bindings;\n  @BindStateToController('tabManager')\n  @State()\n  private tabManagerState!: TabManagerState;\n  @Element()\n  private host!: HTMLElement;\n  public tabManager!: TabManager;\n\n  private tabs: {label: string; name: string; tabController: Tab}[] = [];\n\n  /**\n   * Whether to clear the filters when the active tab changes.\n   */\n  @Prop() clearFiltersOnTabChange?: boolean = false;\n\n  @State() public error!: Error;\n\n  public initialize() {\n    this.tabManager = buildTabManager(this.bindings.engine);\n\n    const tabElements = Array.from(this.host.querySelectorAll('atomic-tab'));\n\n    if (tabElements.length === 0) {\n      this.error = new Error(\n        'The \"atomic-tab-manager\" element requires at least one \"atomic-tab\" child.'\n      );\n      return;\n    }\n\n    tabElements.forEach((tabElement) => {\n      if (!tabElement.name) {\n        this.error = new Error(\n          'The \"name\" attribute must be defined on all \"atomic-tab\" children.'\n        );\n        return;\n      }\n      const tabController = buildTab(this.bindings.engine, {\n        options: {\n          expression: tabElement.expression,\n          id: tabElement.name,\n          clearFiltersOnTabChange: this.clearFiltersOnTabChange,\n        },\n      });\n\n      this.tabs.push({\n        label: tabElement.label,\n        name: tabElement.name,\n        tabController,\n      });\n    });\n  }\n\n  render() {\n    return (\n      <Host>\n        <atomic-tab-bar>\n          <div\n            role=\"list\"\n            aria-label=\"tab-area\"\n            part=\"tab-area\"\n            class=\"border-neutral mb-2 flex w-full flex-row border-b\"\n          >\n            {this.tabs.map((tab) => (\n              <atomic-tab-button\n                active={this.tabManagerState.activeTab === tab.name}\n                label={this.bindings.i18n.t(tab.label, {\n                  defaultValue: tab.label,\n                })}\n                select={() => {\n                  if (!tab.tabController.state.isActive) {\n                    tab.tabController.select();\n                  }\n                }}\n              ></atomic-tab-button>\n            ))}\n          </div>\n        </atomic-tab-bar>\n      </Host>\n    );\n  }\n}\n"],"version":3}