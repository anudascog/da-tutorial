{"version":3,"names":["identifierKeywordsSection","QuickviewSidebar","props","words","minimized","numberOfWords","Object","values","length","minimizeButton","h","MinimizeButton","wordsLength","class","HighlightKeywordsCheckbox","Keywords","i18n","onMinimize","highlightKeywords","IconButton","partPrefix","icon","MinimizeIcon","style","title","t","ariaLabel","onClick","badge","undefined","ariaExpanded","toString","ariaControls","onHighlightKeywords","Fragment","StencilCheckbox","text","id","checked","highlightNone","onToggle","htmlFor","map","keyword","wordIsEnabled","keywords","enabled","key","backgroundColor","color","Intl","NumberFormat","language","notation","format","occurrences","FieldsetGroup","label","ArrowDown","disabled","navigateForward","ArrowUp","navigateBackward","tabIndex","ariaPressed","Remove","Add","indexIdentifier","documentIdentifierInIframe","writeDocument","documentWriter","content","open","write","close","scrollingElement","scrollTop","currentResultAlreadyWrittenToDocument","uniqueIdentifier","currentDocIdentifier","getElementById","textContent","ensureSameResultIsNotOverwritten","docIdentifier","createElement","display","setAttribute","body","appendChild","warnAboutLimitedUsageQuickview","logger","warn","QuickviewIframe","onSetIframeRef","sandbox","src","waitForIframeContentToBeWritten","Promise","resolve","setTimeout","ref","async","el","iframeRef","contentDocument","buildPreviewBar","previewBarId","bar","innerHTML","position","top","right","width","height","buildPreviewUnit","word","wordElement","docHeight","previewUnit","elementPosition","getBoundingClientRect","border","previewBorderColor","buildQuickviewPreviewBar","iframe","remove","scrollHeight","forEach","elements","rgbToHsv","r","g","b","max","Math","min","v","d","s","hsvToRgb","i","floor","f","p","q","round","HIGHLIGHT_PREFIX","QuickviewWordHighlight","constructor","stemmingInfoFromIndex","keywordElementInIframe","this","currentNavigationPosition","parsed","parseKeywordIdentifier","getText","keywordIdentifier","focusedColor","computeInvertedColor","computeSaturatedColor","addElement","push","highlightNavigation","putElementIntoView","isTaggedWord","element","nodeName","toLowerCase","currentElement","otherElements","filter","scrollIntoView","innerTextOfHTMLElement","getHighlightedInnerText","resolveOriginalTerm","trim","highlight","found","keys","find","originalTerm","originalTermMatch","stemmingExpansions","stemmingExpansionMatch","stemmingExpansion","getTextOfHTMLElement","children","Array","from","parts","substring","match","keywordTermPart","parseInt","innerText","extractRgb","newSaturation","rSaturated","gSaturated","bSaturated","rgbExtracted","getWordsHighlights","wordsHighlights","querySelectorAll","wordHTMLElementToHighlight","wordHighlight","alreadyScannedKeyword","atomicQuickviewModalCss","AtomicQuickviewModalStyle0","AtomicQuickviewModal","minimizeSidebar","watchHighlightKeywords","handleHighlightsScripts","componentWillLoad","bindings","store","isMobile","reset","result","interactiveResult","renderHeader","headerContent","buildInteractiveResult","engine","options","LinkWithItemAnalytics","href","clickUri","onSelect","select","onBeginDelayedSelect","beginDelayedSelect","onCancelPendingSelect","cancelPendingSelect","className","part","CloseIcon","onClose","slot","renderBody","minimize","quickviewSrc","quickviewUniqueIdentifier","termsToHighlight","renderFooter","Button","previousQuickview","emit","current","first","total","nextQuickview","modalCloseCallback","isOpen","highlightScriptId","state","resultPreview","contentURL","enableHighlights","removeDisableHighlightScript","enableHighlightsSpecificKeyword","identifier","disableHighlights","createDisableHighlightScript","disableHighlightsSpecificKeyword","doc","contentWindow","document","head","scriptId","createStyleElement","createTextNode","flatPhrasesToHighlight","phrasesToHighlight","search","response","entries","phrase","flatMap","keywordEntry","keywordStemming","requestId","uniqueId","render","fullscreen","__decorate","InitializeBindings"],"sources":["src/components/search/result-template-components/atomic-quickview-sidebar/atomic-quickview-sidebar.tsx","src/components/search/result-template-components/quickview-iframe/quickview-iframe.tsx","src/components/search/result-template-components/quickview-preview-bar/quickview-preview-bar.ts","src/utils/color-utils.ts","src/components/search/result-template-components/quickview-word-highlight/quickview-word-highlight.tsx","src/components/search/result-template-components/atomic-quickview-modal/atomic-quickview-modal.pcss?tag=atomic-quickview-modal&encapsulation=shadow","src/components/search/result-template-components/atomic-quickview-modal/atomic-quickview-modal.tsx"],"sourcesContent":["import {Fragment, FunctionalComponent, h} from '@stencil/core';\nimport {i18n} from 'i18next';\nimport Add from '../../../../images/add.svg';\nimport ArrowDown from '../../../../images/arrow-bottom-rounded.svg';\nimport ArrowUp from '../../../../images/arrow-top-rounded.svg';\nimport MinimizeIcon from '../../../../images/menu.svg';\nimport Remove from '../../../../images/remove.svg';\nimport {IconButton} from '../../../common/iconButton';\nimport {StencilCheckbox} from '../../../common/stencil-checkbox';\nimport {FieldsetGroup} from '../../../common/stencil-fieldset-group';\nimport type {HighlightKeywords} from '../atomic-quickview-modal/atomic-quickview-modal';\nimport {QuickviewWordHighlight} from '../quickview-word-highlight/quickview-word-highlight';\n\nconst identifierKeywordsSection = 'coveo-quickview-sidebar-keywords';\n\nexport interface QuickviewSidebarProps {\n  words: Record<string, QuickviewWordHighlight>;\n  i18n: i18n;\n  highlightKeywords: HighlightKeywords;\n  onHighlightKeywords: (highlight: HighlightKeywords) => void;\n  minimized: boolean;\n  onMinimize: (minimize: boolean) => void;\n}\n\nexport const QuickviewSidebar: FunctionalComponent<QuickviewSidebarProps> = (\n  props\n) => {\n  const {words, minimized} = props;\n  const numberOfWords = Object.values(words).length;\n\n  if (numberOfWords === 0) {\n    return;\n  }\n\n  const minimizeButton = (\n    <MinimizeButton {...props} wordsLength={numberOfWords} />\n  );\n\n  return (\n    <div class=\"border-neutral h-full border-r p-4\">\n      {minimized && minimizeButton}\n      <div class=\"flex items-center justify-between\">\n        <div class=\"flex items-center\">\n          <HighlightKeywordsCheckbox {...props} />\n        </div>\n        {!minimized && <div>{minimizeButton}</div>}\n      </div>\n\n      {!minimized && <Keywords {...props} words={words} />}\n    </div>\n  );\n};\n\nconst MinimizeButton: FunctionalComponent<\n  Pick<\n    QuickviewSidebarProps,\n    'i18n' | 'minimized' | 'onMinimize' | 'highlightKeywords'\n  > & {wordsLength: number}\n> = ({i18n, minimized, onMinimize, highlightKeywords, wordsLength}) => (\n  <IconButton\n    partPrefix=\"sidebar-minimize\"\n    icon={MinimizeIcon}\n    style=\"text-transparent\"\n    title={i18n.t('quickview-toggle-navigation')}\n    ariaLabel={i18n.t('quickview-toggle-navigation')}\n    onClick={() => onMinimize(!minimized)}\n    badge={\n      highlightKeywords && minimized ? <slot>{wordsLength}</slot> : undefined\n    }\n    class={`w-fit ${minimized ? '' : 'ml-auto'}`}\n    ariaExpanded={(!minimized).toString()}\n    ariaControls={identifierKeywordsSection}\n  />\n);\n\nconst HighlightKeywordsCheckbox: FunctionalComponent<\n  Pick<\n    QuickviewSidebarProps,\n    'i18n' | 'highlightKeywords' | 'onHighlightKeywords' | 'minimized'\n  >\n> = ({i18n, highlightKeywords, onHighlightKeywords, minimized}) => (\n  <Fragment>\n    <StencilCheckbox\n      text={i18n.t('keywords-highlight')}\n      class=\"mr-2\"\n      id=\"atomic-quickview-sidebar-highlight-keywords\"\n      checked={!highlightKeywords.highlightNone}\n      onToggle={(checked) =>\n        onHighlightKeywords({\n          ...highlightKeywords,\n          highlightNone: !checked,\n        })\n      }\n    ></StencilCheckbox>\n    {!minimized && (\n      <label\n        class=\"cursor-pointer font-bold whitespace-nowrap\"\n        htmlFor=\"atomic-quickview-sidebar-highlight-keywords\"\n      >\n        {i18n.t('keywords-highlight')}\n      </label>\n    )}\n  </Fragment>\n);\n\nconst Keywords: FunctionalComponent<\n  Pick<\n    QuickviewSidebarProps,\n    'i18n' | 'onHighlightKeywords' | 'highlightKeywords'\n  > & {\n    words: Record<string, QuickviewWordHighlight>;\n  }\n> = ({words, i18n, highlightKeywords, onHighlightKeywords}) => {\n  return (\n    <div id={identifierKeywordsSection}>\n      {Object.values(words).map((keyword) => {\n        const wordIsEnabled =\n          !highlightKeywords.highlightNone &&\n          (highlightKeywords.keywords[keyword.text] === undefined ||\n            highlightKeywords.keywords[keyword.text].enabled === true);\n\n        return (\n          <div\n            key={keyword.text}\n            class=\"my-4 flex w-100 items-center justify-between gap-x-2\"\n          >\n            <div\n              class={`bg-background border-neutral flex grow items-center overflow-x-auto rounded-lg border ${\n                !wordIsEnabled ? 'pointer-events-none opacity-50' : ''\n              }`}\n            >\n              <div\n                class=\"flex grow items-center border-r p-4\"\n                aria-hidden=\"true\"\n              >\n                <div\n                  class=\"mr-2 h-5 w-5 flex-none\"\n                  style={{backgroundColor: keyword.color}}\n                ></div>\n                <div class=\"mr-2 grow whitespace-nowrap\">{keyword.text}</div>\n                <div class=\"flex-none\">\n                  (\n                  {new Intl.NumberFormat(i18n.language, {\n                    notation: 'compact',\n                  }).format(keyword.occurrences)}\n                  )\n                </div>\n              </div>\n              <FieldsetGroup\n                label={i18n.t('quickview-navigate-keywords', {\n                  occurrences: keyword.occurrences,\n                  keyword: keyword.text,\n                })}\n              >\n                <div class=\"flex px-2\">\n                  <IconButton\n                    partPrefix=\"sidebar-next\"\n                    icon={ArrowDown}\n                    disabled={!wordIsEnabled}\n                    style=\"text-transparent\"\n                    class=\"border-0\"\n                    ariaLabel={i18n.t('next')}\n                    title={i18n.t('next')}\n                    onClick={() => keyword.navigateForward()}\n                  />\n                  <IconButton\n                    partPrefix=\"sidebar-previous\"\n                    icon={ArrowUp}\n                    disabled={!wordIsEnabled}\n                    style=\"text-transparent\"\n                    class=\"border-0\"\n                    ariaLabel={i18n.t('previous')}\n                    title={i18n.t('previous')}\n                    onClick={() => keyword.navigateBackward()}\n                  />\n                </div>\n              </FieldsetGroup>\n            </div>\n            <IconButton\n              partPrefix=\"sidebar-remove-word\"\n              class={`${\n                highlightKeywords.highlightNone\n                  ? 'pointer-events-none opacity-50'\n                  : ''\n              }`}\n              tabIndex={highlightKeywords.highlightNone ? '-1' : '0'}\n              ariaPressed={(!wordIsEnabled).toString()}\n              style=\"text-transparent\"\n              icon={wordIsEnabled ? Remove : Add}\n              ariaLabel={i18n.t('quickview-remove-word')}\n              onClick={() => {\n                onHighlightKeywords({\n                  ...highlightKeywords,\n                  keywords: {\n                    ...highlightKeywords.keywords,\n                    [keyword.text]: {\n                      enabled: !wordIsEnabled,\n                      indexIdentifier: keyword.indexIdentifier,\n                    },\n                  },\n                });\n              }}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import {SearchEngine} from '@coveo/headless';\nimport {FunctionalComponent, h} from '@stencil/core';\n\nconst documentIdentifierInIframe = 'CoveoDocIdentifier';\n\nconst writeDocument = (documentWriter: Document, content: string) => {\n  documentWriter.open();\n  documentWriter.write(content);\n  documentWriter.close();\n  if (documentWriter.scrollingElement) {\n    documentWriter.scrollingElement.scrollTop = 0;\n  }\n};\n\nconst currentResultAlreadyWrittenToDocument = (\n  documentWriter: Document,\n  uniqueIdentifier: string\n) => {\n  const currentDocIdentifier = documentWriter.getElementById(\n    documentIdentifierInIframe\n  );\n\n  return (\n    currentDocIdentifier &&\n    currentDocIdentifier.textContent === uniqueIdentifier\n  );\n};\n\nconst ensureSameResultIsNotOverwritten = (\n  documentWriter: Document,\n  uniqueIdentifier: string\n) => {\n  const docIdentifier = documentWriter.createElement('div');\n  docIdentifier.style.display = 'none';\n  docIdentifier.setAttribute('aria-hidden', 'true');\n  docIdentifier.id = documentIdentifierInIframe;\n  docIdentifier.textContent = uniqueIdentifier;\n  documentWriter.body.appendChild(docIdentifier);\n};\n\nconst warnAboutLimitedUsageQuickview = (logger?: SearchEngine['logger']) => {\n  logger?.warn(\n    'Quickview initialized in restricted mode due to incompatible sandboxing environment. Keywords hit navigation will be disabled.'\n  );\n};\n\nexport const QuickviewIframe: FunctionalComponent<{\n  content?: string;\n  onSetIframeRef: (ref: HTMLIFrameElement) => void;\n  uniqueIdentifier?: string;\n  sandbox?: string;\n  src?: string;\n  logger?: SearchEngine['logger'];\n}> = ({onSetIframeRef, uniqueIdentifier, content, sandbox, src, logger}) => {\n  // When a document is written with document.open/document.write/document.close\n  // it is not synchronous and the content of the iframe is only available to be queried at the end of the current call stack.\n  // This add a \"wait\" (setTimeout 0) before calling the `onSetIframeRef` from the parent modal quickview\n  const waitForIframeContentToBeWritten = () => {\n    return new Promise((resolve) => setTimeout(resolve));\n  };\n\n  return (\n    <iframe\n      src=\"about:blank\"\n      class=\"h-full w-full\"\n      sandbox={sandbox}\n      ref={async (el) => {\n        const iframeRef = el as HTMLIFrameElement;\n\n        if (!uniqueIdentifier || !content) {\n          return;\n        }\n\n        const documentWriter = iframeRef.contentDocument;\n        if (!documentWriter) {\n          if (src) {\n            warnAboutLimitedUsageQuickview(logger);\n            iframeRef.src = src;\n          }\n\n          return;\n        }\n        if (\n          currentResultAlreadyWrittenToDocument(\n            documentWriter,\n            uniqueIdentifier\n          )\n        ) {\n          return;\n        }\n\n        writeDocument(documentWriter, content);\n        ensureSameResultIsNotOverwritten(documentWriter, uniqueIdentifier);\n\n        await waitForIframeContentToBeWritten();\n        onSetIframeRef(iframeRef);\n      }}\n    ></iframe>\n  );\n};\n","import {HighlightKeywords} from '../atomic-quickview-modal/atomic-quickview-modal';\nimport {QuickviewWordHighlight} from '../quickview-word-highlight/quickview-word-highlight';\n\nconst buildPreviewBar = (documentWriter: Document) => {\n  const previewBarId = 'CoveoPreviewBar';\n  const bar =\n    documentWriter.getElementById(previewBarId) ||\n    documentWriter.createElement('div');\n\n  bar.id = previewBarId;\n  bar.innerHTML = '';\n  bar.style.position = 'fixed';\n  bar.style.top = '0';\n  bar.style.right = '0';\n  bar.style.width = '15px';\n  bar.style.height = '100%';\n  bar.setAttribute('aria-hidden', 'true');\n  return bar;\n};\n\nconst buildPreviewUnit = (\n  documentWriter: Document,\n  word: QuickviewWordHighlight,\n  wordElement: HTMLElement,\n  docHeight: number,\n  highlightKeywords: HighlightKeywords\n) => {\n  const previewUnit = documentWriter.createElement('div');\n  if (highlightKeywords.keywords[word.text]?.enabled === false) {\n    previewUnit.style.display = 'none';\n    return previewUnit;\n  }\n\n  const elementPosition = wordElement.getBoundingClientRect().top;\n\n  previewUnit.style.position = 'absolute';\n  previewUnit.style.top = `${(elementPosition / docHeight) * 100}%`;\n  previewUnit.style.width = '100%';\n  previewUnit.style.height = '1px';\n  previewUnit.style.border = `1px solid ${word.previewBorderColor}`;\n  previewUnit.style.backgroundColor = word.color;\n  return previewUnit;\n};\n\nexport const buildQuickviewPreviewBar = (\n  words: Record<string, QuickviewWordHighlight>,\n  highlightKeywords: HighlightKeywords,\n  iframe?: HTMLIFrameElement\n) => {\n  if (!iframe) {\n    return;\n  }\n  const documentWriter = iframe.contentDocument;\n  if (!documentWriter) {\n    return;\n  }\n  const bar = buildPreviewBar(documentWriter);\n  if (highlightKeywords.highlightNone) {\n    bar.remove();\n    return;\n  }\n  const docHeight = documentWriter.body.scrollHeight;\n\n  Object.values(words).forEach((word) => {\n    word.elements.forEach((wordElement) => {\n      const previewUnit = buildPreviewUnit(\n        documentWriter,\n        word,\n        wordElement,\n        docHeight,\n        highlightKeywords\n      );\n\n      bar.appendChild(previewUnit);\n    });\n  });\n  documentWriter.body.appendChild(bar);\n};\n","export const rgbToHsv = (r: number, g: number, b: number) => {\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n\n  let h: number;\n  const v = max;\n\n  const d = max - min;\n  const s = max === 0 ? 0 : d / max;\n\n  if (max === min) {\n    h = 0;\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n      default:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n\n  return {h, s, v};\n};\n\nexport const hsvToRgb = (h: number, s: number, v: number) => {\n  let r, g, b;\n\n  const i = Math.floor(h * 6);\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      (r = v), (g = t), (b = p);\n      break;\n    case 1:\n      (r = q), (g = v), (b = p);\n      break;\n    case 2:\n      (r = p), (g = v), (b = t);\n      break;\n    case 3:\n      (r = p), (g = q), (b = v);\n      break;\n    case 4:\n      (r = t), (g = p), (b = v);\n      break;\n    case 5:\n    default:\n      (r = v), (g = p), (b = q);\n      break;\n  }\n\n  return {\n    r: Math.round(r),\n    g: Math.round(g),\n    b: Math.round(b),\n  };\n};\n","import {TermsToHighlight} from '@coveo/headless';\nimport {hsvToRgb, rgbToHsv} from '../../../../utils/color-utils';\n\nexport const HIGHLIGHT_PREFIX = 'CoveoHighlight';\nexport class QuickviewWordHighlight {\n  public text: string;\n  public indexIdentifier: string;\n  public occurrences = 0;\n  public color: string;\n  public focusedColor: string;\n  public previewBorderColor: string;\n  public elements: HTMLElement[] = [];\n\n  private currentNavigationPosition = -1;\n\n  constructor(\n    private stemmingInfoFromIndex: TermsToHighlight,\n    keywordElementInIframe: HTMLElement\n  ) {\n    const parsed = this.parseKeywordIdentifier(keywordElementInIframe);\n    if (!parsed) {\n      throw 'Invalid keyword identifier for quickview';\n    }\n\n    this.text = this.getText(keywordElementInIframe);\n    this.indexIdentifier = `${parsed.keywordIdentifier}`;\n    this.color = keywordElementInIframe.style.backgroundColor;\n    this.focusedColor = this.computeInvertedColor();\n    this.previewBorderColor = this.computeSaturatedColor();\n\n    this.addElement(keywordElementInIframe);\n  }\n\n  public addElement(keywordElementInIframe: HTMLElement) {\n    this.occurrences++;\n    this.elements.push(keywordElementInIframe);\n  }\n\n  public navigateForward() {\n    this.currentNavigationPosition++;\n    if (this.currentNavigationPosition >= this.elements.length) {\n      this.currentNavigationPosition = 0;\n    }\n    this.highlightNavigation();\n    this.putElementIntoView();\n    return this.elements[this.currentNavigationPosition];\n  }\n\n  public navigateBackward() {\n    this.currentNavigationPosition--;\n    if (this.currentNavigationPosition < 0) {\n      this.currentNavigationPosition = this.elements.length - 1;\n    }\n    this.highlightNavigation();\n    this.putElementIntoView();\n    return this.elements[this.currentNavigationPosition];\n  }\n\n  private isTaggedWord(element: HTMLElement) {\n    return element.nodeName.toLowerCase() === 'coveotaggedword';\n  }\n\n  private highlightNavigation() {\n    const currentElement = this.elements[this.currentNavigationPosition];\n    const otherElements = this.elements.filter((el) => el !== currentElement);\n    currentElement.style.color = this.color;\n    currentElement.style.backgroundColor = this.focusedColor;\n    otherElements.forEach((element) => {\n      element.style.color = '';\n      element.style.backgroundColor = this.color;\n    });\n  }\n\n  private putElementIntoView() {\n    const element = this.elements[this.currentNavigationPosition];\n    element.scrollIntoView();\n  }\n\n  private getText(element: HTMLElement) {\n    const innerTextOfHTMLElement = this.getHighlightedInnerText(element);\n    return this.resolveOriginalTerm(innerTextOfHTMLElement).trim();\n  }\n\n  private resolveOriginalTerm(highlight: string): string {\n    // First try to find either an exact match between the highlight and the original non-stemmed keyword.\n    // Otherwise try to find a match between the highlight and the stemming keyword expansions\n    // If nothing is found (which should not normally happen...), simply return the highlight keyword as is.\n\n    const found = Object.keys(this.stemmingInfoFromIndex).find(\n      (originalTerm) => {\n        const originalTermMatch =\n          originalTerm.toLowerCase() === highlight.toLowerCase();\n        if (originalTermMatch) {\n          return true;\n        }\n        const stemmingExpansions = this.stemmingInfoFromIndex[originalTerm];\n        if (!stemmingExpansions) {\n          return false;\n        }\n\n        const stemmingExpansionMatch = stemmingExpansions.find(\n          (stemmingExpansion) =>\n            stemmingExpansion.toLowerCase() === highlight.toLowerCase()\n        );\n        return stemmingExpansionMatch;\n      }\n    );\n    return found || highlight;\n  }\n\n  private getHighlightedInnerText(element: HTMLElement): string {\n    if (!this.isTaggedWord(element)) {\n      return this.getTextOfHTMLElement(element);\n    }\n\n    const children = Array.from(element.children) as HTMLElement[];\n    if (children.length >= 1) {\n      return this.getTextOfHTMLElement(children[0]);\n    }\n\n    return '';\n  }\n\n  private parseKeywordIdentifier(element: HTMLElement) {\n    const parts = element.id\n      .substring(HIGHLIGHT_PREFIX.length + 1)\n      .match(/^([0-9]+)\\.([0-9]+)\\.([0-9]+)$/);\n\n    if (!parts || parts.length <= 3) {\n      return null;\n    }\n\n    return {\n      keywordIdentifier: parts[1],\n      keywordTermPart: parseInt(parts[3], 10),\n    };\n  }\n\n  private getTextOfHTMLElement(el: HTMLElement) {\n    return el.innerText || el.textContent || '';\n  }\n\n  private computeInvertedColor() {\n    const {r, g, b} = this.extractRgb();\n    return `rgb(${255 - r}, ${255 - g}, ${255 - b})`;\n  }\n\n  private computeSaturatedColor() {\n    const {r, g, b} = this.extractRgb();\n    const {h, s, v} = rgbToHsv(r, g, b);\n    let newSaturation = s * 2;\n    if (newSaturation > 1) {\n      newSaturation = 1;\n    }\n    const {\n      r: rSaturated,\n      g: gSaturated,\n      b: bSaturated,\n    } = hsvToRgb(h, newSaturation, v);\n    return `rgb(${rSaturated}, ${gSaturated}, ${bSaturated})`;\n  }\n\n  private extractRgb() {\n    const rgbExtracted = this.color.match(/\\d+/g);\n    if (!rgbExtracted) {\n      return {r: 255, g: 255, b: 255};\n    }\n\n    return {\n      r: parseInt(rgbExtracted[0], 10),\n      g: parseInt(rgbExtracted[1], 10),\n      b: parseInt(rgbExtracted[2], 10),\n    };\n  }\n}\n\nexport const getWordsHighlights = (\n  stemmingInfoFromIndex: TermsToHighlight,\n  iframe?: HTMLIFrameElement\n) => {\n  const wordsHighlights: Record<string, QuickviewWordHighlight> = {};\n  if (!iframe) {\n    return wordsHighlights;\n  }\n\n  iframe.contentDocument?.body\n    .querySelectorAll(`[id^=\"${HIGHLIGHT_PREFIX}\"]`)\n    .forEach((el) => {\n      const wordHTMLElementToHighlight = el as HTMLElement;\n\n      const wordHighlight = new QuickviewWordHighlight(\n        stemmingInfoFromIndex,\n        wordHTMLElementToHighlight\n      );\n\n      if (!wordHighlight.text) {\n        return;\n      }\n\n      const alreadyScannedKeyword =\n        wordsHighlights[wordHighlight.indexIdentifier];\n\n      if (alreadyScannedKeyword) {\n        alreadyScannedKeyword.addElement(wordHTMLElementToHighlight);\n      } else {\n        wordsHighlights[wordHighlight.indexIdentifier] = wordHighlight;\n      }\n    });\n\n  return wordsHighlights;\n};\n","@import '../../../../global/global.pcss';\n@import '../../../../utils/tailwind-utilities/link-style.tw.css';\n\n.atomic-quickview-modal {\n  &::part(backdrop) {\n    grid-template-columns: 1fr max(80vw, 30rem) 1fr;\n  }\n  &::part(body),\n  &::part(header),\n  &::part(footer) {\n    @apply max-w-full;\n  }\n\n  &::part(footer) {\n    @apply flex justify-center;\n  }\n\n  &::part(body-wrapper) {\n    @apply h-full overflow-hidden p-0;\n  }\n\n  &::part(body) {\n    @apply h-full;\n  }\n\n  &::part(backdrop) {\n    grid-template-rows: 1fr 100% 3fr;\n  }\n\n  &::part(header-wrapper) {\n    @apply bg-neutral-light;\n  }\n\n  a {\n    @apply link-style;\n  }\n}\n","import {\n  buildInteractiveResult,\n  Result,\n  InteractiveResult,\n  TermsToHighlight,\n} from '@coveo/headless';\nimport {\n  Component,\n  Event,\n  EventEmitter,\n  h,\n  Prop,\n  State,\n  Watch,\n  Method,\n  VNode,\n  Fragment,\n} from '@stencil/core';\nimport CloseIcon from '../../../../images/close.svg';\nimport {\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {IconButton} from '../../../common/iconButton';\nimport {LinkWithItemAnalytics} from '../../../common/item-link/item-link';\nimport {Button} from '../../../common/stencil-button';\nimport {Bindings} from '../../atomic-search-interface/atomic-search-interface';\nimport {QuickviewSidebar} from '../atomic-quickview-sidebar/atomic-quickview-sidebar';\nimport {QuickviewIframe} from '../quickview-iframe/quickview-iframe';\nimport {buildQuickviewPreviewBar} from '../quickview-preview-bar/quickview-preview-bar';\nimport {\n  getWordsHighlights,\n  HIGHLIGHT_PREFIX,\n  QuickviewWordHighlight,\n} from '../quickview-word-highlight/quickview-word-highlight';\n\nexport interface HighlightKeywords {\n  highlightNone: boolean;\n  keywords: {\n    [text: string]: {\n      indexIdentifier: string;\n      enabled: boolean;\n    };\n  };\n}\n\n/**\n * The modal opened when clicking on a quickview button.\n * Do not use this component directly; use `atomic-quickview` instead.\n *\n * @part quickview-modal-header-icon - The close icon of the modal.\n * @part quickview-modal-header-title - The title of the modal.\n */\n@Component({\n  tag: 'atomic-quickview-modal',\n  styleUrl: 'atomic-quickview-modal.pcss',\n  shadow: true,\n})\nexport class AtomicQuickviewModal implements InitializableComponent {\n  @InitializeBindings() public bindings!: Bindings;\n  @State() public error!: Error;\n\n  @State() private highlightKeywords: HighlightKeywords = {\n    highlightNone: false,\n    keywords: {},\n  };\n  @Watch('highlightKeywords')\n  watchHighlightKeywords() {\n    this.handleHighlightsScripts();\n  }\n\n  @Event({eventName: 'atomic/quickview/next'}) nextQuickview?: EventEmitter;\n  @Event({eventName: 'atomic/quickview/previous'})\n  previousQuickview?: EventEmitter;\n\n  @State() private minimizeSidebar = false;\n  @State() private words: Record<string, QuickviewWordHighlight> = {};\n  private iframeRef?: HTMLIFrameElement;\n\n  @Prop({mutable: true, reflect: false}) content?: string;\n  @Prop({mutable: true, reflect: false}) result?: Result;\n  @Prop() current?: number;\n  @Prop() total?: number;\n  @Prop() sandbox?: string;\n  @Prop() modalCloseCallback?: () => void;\n\n  private interactiveResult?: InteractiveResult;\n\n  public componentWillLoad(): void {\n    this.minimizeSidebar = this.bindings.store.isMobile();\n  }\n\n  @Method()\n  public async reset() {\n    this.highlightKeywords = {\n      highlightNone: false,\n      keywords: {},\n    };\n    this.minimizeSidebar = false;\n    this.iframeRef = undefined;\n    this.content = undefined;\n    this.result = undefined;\n    this.interactiveResult = undefined;\n  }\n\n  private renderHeader() {\n    let headerContent: VNode | null = null;\n    if (this.result) {\n      this.interactiveResult = buildInteractiveResult(this.bindings.engine, {\n        options: {result: this.result},\n      });\n      headerContent = (\n        <Fragment>\n          <LinkWithItemAnalytics\n            href={this.result?.clickUri}\n            onSelect={() => this.interactiveResult?.select()}\n            onBeginDelayedSelect={() =>\n              this.interactiveResult?.beginDelayedSelect()\n            }\n            onCancelPendingSelect={() =>\n              this.interactiveResult?.cancelPendingSelect()\n            }\n            className=\"truncate\"\n            part=\"quickview-modal-header-title\"\n          >\n            {this.result.title}\n          </LinkWithItemAnalytics>\n          <IconButton\n            partPrefix=\"quickview-modal-header\"\n            icon={CloseIcon}\n            onClick={() => this.onClose()}\n            ariaLabel={this.bindings.i18n.t('close')}\n            style=\"text-transparent\"\n            title={this.bindings.i18n.t('close')}\n          />\n        </Fragment>\n      );\n    }\n    return (\n      <div slot=\"header\" class=\"flex w-full items-center justify-between\">\n        {headerContent}\n      </div>\n    );\n  }\n\n  private renderBody() {\n    return (\n      <div slot=\"body\" class=\"grid h-full grid-cols-[min-content_auto]\">\n        <div\n          class=\"h-full overflow-y-auto\"\n          style={{backgroundColor: 'var(--atomic-neutral-light)'}}\n        >\n          <QuickviewSidebar\n            words={this.words}\n            i18n={this.bindings.i18n}\n            highlightKeywords={this.highlightKeywords}\n            onHighlightKeywords={(highlight) =>\n              (this.highlightKeywords = highlight)\n            }\n            minimized={this.minimizeSidebar}\n            onMinimize={(minimize) => (this.minimizeSidebar = minimize)}\n          />\n        </div>\n        <div class=\"relative overflow-auto\">\n          <QuickviewIframe\n            logger={this.logger}\n            src={this.quickviewSrc}\n            sandbox={this.sandbox}\n            uniqueIdentifier={this.quickviewUniqueIdentifier}\n            content={this.content}\n            onSetIframeRef={async (ref) => {\n              this.iframeRef = ref;\n              this.words = getWordsHighlights(\n                this.termsToHighlight,\n                this.iframeRef\n              );\n              this.handleHighlightsScripts();\n            }}\n          />\n          {buildQuickviewPreviewBar(\n            this.words,\n            this.highlightKeywords,\n            this.iframeRef\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  private renderFooter() {\n    return (\n      <div slot=\"footer\" class=\"flex items-center gap-2\">\n        <Button\n          class=\"p-2\"\n          style=\"square-neutral\"\n          onClick={() => this.previousQuickview?.emit()}\n          disabled={this.current === 1}\n          text={this.bindings.i18n.t('quickview-previous')}\n        ></Button>\n        <p class=\"text-center\">\n          {this.bindings.i18n.t('showing-results-of', {\n            first: this.current,\n            total: this.total,\n          })}\n        </p>\n        <Button\n          class=\"p-2\"\n          style=\"square-neutral\"\n          onClick={() => this.nextQuickview?.emit()}\n          disabled={this.current === this.total}\n          text={this.bindings.i18n.t('quickview-next')}\n        ></Button>\n      </div>\n    );\n  }\n\n  private onClose() {\n    this.content = undefined;\n    this.result = undefined;\n    this.modalCloseCallback && this.modalCloseCallback();\n  }\n\n  private get isOpen() {\n    return !!this.content && !!this.result;\n  }\n\n  private get highlightScriptId() {\n    return 'CoveoDisableHighlightStyle';\n  }\n\n  private get logger() {\n    return this.bindings.engine.logger;\n  }\n\n  private get quickviewSrc() {\n    return this.bindings.engine.state.resultPreview?.contentURL;\n  }\n\n  private enableHighlights() {\n    this.removeDisableHighlightScript();\n  }\n\n  private enableHighlightsSpecificKeyword(identifier: string) {\n    this.removeDisableHighlightScript(identifier);\n  }\n\n  private disableHighlights() {\n    this.createDisableHighlightScript();\n  }\n\n  private disableHighlightsSpecificKeyword(identifier: string) {\n    this.createDisableHighlightScript(identifier);\n  }\n\n  private removeDisableHighlightScript(identifier?: string) {\n    const doc = this.iframeRef?.contentWindow?.document;\n    if (!doc) {\n      return;\n    }\n    doc\n      .getElementById(\n        `${this.highlightScriptId}${identifier ? `:${identifier}` : ''}`\n      )\n      ?.remove();\n  }\n\n  private createDisableHighlightScript(identifier?: string) {\n    const doc = this.iframeRef?.contentWindow?.document;\n    if (!doc) {\n      return;\n    }\n\n    const head = doc.head;\n    const scriptId = `${this.highlightScriptId}${\n      identifier ? `:${identifier}` : ''\n    }`;\n    const style =\n      doc.getElementById(scriptId) || this.bindings.createStyleElement();\n    style.setAttribute('id', scriptId);\n    head.appendChild(style);\n    style.appendChild(\n      doc.createTextNode(`[id^=\"${HIGHLIGHT_PREFIX}${\n        identifier ? `:${identifier}` : ''\n      }\"] {\n      background-color: inherit !important;\n      color: inherit !important;\n    }`)\n    );\n  }\n\n  private get termsToHighlight() {\n    const flatPhrasesToHighlight: TermsToHighlight = {};\n\n    const phrasesToHighlight =\n      this.bindings.engine.state.search.response.phrasesToHighlight;\n\n    Object.entries(phrasesToHighlight).forEach(([phrase, keywords]) => {\n      flatPhrasesToHighlight[phrase] = Object.entries(keywords).flatMap(\n        ([keywordEntry, keywordStemming]) => {\n          return [keywordEntry, ...keywordStemming];\n        }\n      );\n    });\n\n    return {\n      ...this.bindings.engine.state.search.response.termsToHighlight,\n      ...flatPhrasesToHighlight,\n    };\n  }\n\n  private get requestId() {\n    return this.bindings.engine.state.search.requestId;\n  }\n\n  private get quickviewUniqueIdentifier() {\n    return this.result?.uniqueId + this.requestId;\n  }\n\n  private handleHighlightsScripts() {\n    if (!this.highlightKeywords.highlightNone) {\n      this.enableHighlights();\n    } else {\n      this.disableHighlights();\n    }\n    Object.values(this.highlightKeywords.keywords).forEach((word) => {\n      if (word.enabled) {\n        this.enableHighlightsSpecificKeyword(word.indexIdentifier);\n      } else {\n        this.disableHighlightsSpecificKeyword(word.indexIdentifier);\n      }\n    });\n  }\n\n  public render() {\n    return (\n      <atomic-modal\n        fullscreen={this.bindings.store.isMobile()}\n        class={'atomic-quickview-modal'}\n        isOpen={this.isOpen}\n        close={() => this.onClose()}\n      >\n        {this.renderHeader()}\n        {this.renderBody()}\n        {this.renderFooter()}\n      </atomic-modal>\n    );\n  }\n}\n"],"mappings":"+qDAaA,MAAMA,EAA4B,mCAW3B,MAAMC,EACXC,IAEA,MAAMC,MAACA,EAAKC,UAAEA,GAAaF,EAC3B,MAAMG,EAAgBC,OAAOC,OAAOJ,GAAOK,OAE3C,GAAIH,IAAkB,EAAG,CACvB,M,CAGF,MAAMI,EACJC,EAACC,EAAc,IAAKT,EAAOU,YAAaP,IAG1C,OACEK,EAAA,OAAKG,MAAM,sCACRT,GAAaK,EACdC,EAAA,OAAKG,MAAM,qCACTH,EAAA,OAAKG,MAAM,qBACTH,EAACI,EAAyB,IAAKZ,MAE/BE,GAAaM,EAAA,WAAMD,KAGrBL,GAAaM,EAACK,EAAQ,IAAKb,EAAOC,MAAOA,IACvC,EAIV,MAAMQ,EAKF,EAAEK,OAAMZ,YAAWa,aAAYC,oBAAmBN,iBACpDF,EAACS,EAAU,CACTC,WAAW,mBACXC,KAAMC,EACNC,MAAM,mBACNC,MAAOR,EAAKS,EAAE,+BACdC,UAAWV,EAAKS,EAAE,+BAClBE,QAAS,IAAMV,GAAYb,GAC3BwB,MACEV,GAAqBd,EAAYM,EAAA,YAAOE,GAAsBiB,UAEhEhB,MAAO,SAAST,EAAY,GAAK,YACjC0B,eAAgB1B,GAAW2B,WAC3BC,aAAchC,IAIlB,MAAMc,EAKF,EAAEE,OAAME,oBAAmBe,sBAAqB7B,eAClDM,EAACwB,EAAQ,KACPxB,EAACyB,EAAe,CACdC,KAAMpB,EAAKS,EAAE,sBACbZ,MAAM,OACNwB,GAAG,8CACHC,SAAUpB,EAAkBqB,cAC5BC,SAAWF,GACTL,EAAoB,IACff,EACHqB,eAAgBD,OAIpBlC,GACAM,EAAA,SACEG,MAAM,6CACN4B,QAAQ,+CAEPzB,EAAKS,EAAE,wBAMhB,MAAMV,EAOF,EAAEZ,QAAOa,OAAME,oBAAmBe,yBAElCvB,EAAA,OAAK2B,GAAIrC,GACNM,OAAOC,OAAOJ,GAAOuC,KAAKC,IACzB,MAAMC,GACH1B,EAAkBqB,gBAClBrB,EAAkB2B,SAASF,EAAQP,QAAUP,WAC5CX,EAAkB2B,SAASF,EAAQP,MAAMU,UAAY,MAEzD,OACEpC,EAAA,OACEqC,IAAKJ,EAAQP,KACbvB,MAAM,wDAENH,EAAA,OACEG,MAAO,0FACJ+B,EAAgB,iCAAmC,MAGtDlC,EAAA,OACEG,MAAM,sCAAqC,cAC/B,QAEZH,EAAA,OACEG,MAAM,yBACNU,MAAO,CAACyB,gBAAiBL,EAAQM,SAEnCvC,EAAA,OAAKG,MAAM,+BAA+B8B,EAAQP,MAClD1B,EAAA,OAAKG,MAAM,a,IAER,IAAIqC,KAAKC,aAAanC,EAAKoC,SAAU,CACpCC,SAAU,YACTC,OAAOX,EAAQY,a,MAItB7C,EAAC8C,EAAa,CACZC,MAAOzC,EAAKS,EAAE,8BAA+B,CAC3C8B,YAAaZ,EAAQY,YACrBZ,QAASA,EAAQP,QAGnB1B,EAAA,OAAKG,MAAM,aACTH,EAACS,EAAU,CACTC,WAAW,eACXC,KAAMqC,EACNC,UAAWf,EACXrB,MAAM,mBACNV,MAAM,WACNa,UAAWV,EAAKS,EAAE,QAClBD,MAAOR,EAAKS,EAAE,QACdE,QAAS,IAAMgB,EAAQiB,oBAEzBlD,EAACS,EAAU,CACTC,WAAW,mBACXC,KAAMwC,EACNF,UAAWf,EACXrB,MAAM,mBACNV,MAAM,WACNa,UAAWV,EAAKS,EAAE,YAClBD,MAAOR,EAAKS,EAAE,YACdE,QAAS,IAAMgB,EAAQmB,wBAK/BpD,EAACS,EAAU,CACTC,WAAW,sBACXP,MAAO,GACLK,EAAkBqB,cACd,iCACA,KAENwB,SAAU7C,EAAkBqB,cAAgB,KAAO,IACnDyB,cAAepB,GAAeb,WAC9BR,MAAM,mBACNF,KAAMuB,EAAgBqB,EAASC,EAC/BxC,UAAWV,EAAKS,EAAE,yBAClBE,QAAS,KACPM,EAAoB,IACff,EACH2B,SAAU,IACL3B,EAAkB2B,SACrB,CAACF,EAAQP,MAAO,CACdU,SAAUF,EACVuB,gBAAiBxB,EAAQwB,mBAG7B,IAGF,KCxMhB,MAAMC,EAA6B,qBAEnC,MAAMC,EAAgB,CAACC,EAA0BC,KAC/CD,EAAeE,OACfF,EAAeG,MAAMF,GACrBD,EAAeI,QACf,GAAIJ,EAAeK,iBAAkB,CACnCL,EAAeK,iBAAiBC,UAAY,C,GAIhD,MAAMC,EAAwC,CAC5CP,EACAQ,KAEA,MAAMC,EAAuBT,EAAeU,eAC1CZ,GAGF,OACEW,GACAA,EAAqBE,cAAgBH,CAAgB,EAIzD,MAAMI,EAAmC,CACvCZ,EACAQ,KAEA,MAAMK,EAAgBb,EAAec,cAAc,OACnDD,EAAc5D,MAAM8D,QAAU,OAC9BF,EAAcG,aAAa,cAAe,QAC1CH,EAAc9C,GAAK+B,EACnBe,EAAcF,YAAcH,EAC5BR,EAAeiB,KAAKC,YAAYL,EAAc,EAGhD,MAAMM,EAAkCC,IACtCA,GAAQC,KACN,iIACD,EAGI,MAAMC,EAOR,EAAEC,iBAAgBf,mBAAkBP,UAASuB,UAASC,MAAKL,aAI9D,MAAMM,EAAkC,IAC/B,IAAIC,SAASC,GAAYC,WAAWD,KAG7C,OACExF,EAAA,UACEqF,IAAI,cACJlF,MAAM,gBACNiF,QAASA,EACTM,IAAKC,MAAOC,IACV,MAAMC,EAAYD,EAElB,IAAKxB,IAAqBP,EAAS,CACjC,M,CAGF,MAAMD,EAAiBiC,EAAUC,gBACjC,IAAKlC,EAAgB,CACnB,GAAIyB,EAAK,CACPN,EAA+BC,GAC/Ba,EAAUR,IAAMA,C,CAGlB,M,CAEF,GACElB,EACEP,EACAQ,GAEF,CACA,M,CAGFT,EAAcC,EAAgBC,GAC9BW,EAAiCZ,EAAgBQ,SAE3CkB,IACNH,EAAeU,EAAU,GAEnB,EC9Fd,MAAME,EAAmBnC,IACvB,MAAMoC,EAAe,kBACrB,MAAMC,EACJrC,EAAeU,eAAe0B,IAC9BpC,EAAec,cAAc,OAE/BuB,EAAItE,GAAKqE,EACTC,EAAIC,UAAY,GAChBD,EAAIpF,MAAMsF,SAAW,QACrBF,EAAIpF,MAAMuF,IAAM,IAChBH,EAAIpF,MAAMwF,MAAQ,IAClBJ,EAAIpF,MAAMyF,MAAQ,OAClBL,EAAIpF,MAAM0F,OAAS,OACnBN,EAAIrB,aAAa,cAAe,QAChC,OAAOqB,CAAG,EAGZ,MAAMO,EAAmB,CACvB5C,EACA6C,EACAC,EACAC,EACAnG,KAEA,MAAMoG,EAAchD,EAAec,cAAc,OACjD,GAAIlE,EAAkB2B,SAASsE,EAAK/E,OAAOU,UAAY,MAAO,CAC5DwE,EAAY/F,MAAM8D,QAAU,OAC5B,OAAOiC,C,CAGT,MAAMC,EAAkBH,EAAYI,wBAAwBV,IAE5DQ,EAAY/F,MAAMsF,SAAW,WAC7BS,EAAY/F,MAAMuF,IAAM,GAAIS,EAAkBF,EAAa,OAC3DC,EAAY/F,MAAMyF,MAAQ,OAC1BM,EAAY/F,MAAM0F,OAAS,MAC3BK,EAAY/F,MAAMkG,OAAS,aAAaN,EAAKO,qBAC7CJ,EAAY/F,MAAMyB,gBAAkBmE,EAAKlE,MACzC,OAAOqE,CAAW,EAGb,MAAMK,EAA2B,CACtCxH,EACAe,EACA0G,KAEA,IAAKA,EAAQ,CACX,M,CAEF,MAAMtD,EAAiBsD,EAAOpB,gBAC9B,IAAKlC,EAAgB,CACnB,M,CAEF,MAAMqC,EAAMF,EAAgBnC,GAC5B,GAAIpD,EAAkBqB,cAAe,CACnCoE,EAAIkB,SACJ,M,CAEF,MAAMR,EAAY/C,EAAeiB,KAAKuC,aAEtCxH,OAAOC,OAAOJ,GAAO4H,SAASZ,IAC5BA,EAAKa,SAASD,SAASX,IACrB,MAAME,EAAcJ,EAClB5C,EACA6C,EACAC,EACAC,EACAnG,GAGFyF,EAAInB,YAAY8B,EAAY,GAC5B,IAEJhD,EAAeiB,KAAKC,YAAYmB,EAAI,EC5E/B,MAAMsB,EAAW,CAACC,EAAWC,EAAWC,KAC7C,MAAMC,EAAMC,KAAKD,IAAIH,EAAGC,EAAGC,GAC3B,MAAMG,EAAMD,KAAKC,IAAIL,EAAGC,EAAGC,GAE3B,IAAI1H,EACJ,MAAM8H,EAAIH,EAEV,MAAMI,EAAIJ,EAAME,EAChB,MAAMG,EAAIL,IAAQ,EAAI,EAAII,EAAIJ,EAE9B,GAAIA,IAAQE,EAAK,CACf7H,EAAI,C,KACC,CACL,OAAQ2H,GACN,KAAKH,EACHxH,GAAKyH,EAAIC,GAAKK,GAAKN,EAAIC,EAAI,EAAI,GAC/B,MACF,KAAKD,EACHzH,GAAK0H,EAAIF,GAAKO,EAAI,EAClB,MACF,KAAKL,EACL,QACE1H,GAAKwH,EAAIC,GAAKM,EAAI,EAClB,MAEJ/H,GAAK,C,CAGP,MAAO,CAACA,IAAGgI,EAAGF,IAAE,EAGX,MAAMG,EAAW,CAACjI,EAAWgI,EAAWF,KAC7C,IAAIN,EAAGC,EAAGC,EAEV,MAAMQ,EAAIN,KAAKO,MAAMnI,EAAI,GACzB,MAAMoI,EAAIpI,EAAI,EAAIkI,EAClB,MAAMG,EAAIP,GAAK,EAAIE,GACnB,MAAMM,EAAIR,GAAK,EAAIM,EAAIJ,GACvB,MAAMjH,EAAI+G,GAAK,GAAK,EAAIM,GAAKJ,GAE7B,OAAQE,EAAI,GACV,KAAK,EACFV,EAAIM,EAAKL,EAAI1G,EAAK2G,EAAIW,EACvB,MACF,KAAK,EACFb,EAAIc,EAAKb,EAAIK,EAAKJ,EAAIW,EACvB,MACF,KAAK,EACFb,EAAIa,EAAKZ,EAAIK,EAAKJ,EAAI3G,EACvB,MACF,KAAK,EACFyG,EAAIa,EAAKZ,EAAIa,EAAKZ,EAAII,EACvB,MACF,KAAK,EACFN,EAAIzG,EAAK0G,EAAIY,EAAKX,EAAII,EACvB,MACF,KAAK,EACL,QACGN,EAAIM,EAAKL,EAAIY,EAAKX,EAAIY,EACvB,MAGJ,MAAO,CACLd,EAAGI,KAAKW,MAAMf,GACdC,EAAGG,KAAKW,MAAMd,GACdC,EAAGE,KAAKW,MAAMb,GACf,EC/DI,MAAMc,EAAmB,iB,MACnBC,EAWX,WAAAC,CACUC,EACRC,GADQC,KAAAF,wBATHE,KAAAhG,YAAc,EAIdgG,KAAAvB,SAA0B,GAEzBuB,KAAAC,2BAA6B,EAMnC,MAAMC,EAASF,KAAKG,uBAAuBJ,GAC3C,IAAKG,EAAQ,CACX,KAAM,0C,CAGRF,KAAKnH,KAAOmH,KAAKI,QAAQL,GACzBC,KAAKpF,gBAAkB,GAAGsF,EAAOG,oBACjCL,KAAKtG,MAAQqG,EAAuB/H,MAAMyB,gBAC1CuG,KAAKM,aAAeN,KAAKO,uBACzBP,KAAK7B,mBAAqB6B,KAAKQ,wBAE/BR,KAAKS,WAAWV,E,CAGX,UAAAU,CAAWV,GAChBC,KAAKhG,cACLgG,KAAKvB,SAASiC,KAAKX,E,CAGd,eAAA1F,GACL2F,KAAKC,4BACL,GAAID,KAAKC,2BAA6BD,KAAKvB,SAASxH,OAAQ,CAC1D+I,KAAKC,0BAA4B,C,CAEnCD,KAAKW,sBACLX,KAAKY,qBACL,OAAOZ,KAAKvB,SAASuB,KAAKC,0B,CAGrB,gBAAA1F,GACLyF,KAAKC,4BACL,GAAID,KAAKC,0BAA4B,EAAG,CACtCD,KAAKC,0BAA4BD,KAAKvB,SAASxH,OAAS,C,CAE1D+I,KAAKW,sBACLX,KAAKY,qBACL,OAAOZ,KAAKvB,SAASuB,KAAKC,0B,CAGpB,YAAAY,CAAaC,GACnB,OAAOA,EAAQC,SAASC,gBAAkB,iB,CAGpC,mBAAAL,GACN,MAAMM,EAAiBjB,KAAKvB,SAASuB,KAAKC,2BAC1C,MAAMiB,EAAgBlB,KAAKvB,SAAS0C,QAAQpE,GAAOA,IAAOkE,IAC1DA,EAAejJ,MAAM0B,MAAQsG,KAAKtG,MAClCuH,EAAejJ,MAAMyB,gBAAkBuG,KAAKM,aAC5CY,EAAc1C,SAASsC,IACrBA,EAAQ9I,MAAM0B,MAAQ,GACtBoH,EAAQ9I,MAAMyB,gBAAkBuG,KAAKtG,KAAK,G,CAItC,kBAAAkH,GACN,MAAME,EAAUd,KAAKvB,SAASuB,KAAKC,2BACnCa,EAAQM,gB,CAGF,OAAAhB,CAAQU,GACd,MAAMO,EAAyBrB,KAAKsB,wBAAwBR,GAC5D,OAAOd,KAAKuB,oBAAoBF,GAAwBG,M,CAGlD,mBAAAD,CAAoBE,GAK1B,MAAMC,EAAQ3K,OAAO4K,KAAK3B,KAAKF,uBAAuB8B,MACnDC,IACC,MAAMC,EACJD,EAAab,gBAAkBS,EAAUT,cAC3C,GAAIc,EAAmB,CACrB,OAAO,I,CAET,MAAMC,EAAqB/B,KAAKF,sBAAsB+B,GACtD,IAAKE,EAAoB,CACvB,OAAO,K,CAGT,MAAMC,EAAyBD,EAAmBH,MAC/CK,GACCA,EAAkBjB,gBAAkBS,EAAUT,gBAElD,OAAOgB,CAAsB,IAGjC,OAAON,GAASD,C,CAGV,uBAAAH,CAAwBR,GAC9B,IAAKd,KAAKa,aAAaC,GAAU,CAC/B,OAAOd,KAAKkC,qBAAqBpB,E,CAGnC,MAAMqB,EAAWC,MAAMC,KAAKvB,EAAQqB,UACpC,GAAIA,EAASlL,QAAU,EAAG,CACxB,OAAO+I,KAAKkC,qBAAqBC,EAAS,G,CAG5C,MAAO,E,CAGD,sBAAAhC,CAAuBW,GAC7B,MAAMwB,EAAQxB,EAAQhI,GACnByJ,UAAU5C,EAAiB1I,OAAS,GACpCuL,MAAM,kCAET,IAAKF,GAASA,EAAMrL,QAAU,EAAG,CAC/B,OAAO,I,CAGT,MAAO,CACLoJ,kBAAmBiC,EAAM,GACzBG,gBAAiBC,SAASJ,EAAM,GAAI,I,CAIhC,oBAAAJ,CAAqBnF,GAC3B,OAAOA,EAAG4F,WAAa5F,EAAGrB,aAAe,E,CAGnC,oBAAA6E,GACN,MAAM5B,EAACA,EAACC,EAAEA,EAACC,EAAEA,GAAKmB,KAAK4C,aACvB,MAAO,OAAO,IAAMjE,MAAM,IAAMC,MAAM,IAAMC,I,CAGtC,qBAAA2B,GACN,MAAM7B,EAACA,EAACC,EAAEA,EAACC,EAAEA,GAAKmB,KAAK4C,aACvB,MAAMzL,EAACA,EAACgI,EAAEA,EAACF,EAAEA,GAAKP,EAASC,EAAGC,EAAGC,GACjC,IAAIgE,EAAgB1D,EAAI,EACxB,GAAI0D,EAAgB,EAAG,CACrBA,EAAgB,C,CAElB,MACElE,EAAGmE,EACHlE,EAAGmE,EACHlE,EAAGmE,GACD5D,EAASjI,EAAG0L,EAAe5D,GAC/B,MAAO,OAAO6D,MAAeC,MAAeC,I,CAGtC,UAAAJ,GACN,MAAMK,EAAejD,KAAKtG,MAAM8I,MAAM,QACtC,IAAKS,EAAc,CACjB,MAAO,CAACtE,EAAG,IAAKC,EAAG,IAAKC,EAAG,I,CAG7B,MAAO,CACLF,EAAG+D,SAASO,EAAa,GAAI,IAC7BrE,EAAG8D,SAASO,EAAa,GAAI,IAC7BpE,EAAG6D,SAASO,EAAa,GAAI,I,EAK5B,MAAMC,EAAqB,CAChCpD,EACAzB,KAEA,MAAM8E,EAA0D,GAChE,IAAK9E,EAAQ,CACX,OAAO8E,C,CAGT9E,EAAOpB,iBAAiBjB,KACrBoH,iBAAiB,SAASzD,OAC1BnB,SAASzB,IACR,MAAMsG,EAA6BtG,EAEnC,MAAMuG,EAAgB,IAAI1D,EACxBE,EACAuD,GAGF,IAAKC,EAAczK,KAAM,CACvB,M,CAGF,MAAM0K,EACJJ,EAAgBG,EAAc1I,iBAEhC,GAAI2I,EAAuB,CACzBA,EAAsB9C,WAAW4C,E,KAC5B,CACLF,EAAgBG,EAAc1I,iBAAmB0I,C,KAIvD,OAAOH,CAAe,ECjNxB,MAAMK,EAA0B,k72DAChC,MAAAC,EAAeD,E,iXCyDFE,EAAoB,M,2IAId1D,KAAArI,kBAAuC,CACtDqB,cAAe,MACfM,SAAU,IAWK0G,KAAA2D,gBAAkB,MAClB3D,KAAApJ,MAAgD,G,4CAdT,CACtDoC,cAAe,MACfM,SAAU,I,qBAWuB,M,WAC8B,G,kJATjE,sBAAAsK,GACE5D,KAAK6D,yB,CAoBA,iBAAAC,GACL9D,KAAK2D,gBAAkB3D,KAAK+D,SAASC,MAAMC,U,CAItC,WAAMC,GACXlE,KAAKrI,kBAAoB,CACvBqB,cAAe,MACfM,SAAU,IAEZ0G,KAAK2D,gBAAkB,MACvB3D,KAAKhD,UAAY1E,UACjB0H,KAAKhF,QAAU1C,UACf0H,KAAKmE,OAAS7L,UACd0H,KAAKoE,kBAAoB9L,S,CAGnB,YAAA+L,GACN,IAAIC,EAA8B,KAClC,GAAItE,KAAKmE,OAAQ,CACfnE,KAAKoE,kBAAoBG,EAAuBvE,KAAK+D,SAASS,OAAQ,CACpEC,QAAS,CAACN,OAAQnE,KAAKmE,UAEzBG,EACEnN,EAACwB,EAAQ,KACPxB,EAACuN,EAAqB,CACpBC,KAAM3E,KAAKmE,QAAQS,SACnBC,SAAU,IAAM7E,KAAKoE,mBAAmBU,SACxCC,qBAAsB,IACpB/E,KAAKoE,mBAAmBY,qBAE1BC,sBAAuB,IACrBjF,KAAKoE,mBAAmBc,sBAE1BC,UAAU,WACVC,KAAK,gCAEJpF,KAAKmE,OAAOlM,OAEfd,EAACS,EAAU,CACTC,WAAW,yBACXC,KAAMuN,EACNjN,QAAS,IAAM4H,KAAKsF,UACpBnN,UAAW6H,KAAK+D,SAAStM,KAAKS,EAAE,SAChCF,MAAM,mBACNC,MAAO+H,KAAK+D,SAAStM,KAAKS,EAAE,W,CAKpC,OACEf,EAAA,OAAKoO,KAAK,SAASjO,MAAM,4CACtBgN,E,CAKC,UAAAkB,GACN,OACErO,EAAA,OAAKoO,KAAK,OAAOjO,MAAM,4CACrBH,EAAA,OACEG,MAAM,yBACNU,MAAO,CAACyB,gBAAiB,gCAEzBtC,EAACT,EAAgB,CACfE,MAAOoJ,KAAKpJ,MACZa,KAAMuI,KAAK+D,SAAStM,KACpBE,kBAAmBqI,KAAKrI,kBACxBe,oBAAsB+I,GACnBzB,KAAKrI,kBAAoB8J,EAE5B5K,UAAWmJ,KAAK2D,gBAChBjM,WAAa+N,GAAczF,KAAK2D,gBAAkB8B,KAGtDtO,EAAA,OAAKG,MAAM,0BACTH,EAACkF,EAAe,CACdF,OAAQ6D,KAAK7D,OACbK,IAAKwD,KAAK0F,aACVnJ,QAASyD,KAAKzD,QACdhB,iBAAkByE,KAAK2F,0BACvB3K,QAASgF,KAAKhF,QACdsB,eAAgBQ,MAAOD,IACrBmD,KAAKhD,UAAYH,EACjBmD,KAAKpJ,MAAQsM,EACXlD,KAAK4F,iBACL5F,KAAKhD,WAEPgD,KAAK6D,yBAAyB,IAGjCzF,EACC4B,KAAKpJ,MACLoJ,KAAKrI,kBACLqI,KAAKhD,Y,CAOP,YAAA6I,GACN,OACE1O,EAAA,OAAKoO,KAAK,SAASjO,MAAM,2BACvBH,EAAC2O,EAAM,CACLxO,MAAM,MACNU,MAAM,iBACNI,QAAS,IAAM4H,KAAK+F,mBAAmBC,OACvC5L,SAAU4F,KAAKiG,UAAY,EAC3BpN,KAAMmH,KAAK+D,SAAStM,KAAKS,EAAE,wBAE7Bf,EAAA,KAAGG,MAAM,eACN0I,KAAK+D,SAAStM,KAAKS,EAAE,qBAAsB,CAC1CgO,MAAOlG,KAAKiG,QACZE,MAAOnG,KAAKmG,SAGhBhP,EAAC2O,EAAM,CACLxO,MAAM,MACNU,MAAM,iBACNI,QAAS,IAAM4H,KAAKoG,eAAeJ,OACnC5L,SAAU4F,KAAKiG,UAAYjG,KAAKmG,MAChCtN,KAAMmH,KAAK+D,SAAStM,KAAKS,EAAE,oB,CAM3B,OAAAoN,GACNtF,KAAKhF,QAAU1C,UACf0H,KAAKmE,OAAS7L,UACd0H,KAAKqG,oBAAsBrG,KAAKqG,oB,CAGlC,UAAYC,GACV,QAAStG,KAAKhF,WAAagF,KAAKmE,M,CAGlC,qBAAYoC,GACV,MAAO,4B,CAGT,UAAYpK,GACV,OAAO6D,KAAK+D,SAASS,OAAOrI,M,CAG9B,gBAAYuJ,GACV,OAAO1F,KAAK+D,SAASS,OAAOgC,MAAMC,eAAeC,U,CAG3C,gBAAAC,GACN3G,KAAK4G,8B,CAGC,+BAAAC,CAAgCC,GACtC9G,KAAK4G,6BAA6BE,E,CAG5B,iBAAAC,GACN/G,KAAKgH,8B,CAGC,gCAAAC,CAAiCH,GACvC9G,KAAKgH,6BAA6BF,E,CAG5B,4BAAAF,CAA6BE,GACnC,MAAMI,EAAMlH,KAAKhD,WAAWmK,eAAeC,SAC3C,IAAKF,EAAK,CACR,M,CAEFA,EACGzL,eACC,GAAGuE,KAAKuG,oBAAoBO,EAAa,IAAIA,IAAe,OAE5DxI,Q,CAGE,4BAAA0I,CAA6BF,GACnC,MAAMI,EAAMlH,KAAKhD,WAAWmK,eAAeC,SAC3C,IAAKF,EAAK,CACR,M,CAGF,MAAMG,EAAOH,EAAIG,KACjB,MAAMC,EAAW,GAAGtH,KAAKuG,oBACvBO,EAAa,IAAIA,IAAe,KAElC,MAAM9O,EACJkP,EAAIzL,eAAe6L,IAAatH,KAAK+D,SAASwD,qBAChDvP,EAAM+D,aAAa,KAAMuL,GACzBD,EAAKpL,YAAYjE,GACjBA,EAAMiE,YACJiL,EAAIM,eAAe,SAAS7H,IAC1BmH,EAAa,IAAIA,IAAe,gG,CAQtC,oBAAYlB,GACV,MAAM6B,EAA2C,GAEjD,MAAMC,EACJ1H,KAAK+D,SAASS,OAAOgC,MAAMmB,OAAOC,SAASF,mBAE7C3Q,OAAO8Q,QAAQH,GAAoBlJ,SAAQ,EAAEsJ,EAAQxO,MACnDmO,EAAuBK,GAAU/Q,OAAO8Q,QAAQvO,GAAUyO,SACxD,EAAEC,EAAcC,KACP,CAACD,KAAiBC,IAE5B,IAGH,MAAO,IACFjI,KAAK+D,SAASS,OAAOgC,MAAMmB,OAAOC,SAAShC,oBAC3C6B,E,CAIP,aAAYS,GACV,OAAOlI,KAAK+D,SAASS,OAAOgC,MAAMmB,OAAOO,S,CAG3C,6BAAYvC,GACV,OAAO3F,KAAKmE,QAAQgE,SAAWnI,KAAKkI,S,CAG9B,uBAAArE,GACN,IAAK7D,KAAKrI,kBAAkBqB,cAAe,CACzCgH,KAAK2G,kB,KACA,CACL3G,KAAK+G,mB,CAEPhQ,OAAOC,OAAOgJ,KAAKrI,kBAAkB2B,UAAUkF,SAASZ,IACtD,GAAIA,EAAKrE,QAAS,CAChByG,KAAK6G,gCAAgCjJ,EAAKhD,gB,KACrC,CACLoF,KAAKiH,iCAAiCrJ,EAAKhD,gB,KAK1C,MAAAwN,GACL,OACEjR,EAAA,gBAAAqC,IAAA,2CACE6O,WAAYrI,KAAK+D,SAASC,MAAMC,WAChC3M,MAAO,yBACPgP,OAAQtG,KAAKsG,OACbnL,MAAO,IAAM6E,KAAKsF,WAEjBtF,KAAKqE,eACLrE,KAAKwF,aACLxF,KAAK6F,e,8EA5RiByC,EAAA,CAA5BC,K","ignoreList":[]}