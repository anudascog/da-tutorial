{"version":3,"names":["atomicInsightPagerCss","AtomicInsightPagerStyle0","AtomicInsightPager","this","numberOfPages","radioGroupName","randomID","initialize","searchStatus","buildInsightSearchStatus","bindings","engine","pager","buildInsightPager","options","focusOnFirstResultAndScrollToTop","store","state","resultList","focusOnFirstResultAfterNextSearch","scrollToTopEvent","emit","render","h","Host","key","PagerNavigation","i18n","PagerPreviousButton","icon","ArrowLeftIcon","disabled","pagerState","hasPreviousPage","onClick","previousPage","PagerPageButtons","currentPages","map","pageNumber","PagerPageButton","isSelected","isCurrentPage","ariaLabel","t","onChecked","selectPage","page","groupName","text","toLocaleString","language","PagerNextButton","ArrowRightIcon","hasNextPage","nextPage","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/insight/atomic-insight-pager/atomic-insight-pager.pcss?tag=atomic-insight-pager&encapsulation=shadow","src/components/insight/atomic-insight-pager/atomic-insight-pager.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n\n[part='page-button'] {\n  @apply bg-transparent;\n}\n\n:host {\n  @apply bg-neutral-light box-content flex h-full items-center justify-center px-6 py-4;\n}\n","import {\n  buildPager as buildInsightPager,\n  buildSearchStatus as buildInsightSearchStatus,\n  Pager as InsightPager,\n  PagerState as InsightPagerState,\n  SearchStatus as InsightSearchStatus,\n  SearchStatusState as InsightSearchStatusState,\n} from '@coveo/headless/insight';\nimport {\n  Component,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  State,\n} from '@stencil/core';\nimport ArrowLeftIcon from '../../../images/arrow-left-rounded.svg';\nimport ArrowRightIcon from '../../../images/arrow-right-rounded.svg';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {randomID} from '../../../utils/utils';\nimport {\n  PagerNextButton,\n  PagerPageButton,\n  PagerPageButtons,\n  PagerPreviousButton,\n} from '../../common/pager/stencil-pager-buttons';\nimport {PagerNavigation} from '../../common/pager/stencil-pager-navigation';\nimport {InsightBindings} from '../atomic-insight-interface/atomic-insight-interface';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-insight-pager',\n  styleUrl: 'atomic-insight-pager.pcss',\n  shadow: true,\n})\nexport class AtomicInsightPager\n  implements InitializableComponent<InsightBindings>\n{\n  @InitializeBindings() public bindings!: InsightBindings;\n  public pager!: InsightPager;\n  public searchStatus!: InsightSearchStatus;\n\n  @BindStateToController('pager')\n  @State()\n  public pagerState!: InsightPagerState;\n  @BindStateToController('searchStatus')\n  @State()\n  public searchStatusState!: InsightSearchStatusState;\n  @State() error!: Error;\n\n  @Event({\n    eventName: 'atomic/scrollToTop',\n  })\n  private scrollToTopEvent!: EventEmitter;\n\n  /**\n   * Specifies how many page buttons to display in the pager.\n   */\n  @Prop({reflect: true}) numberOfPages = 5;\n\n  private radioGroupName = randomID('atomic-insight-pager-');\n\n  public initialize() {\n    this.searchStatus = buildInsightSearchStatus(this.bindings.engine);\n    this.pager = buildInsightPager(this.bindings.engine, {\n      options: {numberOfPages: this.numberOfPages},\n    });\n  }\n\n  private async focusOnFirstResultAndScrollToTop() {\n    await this.bindings.store.state.resultList?.focusOnFirstResultAfterNextSearch();\n    this.scrollToTopEvent.emit();\n  }\n\n  public render() {\n    return (\n      <Host>\n        <PagerNavigation i18n={this.bindings.i18n}>\n          <PagerPreviousButton\n            icon={ArrowLeftIcon}\n            disabled={!this.pagerState.hasPreviousPage}\n            i18n={this.bindings.i18n}\n            onClick={() => {\n              this.pager.previousPage();\n              this.focusOnFirstResultAndScrollToTop();\n            }}\n          />\n          <PagerPageButtons i18n={this.bindings.i18n}>\n            {this.pagerState.currentPages.map((pageNumber) => {\n              return (\n                <PagerPageButton\n                  isSelected={this.pager.isCurrentPage(pageNumber)}\n                  ariaLabel={this.bindings.i18n.t('page-number', {pageNumber})}\n                  onChecked={() => {\n                    this.pager.selectPage(pageNumber);\n                    this.focusOnFirstResultAndScrollToTop();\n                  }}\n                  page={pageNumber}\n                  groupName={this.radioGroupName}\n                  text={pageNumber.toLocaleString(this.bindings.i18n.language)}\n                />\n              );\n            })}\n          </PagerPageButtons>\n          <PagerNextButton\n            icon={ArrowRightIcon}\n            disabled={!this.pagerState.hasNextPage}\n            i18n={this.bindings.i18n}\n            onClick={() => {\n              this.pager.nextPage();\n              this.focusOnFirstResultAndScrollToTop();\n            }}\n          />\n        </PagerNavigation>\n      </Host>\n    );\n  }\n}\n"],"mappings":"4kBAAA,MAAMA,EAAwB,6t1DAC9B,MAAAC,EAAeD,E,iXCyCFE,EAAkB,M,8EAuBNC,KAAAC,cAAgB,EAE/BD,KAAAE,eAAiBC,EAAS,yB,mGAFK,C,CAIhC,UAAAC,GACLJ,KAAKK,aAAeC,EAAyBN,KAAKO,SAASC,QAC3DR,KAAKS,MAAQC,EAAkBV,KAAKO,SAASC,OAAQ,CACnDG,QAAS,CAACV,cAAeD,KAAKC,gB,CAI1B,sCAAMW,SACNZ,KAAKO,SAASM,MAAMC,MAAMC,YAAYC,qCAC5ChB,KAAKiB,iBAAiBC,M,CAGjB,MAAAC,GACL,OACEC,EAACC,EAAI,CAAAC,IAAA,4CACHF,EAACG,EAAe,CAAAD,IAAA,2CAACE,KAAMxB,KAAKO,SAASiB,MACnCJ,EAACK,EAAmB,CAAAH,IAAA,2CAClBI,KAAMC,EACNC,UAAW5B,KAAK6B,WAAWC,gBAC3BN,KAAMxB,KAAKO,SAASiB,KACpBO,QAAS,KACP/B,KAAKS,MAAMuB,eACXhC,KAAKY,kCAAkC,IAG3CQ,EAACa,EAAgB,CAAAX,IAAA,2CAACE,KAAMxB,KAAKO,SAASiB,MACnCxB,KAAK6B,WAAWK,aAAaC,KAAKC,GAE/BhB,EAACiB,EAAe,CACdC,WAAYtC,KAAKS,MAAM8B,cAAcH,GACrCI,UAAWxC,KAAKO,SAASiB,KAAKiB,EAAE,cAAe,CAACL,eAChDM,UAAW,KACT1C,KAAKS,MAAMkC,WAAWP,GACtBpC,KAAKY,kCAAkC,EAEzCgC,KAAMR,EACNS,UAAW7C,KAAKE,eAChB4C,KAAMV,EAAWW,eAAe/C,KAAKO,SAASiB,KAAKwB,eAK3D5B,EAAC6B,EAAe,CAAA3B,IAAA,2CACdI,KAAMwB,EACNtB,UAAW5B,KAAK6B,WAAWsB,YAC3B3B,KAAMxB,KAAKO,SAASiB,KACpBO,QAAS,KACP/B,KAAKS,MAAM2C,WACXpD,KAAKY,kCAAkC,K,GAxEtByC,EAAA,CAA5BC,K,+BAMMD,EAAA,CAFNE,EAAsB,U,iCAKhBF,EAAA,CAFNE,EAAsB,iB","ignoreList":[]}