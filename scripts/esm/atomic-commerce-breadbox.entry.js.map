{"file":"atomic-commerce-breadbox.entry.js","mappings":"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","names":[],"sources":["src/components/commerce/atomic-commerce-breadbox/atomic-commerce-breadbox.pcss?tag=atomic-commerce-breadbox&encapsulation=shadow","src/components/commerce/atomic-commerce-breadbox/atomic-commerce-breadbox.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n@import '../../common/atomic-rating/atomic-rating.pcss';\n\n.max-w-snippet {\n  max-width: 30ch;\n}\n\n[part='breadcrumb-label'].excluded,\n[part='breadcrumb-value'].excluded {\n  text-decoration: line-through;\n  @apply text-error;\n}\n\n/* When excluded, strikethrough line must be continuous, so we must prepend empty character instead of margin */\n[part='breadcrumb-value']::before {\n  content: '\\00a0';\n}\n","import {NumberValue, Schema} from '@coveo/bueno';\nimport {\n  BreadcrumbManagerState,\n  BreadcrumbManager,\n  ProductListing,\n  Search,\n  buildProductListing,\n  buildSearch,\n  NumericFacetValue,\n  RegularFacetValue,\n  DateFacetValue,\n  Breadcrumb,\n  CategoryFacetValue,\n  BreadcrumbValue,\n  Context,\n  ContextState,\n  buildContext,\n  LocationFacetValue,\n} from '@coveo/headless/commerce';\nimport {Component, h, State, Element, Prop} from '@stencil/core';\nimport {parseDate} from '../../../utils/date-utils';\nimport {getFieldValueCaption} from '../../../utils/field-utils';\nimport {\n  InitializableComponent,\n  BindStateToController,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {FocusTargetController} from '../../../utils/stencil-accessibility-utils';\nimport {Breadcrumb as BreadboxBreadcrumb} from '../../common/breadbox/breadcrumb-types';\nimport {BreadcrumbButton} from '../../common/breadbox/stencil-breadcrumb-button';\nimport {BreadcrumbClearAll} from '../../common/breadbox/stencil-breadcrumb-clear-all';\nimport {BreadcrumbContainer} from '../../common/breadbox/stencil-breadcrumb-container';\nimport {BreadcrumbContent} from '../../common/breadbox/stencil-breadcrumb-content';\nimport {BreadcrumbShowLess} from '../../common/breadbox/stencil-breadcrumb-show-less';\nimport {BreadcrumbShowMore} from '../../common/breadbox/stencil-breadcrumb-show-more';\nimport {formatHumanReadable} from '../../common/facets/numeric-facet/formatter';\nimport {\n  defaultCurrencyFormatter,\n  defaultNumberFormatter,\n} from '../../common/formats/format-common';\nimport {Hidden} from '../../common/stencil-hidden';\nimport {CommerceBindings} from '../atomic-commerce-interface/atomic-commerce-interface';\n\ntype AnyFacetValue =\n  | RegularFacetValue\n  | LocationFacetValue\n  | NumericFacetValue\n  | DateFacetValue\n  | CategoryFacetValue;\n\n/**\n * The `atomic-commerce-breadbox` component creates breadcrumbs that display a summary of the currently active facet values.\n *\n * @part container - The container of the whole component, list & label.\n * @part breadcrumb-list-container - The container of the list of breadcrumb buttons.\n * @part breadcrumb-list - The list of breadcrumb buttons.\n * @part breadcrumb-button - A single breadcrumb button.\n * @part breadcrumb-label - The breadcrumb label, associated with the facet.\n * @part breadcrumb-value - The breadcrumb formatted value.\n * @part breadcrumb-clear - The button to clear individual filters.\n * @part show-more - The button to display all breadcrumbs.\n * @part show-less - The button to display less breadcrumbs.\n * @part label - The \"Filters\" label.\n * @part clear - The button to clear all filters.\n *\n * @alpha\n */\n@Component({\n  tag: 'atomic-commerce-breadbox',\n  styleUrl: 'atomic-commerce-breadbox.pcss',\n  shadow: true,\n})\nexport class AtomicCommerceBreadbox\n  implements InitializableComponent<CommerceBindings>\n{\n  @InitializeBindings() public bindings!: CommerceBindings;\n\n  private resizeObserver?: ResizeObserver;\n  private showMore!: HTMLButtonElement;\n  private showLess!: HTMLButtonElement;\n  private lastRemovedBreadcrumbIndex = 0;\n  private numberOfBreadcrumbs = 0;\n  private numberOfCollapsedBreadcrumbs = 0;\n  private firstExpandedBreadcrumbIndex?: number;\n  breadcrumbManager!: BreadcrumbManager;\n\n  @Element() private host!: HTMLElement;\n\n  public context!: Context;\n  @BindStateToController('context') contextState!: ContextState;\n\n  public searchOrListing!: Search | ProductListing;\n\n  @BindStateToController('breadcrumbManager')\n  @State()\n  private breadcrumbManagerState!: BreadcrumbManagerState;\n  @State() public error!: Error;\n  @State() private isCollapsed = true;\n\n  private breadcrumbRemovedFocus?: FocusTargetController;\n\n  private breadcrumbShowMoreFocus?: FocusTargetController;\n\n  private breadcrumbShowLessFocus?: FocusTargetController;\n\n  /**\n   * This prop allows you to control the display depth\n   * of the path by specifying the number of parent or ancestor\n   * breadcrumbs links relative to the currently selected value.\n   *\n   * If the path size is equal to or less than the pathLimit, all values in\n   * the path will be displayed without truncation.\n   *\n   * If the path size exceeds the pathLimit, it will truncate the path by\n   * replacing the middle values with ellipses ('...').\n   *\n   * Minimum: `1`\n   * @defaultValue `3`\n   */\n  @Prop() public pathLimit = 3;\n\n  public initialize() {\n    this.validateProps();\n\n    if (this.bindings.interfaceElement.type === 'product-listing') {\n      this.searchOrListing = buildProductListing(this.bindings.engine);\n    } else {\n      this.searchOrListing = buildSearch(this.bindings.engine);\n    }\n\n    this.context = buildContext(this.bindings.engine);\n\n    this.breadcrumbManager = this.searchOrListing.breadcrumbManager();\n\n    if (window.ResizeObserver) {\n      this.resizeObserver = new ResizeObserver(() => this.adaptBreadcrumbs());\n      this.resizeObserver.observe(this.host.parentElement!);\n    }\n  }\n\n  private validateProps() {\n    new Schema({\n      pathLimit: new NumberValue({\n        default: 3,\n        min: 1,\n        required: false,\n      }),\n    }).validate({\n      pathLimit: this.pathLimit,\n    });\n  }\n\n  public disconnectedCallback() {\n    this.resizeObserver?.disconnect();\n  }\n\n  private get focusTargets() {\n    if (!this.breadcrumbRemovedFocus) {\n      this.breadcrumbRemovedFocus = new FocusTargetController(this);\n    }\n    if (!this.breadcrumbShowLessFocus) {\n      this.breadcrumbShowLessFocus = new FocusTargetController(this);\n    }\n    if (!this.breadcrumbShowMoreFocus) {\n      this.breadcrumbShowMoreFocus = new FocusTargetController(this);\n    }\n    return {\n      breadcrumbRemovedFocus: this.breadcrumbRemovedFocus,\n      breadcrumbShowLessFocus: this.breadcrumbShowLessFocus,\n      breadcrumbShowMoreFocus: this.breadcrumbShowMoreFocus,\n    };\n  }\n\n  private get breadcrumbs() {\n    return Array.from(\n      this.host.shadowRoot!.querySelectorAll('li.breadcrumb')\n    ) as HTMLElement[];\n  }\n\n  private hide(element: HTMLElement) {\n    element.style.display = 'none';\n  }\n\n  private show(element: HTMLElement) {\n    element.style.display = '';\n  }\n\n  private showAllBreadcrumbs() {\n    this.breadcrumbs.forEach((breadcrumb) => this.show(breadcrumb));\n  }\n\n  private hideOverflowingBreadcrumbs() {\n    let hiddenBreadcrumbs = 0;\n    for (\n      let i = this.breadcrumbs.length - 1;\n      this.isOverflowing && i >= 0;\n      i--\n    ) {\n      this.hide(this.breadcrumbs[i]);\n      hiddenBreadcrumbs++;\n    }\n    this.updateShowMoreValue(hiddenBreadcrumbs);\n  }\n\n  private updateShowLessDisplay() {\n    this.show(this.showLess);\n    if (this.showLess.offsetTop === 0) {\n      this.hide(this.showLess);\n    }\n  }\n\n  private adaptBreadcrumbs() {\n    if (!this.breadcrumbs.length) {\n      return;\n    }\n    this.showAllBreadcrumbs();\n\n    if (!this.isCollapsed) {\n      this.updateShowLessDisplay();\n      return;\n    }\n\n    this.updateShowMoreValue(this.breadcrumbs.length);\n    this.hideOverflowingBreadcrumbs();\n  }\n\n  private get isOverflowing() {\n    const listElement = this.host.shadowRoot!.querySelector('ul');\n    if (!listElement) {\n      return false;\n    }\n    return listElement.scrollWidth > listElement.clientWidth;\n  }\n\n  private updateShowMoreValue(value: number) {\n    this.numberOfCollapsedBreadcrumbs = value;\n    if (value === 0) {\n      this.hide(this.showMore);\n      return;\n    }\n    this.show(this.showMore);\n    this.showMore.textContent = `+ ${value.toLocaleString(\n      this.bindings.i18n.language\n    )}`;\n    this.showMore.setAttribute(\n      'aria-label',\n      this.bindings.i18n.t('show-n-more-filters', {\n        value,\n      })\n    );\n  }\n\n  private getNumberFormatter(field: string) {\n    if (field === 'ec_price' || field === 'ec_promo_price') {\n      return defaultCurrencyFormatter(this.contextState.currency);\n    }\n    return defaultNumberFormatter;\n  }\n\n  private valueForFacetType = (\n    type: string,\n    field: string,\n    value: BreadcrumbValue<AnyFacetValue>\n  ): string[] => {\n    switch (type) {\n      case 'numericalRange':\n        return [\n          formatHumanReadable({\n            facetValue: value.value as NumericFacetValue,\n            logger: this.bindings.engine.logger,\n            i18n: this.bindings.i18n,\n            field: field,\n            manualRanges: [],\n            formatter: this.getNumberFormatter(field),\n          }),\n        ];\n      case 'dateRange':\n        return [\n          this.bindings.i18n.t('to', {\n            start: parseDate((value.value as DateFacetValue).start).format(\n              'YYYY-MM-DD'\n            ),\n            end: parseDate((value.value as DateFacetValue).end).format(\n              'YYYY-MM-DD'\n            ),\n          }),\n        ];\n      case 'hierarchical':\n        return (value.value as CategoryFacetValue).path.map(\n          (pathValue: string) =>\n            getFieldValueCaption(field, pathValue, this.bindings.i18n)\n        );\n      case 'regular':\n        return [\n          getFieldValueCaption(\n            field,\n            (value.value as RegularFacetValue).value,\n            this.bindings.i18n\n          ),\n        ];\n      default: {\n        // TODO COMHUB-291 support location breadcrumb\n        this.bindings.engine.logger.warn('Unexpected breadcrumb type.');\n        return [];\n      }\n    }\n  };\n\n  private buildBreadcrumb(breadcrumb: Breadcrumb<AnyFacetValue>) {\n    return breadcrumb.values.map((value: BreadcrumbValue<AnyFacetValue>) => {\n      return {\n        facetId: breadcrumb.facetId,\n        label: breadcrumb.facetDisplayName,\n        deselect: value.deselect,\n        formattedValue: this.valueForFacetType(\n          breadcrumb.type,\n          breadcrumb.facetId,\n          value\n        ),\n      };\n    });\n  }\n\n  private renderBreadcrumbs(breadcrumbs: BreadboxBreadcrumb[]) {\n    this.numberOfBreadcrumbs = breadcrumbs.length;\n\n    return breadcrumbs.map((breadcrumb, index) => {\n      const isLastBreadcrumb = breadcrumbs.length === 1;\n      return (\n        <BreadcrumbButton\n          setRef={(ref) => {\n            if (this.lastRemovedBreadcrumbIndex === index) {\n              this.focusTargets.breadcrumbRemovedFocus.setTarget(ref);\n            }\n            if (this.firstExpandedBreadcrumbIndex === index) {\n              this.focusTargets.breadcrumbShowMoreFocus.setTarget(ref);\n            }\n          }}\n          pathLimit={this.pathLimit}\n          breadcrumb={breadcrumb}\n          onSelectBreadcrumb={() => {\n            if (isLastBreadcrumb) {\n              this.bindings.store.state.resultList?.focusOnFirstResultAfterNextSearch();\n            } else if (this.numberOfBreadcrumbs > 1) {\n              this.focusTargets.breadcrumbRemovedFocus.focusAfterSearch();\n            }\n\n            this.lastRemovedBreadcrumbIndex = index;\n            breadcrumb.deselect();\n          }}\n          i18n={this.bindings.i18n}\n        >\n          <BreadcrumbContent\n            pathLimit={this.pathLimit}\n            isCollapsed={this.isCollapsed}\n            i18n={this.bindings.i18n}\n            breadcrumb={breadcrumb}\n          ></BreadcrumbContent>\n        </BreadcrumbButton>\n      );\n    });\n  }\n\n  public render() {\n    const breadcrumbs = this.breadcrumbManagerState.facetBreadcrumbs\n      .map((breadcrumb) => {\n        return this.buildBreadcrumb(breadcrumb);\n      })\n      .flat();\n\n    if (!breadcrumbs.length) {\n      return <Hidden></Hidden>;\n    }\n    return (\n      <BreadcrumbContainer\n        isCollapsed={this.isCollapsed}\n        i18n={this.bindings.i18n}\n      >\n        {this.renderBreadcrumbs(breadcrumbs)}\n        <BreadcrumbShowMore\n          setRef={(el: HTMLButtonElement) => {\n            this.focusTargets.breadcrumbShowLessFocus.setTarget(el!);\n            this.showMore = el;\n          }}\n          onShowMore={() => {\n            this.firstExpandedBreadcrumbIndex =\n              this.numberOfBreadcrumbs - this.numberOfCollapsedBreadcrumbs;\n            this.focusTargets.breadcrumbShowMoreFocus.focusOnNextTarget();\n            this.isCollapsed = false;\n          }}\n          isCollapsed={this.isCollapsed}\n          i18n={this.bindings.i18n}\n          numberOfCollapsedBreadcrumbs={this.numberOfCollapsedBreadcrumbs}\n        ></BreadcrumbShowMore>\n\n        <BreadcrumbShowLess\n          setRef={(el: HTMLButtonElement) => {\n            this.showLess = el;\n          }}\n          onShowLess={() => {\n            this.focusTargets.breadcrumbShowLessFocus.focusOnNextTarget();\n            this.isCollapsed = true;\n          }}\n          isCollapsed={this.isCollapsed}\n          i18n={this.bindings.i18n}\n        ></BreadcrumbShowLess>\n\n        <BreadcrumbClearAll\n          setRef={() => {\n            const isFocusTarget =\n              this.lastRemovedBreadcrumbIndex === this.numberOfBreadcrumbs;\n\n            isFocusTarget\n              ? this.focusTargets.breadcrumbRemovedFocus.setTarget\n              : undefined;\n          }}\n          onClick={async () => {\n            this.breadcrumbManager.deselectAll();\n            this.bindings.store.state.resultList?.focusOnFirstResultAfterNextSearch();\n          }}\n          isCollapsed={this.isCollapsed}\n          i18n={this.bindings.i18n}\n        ></BreadcrumbClearAll>\n      </BreadcrumbContainer>\n    );\n  }\n\n  public componentDidRender() {\n    this.adaptBreadcrumbs();\n  }\n}\n"],"version":3}