{"file":"stencil-product-template-common-a7193a37.js","mappings":";;;;;;;AAAA;SACgB,YAAY,CAAI,IAAY,EAAE,IAAY;IACxD,MAAM,MAAM,GAAG,IAAI,GAAG,EAAK,CAAC;IAC5B,KAAK,MAAM,IAAI,IAAI,IAAI,EAAE;QACvB,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YAClB,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SAClB;KACF;IACD,OAAO,MAAM,CAAC;AAChB;;SCsBgB,mBAAmB,CACjC,SAAmC,EACnC,YAAsC;IAEtC,MAAM,UAAU,GAA+B,EAAE,CAAC;IAClD,KAAK,MAAM,KAAK,IAAI,SAAS,EAAE;QAC7B,IAAI,YAAY,CAAC,KAAK,CAAC,EAAE;YACvB,MAAM,kBAAkB,GAAG,IAAI,GAAG,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;YACxD,MAAM,eAAe,GAAG,IAAI,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YAClD,MAAM,YAAY,GAAG,YAAY,CAAC,kBAAkB,EAAE,eAAe,CAAC,CAAC;YACvE,IAAI,YAAY,CAAC,IAAI,GAAG,CAAC,EAAE;gBACzB,OAAO,CAAC,KAAK,CACX,0CAA0C,KAAK,iCAAiC,EAChF,YAAY,CACb,CAAC;gBACF,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC;aACtB;SACF;QACD,UAAU,CAAC,IAAI,CACb,uBAAuB,CAAC,cAAc,CAAC,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC,CAChE,CAAC;KACH;IAED,KAAK,MAAM,KAAK,IAAI,YAAY,EAAE;QAChC,UAAU,CAAC,IAAI,CACb,uBAAuB,CAAC,iBAAiB,CAAC,KAAK,EAAE,YAAY,CAAC,KAAK,CAAC,CAAC,CACtE,CAAC;KACH;IACD,OAAO,UAAU,CAAC;AACpB;;SChCgB,mBAAmB,CAAC,IAAU;IAC5C,IAAI,mBAAmB,CAAC,IAAI,CAAC,EAAE;QAC7B,OAAO,SAAS,CAAC;KAClB;IACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;QACvB,OAAO,UAAU,CAAC;KACnB;IACD,IACE,aAAa,CAAC,IAAI,CAAC;QACnB,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,mBAAmB,EAClD;QACA,OAAO,yBAAyB,CAAC;KAClC;IACD,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,SAAS,gBAAgB,CAAC,KAAe;IACvC,OAAO,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,KAAK,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC;AAC3E,CAAC;AAED;;;MAGa,qBAAqB;IAKhC,YAAY,EACV,IAAI,EACJ,QAAQ,EACR,YAAY,EACZ,UAAU,GAAG,KAAK,GACS;QARtB,oBAAe,GAA+B,EAAE,CAAC;QAStD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,QAAQ,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;KACjE;IAED,gBAAgB,CACd,IAAoB,EACpB,QAAgC,EAChC,YAAsB,EACtB,UAAU,GAAG,IAAI;QAEjB,MAAM,cAAc,GAAG,YAAY;aAChC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;aAC3B,QAAQ,CAAC,IAAI,CAAC,aAAa,EAAE,QAAQ,IAAI,EAAE,CAAC,CAAC;QAChD,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;QAE5C,IAAI,CAAC,cAAc,EAAE;YACnB,QAAQ,CACN,IAAI,KAAK,CACP,QAAQ,OAAO,4DAA4D,YAAY;iBACpF,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC;iBAClC,IAAI,CAAC,IAAI,CAAC,GAAG,CACjB,CACF,CAAC;YACF,OAAO;SACR;QAED,IACE,IAAI,CAAC,aAAa,EAAE,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,KAAK,KAAK,MAAM,EACxE;YACA,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,aAAa,EAAE,UAAU,CAAC,YAAY,CACnE,uBAAuB,CACxB,EAAE,KAAmB,CAAC;SACxB;QAED,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAChD,IAAI,CAAC,QAAQ,EAAE;YACb,QAAQ,CACN,IAAI,KAAK,CACP,QAAQ,OAAO,2DAA2D,CAC3E,CACF,CAAC;YACF,OAAO;SACR;QAED,IAAI,CAAC,UAAU,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE;YAC7C,QAAQ,CACN,IAAI,KAAK,CAAC,8BAA8B,OAAO,oBAAoB,CAAC,CACrE,CAAC;YACF,OAAO;SACR;QAED,IAAI,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE;YAC5C,OAAO,CAAC,IAAI,CACV,oIAAoI,EACpI,IAAI,CACL,CAAC;SACH;QAED,MAAM,EAAC,OAAO,EAAE,YAAY,EAAE,KAAK,EAAE,UAAU,EAAC,GAAG,gBAAgB,CACjE,QAAQ,CAAC,OAAO,CAAC,UAAU,CAC5B,CAAC;QACF,IAAI,YAAY,EAAE,MAAM,IAAI,UAAU,EAAE,MAAM,EAAE;YAC9C,OAAO,CAAC,IAAI,CACV,kJAAkJ,EAClJ,IAAI,EACJ,EAAC,YAAY,EAAE,UAAU,EAAC,CAC3B,CAAC;SACH;KACF;IAED,WAAW,CACT,UAAsC,EACtC,KAAY;QAEZ,IAAI,KAAK,EAAE;YACT,OAAO,IAAI,CAAC;SACb;QAED,OAAO;YACL,UAAU,EAAE,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;YACnD,OAAO,EAAE,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAQ;YAC/C,WAAW,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAQ;YAC5D,QAAQ,EAAE,CAAC;SACZ,CAAC;KACH;IAED,aAAa,CAAC,KAAY;QACxB,IAAI,KAAK,EAAE;YACT,QACE,8BACE,OAAO,EAAE,IAAI,CAAC,IAAI,EAClB,KAAK,EAAE,KAAK,GACY,EAC1B;SACH;KACF;IACD,6BAA6B;QAC3B,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QACxD,YAAY,CAAC,SAAS,GAAG,wBAAwB,IAAI,CAAC,kBAAkB,GAAG,gCAAgC,IAAI,CAAC,kBAAkB,QAAQ,GAAG,EAAE,wBAAwB,CAAC;QACxK,OAAO,YAAY,CAAC;KACrB;IAED,sBAAsB,CAAC,IAAiB;QACtC,QACE,IAAI,CAAC,aAAa,CAAsB,uBAAuB,CAAC;YAChE,IAAI,CAAC,6BAA6B,EAAE,EACpC;KACH;CACF;AAED,SAAS,kBAAkB,CAAC,IAAiB;IAC3C,OAAO,IAAI,CAAC,aAAa,CAAsB,sBAAsB,CAAE,CAAC;AAC1E,CAAC;SAEe,qBAAqB,CACnC,SAAkB,EAClB,YAAqB;IAErB,MAAM,UAAU,GAA+B,EAAE,CAAC;IAClD,IAAI,SAAS,EAAE;QACb,MAAM,UAAU,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACxC,UAAU,CAAC,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC,CAAC;KAC1E;IAED,IAAI,YAAY,EAAE;QAChB,MAAM,UAAU,GAAG,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC3C,UAAU,CAAC,IAAI,CAAC,uBAAuB,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC,CAAC;KAC7E;IACD,OAAO,UAAU,CAAC;AACpB;;;;","names":[],"sources":["src/utils/set.ts","src/components/common/product-template/product-template-common.ts","src/components/common/product-template/stencil-product-template-common.tsx"],"sourcesContent":["// TODO: Replace by Set.prototype.intersection in July 2025\nexport function intersection<T>(setA: Set<T>, setB: Set<T>): Set<T> {\n  const result = new Set<T>();\n  for (const elem of setA) {\n    if (setB.has(elem)) {\n      result.add(elem);\n    }\n  }\n  return result;\n}\n","import {\n  ProductTemplateCondition,\n  ProductTemplatesHelpers,\n} from '@coveo/headless/commerce';\nimport {intersection} from '../../../utils/set';\nimport {isElementNode, isVisualNode} from '../../../utils/utils';\nimport {tableElementTagName} from '../../search/atomic-table-result/table-element-utils';\nimport {isResultSectionNode} from '../layout/sections';\n\ntype TemplateNodeType =\n  | 'section'\n  | 'metadata'\n  | 'table-column-definition'\n  | 'other';\n\nexport function getTemplateNodeType(node: Node): TemplateNodeType {\n  if (isResultSectionNode(node)) {\n    return 'section';\n  }\n  if (!isVisualNode(node)) {\n    return 'metadata';\n  }\n  if (\n    isElementNode(node) &&\n    node.tagName.toLowerCase() === tableElementTagName\n  ) {\n    return 'table-column-definition';\n  }\n  return 'other';\n}\n\nexport function makeMatchConditions(\n  mustMatch: Record<string, string[]>,\n  mustNotMatch: Record<string, string[]>\n): ProductTemplateCondition[] {\n  const conditions: ProductTemplateCondition[] = [];\n  for (const field in mustMatch) {\n    if (mustNotMatch[field]) {\n      const mustNotMatchValues = new Set(mustNotMatch[field]);\n      const mustMatchValues = new Set(mustMatch[field]);\n      const commonValues = intersection(mustNotMatchValues, mustMatchValues);\n      if (commonValues.size > 0) {\n        console.error(\n          `Conflicting match conditions for field ${field}, the template will be ignored.`,\n          commonValues\n        );\n        return [() => false];\n      }\n    }\n    conditions.push(\n      ProductTemplatesHelpers.fieldMustMatch(field, mustMatch[field])\n    );\n  }\n\n  for (const field in mustNotMatch) {\n    conditions.push(\n      ProductTemplatesHelpers.fieldMustNotMatch(field, mustNotMatch[field])\n    );\n  }\n  return conditions;\n}\n\nexport function makeDefinedConditions(\n  ifDefined?: string,\n  ifNotDefined?: string\n): ProductTemplateCondition[] {\n  const conditions: ProductTemplateCondition[] = [];\n  if (ifDefined) {\n    const fieldNames = ifDefined.split(',');\n    conditions.push(ProductTemplatesHelpers.fieldsMustBeDefined(fieldNames));\n  }\n\n  if (ifNotDefined) {\n    const fieldNames = ifNotDefined.split(',');\n    conditions.push(ProductTemplatesHelpers.fieldsMustNotBeDefined(fieldNames));\n  }\n  return conditions;\n}\n","import {aggregate, isElementNode, isVisualNode} from '@/src/utils/utils';\nimport {\n  ProductTemplate,\n  ProductTemplateCondition,\n  ProductTemplatesHelpers,\n} from '@coveo/headless/commerce';\nimport {h} from '@stencil/core';\nimport {tableElementTagName} from '../../search/atomic-table-result/table-element-utils';\nimport {ItemTarget} from '../layout/display-options';\nimport {isResultSectionNode} from '../layout/sections';\n\nexport {makeMatchConditions} from './product-template-common';\n\nexport type TemplateContent = DocumentFragment;\n\ninterface ProductTemplateCommonProps {\n  allowEmpty?: boolean;\n  host: HTMLDivElement;\n  validParents: string[];\n  setError: (error: Error) => void;\n}\n\ntype TemplateNodeType =\n  | 'section'\n  | 'metadata'\n  | 'table-column-definition'\n  | 'other';\n\nexport function getTemplateNodeType(node: Node): TemplateNodeType {\n  if (isResultSectionNode(node)) {\n    return 'section';\n  }\n  if (!isVisualNode(node)) {\n    return 'metadata';\n  }\n  if (\n    isElementNode(node) &&\n    node.tagName.toLowerCase() === tableElementTagName\n  ) {\n    return 'table-column-definition';\n  }\n  return 'other';\n}\n\nfunction groupNodesByType(nodes: NodeList) {\n  return aggregate(Array.from(nodes), (node) => getTemplateNodeType(node));\n}\n\n/**\n * @deprecated Use `ProductTemplateController` Reactive controller instead.\n */\nexport class ProductTemplateCommon {\n  private host: HTMLDivElement;\n  public matchConditions: ProductTemplateCondition[] = [];\n  private gridCellLinkTarget?: ItemTarget;\n\n  constructor({\n    host,\n    setError,\n    validParents,\n    allowEmpty = false,\n  }: ProductTemplateCommonProps) {\n    this.host = host;\n    this.validateTemplate(host, setError, validParents, allowEmpty);\n  }\n\n  validateTemplate(\n    host: HTMLDivElement,\n    setError: (error: Error) => void,\n    validParents: string[],\n    allowEmpty = true\n  ) {\n    const hasValidParent = validParents\n      .map((p) => p.toUpperCase())\n      .includes(host.parentElement?.nodeName || '');\n    const tagName = host.nodeName.toLowerCase();\n\n    if (!hasValidParent) {\n      setError(\n        new Error(\n          `The \"${tagName}\" component has to be the child of one of the following: ${validParents\n            .map((p) => `\"${p.toLowerCase()}\"`)\n            .join(', ')}.`\n        )\n      );\n      return;\n    }\n\n    if (\n      host.parentElement?.attributes.getNamedItem('display')?.value === 'grid'\n    ) {\n      this.gridCellLinkTarget = host.parentElement?.attributes.getNamedItem(\n        'grid-cell-link-target'\n      )?.value as ItemTarget;\n    }\n\n    const template = host.querySelector('template');\n    if (!template) {\n      setError(\n        new Error(\n          `The \"${tagName}\" component must contain a \"template\" element as a child.`\n        )\n      );\n      return;\n    }\n\n    if (!allowEmpty && !template.innerHTML.trim()) {\n      setError(\n        new Error(`The \"template\" tag inside \"${tagName}\" cannot be empty.`)\n      );\n      return;\n    }\n\n    if (template.content.querySelector('script')) {\n      console.warn(\n        'Any \"script\" tags defined inside of \"template\" elements are not supported and will not be executed when the products are rendered.',\n        host\n      );\n    }\n\n    const {section: sectionNodes, other: otherNodes} = groupNodesByType(\n      template.content.childNodes\n    );\n    if (sectionNodes?.length && otherNodes?.length) {\n      console.warn(\n        'Product templates should only contain section elements or non-section elements. Future updates could unpredictably affect this product template.',\n        host,\n        {sectionNodes, otherNodes}\n      );\n    }\n  }\n\n  getTemplate(\n    conditions: ProductTemplateCondition[],\n    error: Error\n  ): ProductTemplate<TemplateContent> | null {\n    if (error) {\n      return null;\n    }\n\n    return {\n      conditions: conditions.concat(this.matchConditions),\n      content: getTemplateElement(this.host).content!,\n      linkContent: this.getLinkTemplateElement(this.host).content!,\n      priority: 1,\n    };\n  }\n\n  renderIfError(error: Error) {\n    if (error) {\n      return (\n        <atomic-component-error\n          element={this.host}\n          error={error}\n        ></atomic-component-error>\n      );\n    }\n  }\n  getDefaultLinkTemplateElement() {\n    const linkTemplate = document.createElement('template');\n    linkTemplate.innerHTML = `<atomic-product-link>${this.gridCellLinkTarget ? `<a slot=\"attributes\" target=\"${this.gridCellLinkTarget}\"></a>` : ''}</atomic-product-link>`;\n    return linkTemplate;\n  }\n\n  getLinkTemplateElement(host: HTMLElement) {\n    return (\n      host.querySelector<HTMLTemplateElement>('template[slot=\"link\"]') ??\n      this.getDefaultLinkTemplateElement()\n    );\n  }\n}\n\nfunction getTemplateElement(host: HTMLElement) {\n  return host.querySelector<HTMLTemplateElement>('template:not([slot])')!;\n}\n\nexport function makeDefinedConditions(\n  ifDefined?: string,\n  ifNotDefined?: string\n): ProductTemplateCondition[] {\n  const conditions: ProductTemplateCondition[] = [];\n  if (ifDefined) {\n    const fieldNames = ifDefined.split(',');\n    conditions.push(ProductTemplatesHelpers.fieldsMustBeDefined(fieldNames));\n  }\n\n  if (ifNotDefined) {\n    const fieldNames = ifNotDefined.split(',');\n    conditions.push(ProductTemplatesHelpers.fieldsMustNotBeDefined(fieldNames));\n  }\n  return conditions;\n}\n"],"version":3}