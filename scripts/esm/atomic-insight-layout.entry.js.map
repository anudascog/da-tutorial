{"file":"atomic-insight-layout.entry.js","mappings":";;;;;;;;;;;;;;;;;;;;;;MAgBa,mBAAmB;;;;;;QASe,WAAM,GAAG,KAAK,CAAC;sBAAN,KAAK;;IAGpD,YAAY;QACjB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;SACtE;aAAM;YACL,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;KACF;IAEO,YAAY;QAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC;QACnD,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACrE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACtC;IAEM,gBAAgB;QACrB,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,QAAQ,CAAC,wBAAwB,CAAC,CAAC;QAC9D,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QAElB,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;;;;;;AArB4B;IAA5B,kBAAkB,EAAE;qDAAmC;;;;","names":[],"sources":["src/components/insight/atomic-insight-layout/atomic-insight-layout.tsx"],"sourcesContent":["import {Component, Element, Prop, Watch} from '@stencil/core';\nimport {\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {randomID} from '../../../utils/utils';\nimport {InsightBindings} from '../atomic-insight-interface/atomic-insight-interface';\nimport {buildInsightLayout} from './insight-layout';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-insight-layout',\n  shadow: false,\n})\nexport class AtomicInsightLayout\n  implements InitializableComponent<InsightBindings>\n{\n  public error!: Error;\n  private styleTag?: HTMLStyleElement;\n  @Element() private host!: HTMLElement;\n  /**\n   * Whether the interface should be shown in widget format.\n   */\n  @Prop({reflect: true, mutable: true}) public widget = false;\n  @InitializeBindings() public bindings!: InsightBindings;\n  @Watch('widget')\n  public updateStyles() {\n    if (this.styleTag) {\n      this.styleTag.innerHTML = buildInsightLayout(this.host, this.widget);\n    } else {\n      this.makeStyleTag();\n    }\n  }\n\n  private makeStyleTag() {\n    this.styleTag = this.bindings.createStyleElement();\n    this.styleTag.innerHTML = buildInsightLayout(this.host, this.widget);\n    this.host.appendChild(this.styleTag);\n  }\n\n  public componentDidLoad() {\n    const id = this.host.id || randomID('atomic-insight-layout-');\n    this.host.id = id;\n\n    this.makeStyleTag();\n  }\n}\n"],"version":3}