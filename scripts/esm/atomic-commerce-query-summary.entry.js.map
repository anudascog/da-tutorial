{"file":"atomic-commerce-query-summary.entry.js","mappings":";;;;;;;;;;;;;;AAAA,MAAM,6BAA6B,GAAG,sk1DAAsk1D,CAAC;AAC7m1D,yCAAe,6BAA6B;;;;;;;;;;;;MCoC/B,0BAA0B;;;;;;IAoB9B,UAAU;QACf,MAAM,UAAU,GACd,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,KAAK,iBAAiB;cACrD,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;cACzC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,sBAAsB,GAAG,UAAU,CAAC,OAAO,EAAE,CAAC;KACpD;IAEM,MAAM;QACX,MAAM,EACJ,YAAY,EACZ,oBAAoB,EACpB,WAAW,EACX,qBAAqB,EACrB,WAAW,EACX,QAAQ,GACT,GAAG,IAAI,CAAC,2BAA2B,CAAC;QAErC,MAAM,EAAC,OAAO,EAAE,UAAU,EAAE,eAAe,EAAC,GAC1C,oCAAoC,CAAC;YACnC,KAAK,EAAE,YAAY;YACnB,IAAI,EAAE,WAAW;YACjB,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,2BAA2B,CAAC;kBAClD,IAAI,CAAC,2BAA2B,CAAC,KAAK;kBACtC,EAAE;YACN,KAAK,EAAE,qBAAqB;YAC5B,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI;YACxB,SAAS,EAAE,KAAK;SACjB,CAAC,CAAC;QAEL,IAAI,CAAC,WAAW,GAAG,eAAe,CAAC;QAEnC,QACE,EAAC,iBAAiB,qDAChB,mBAAmB,EAAE,oBAAoB,EACzC,UAAU,EAAE,WAAW,EACvB,QAAQ,EAAE,QAAQ,IAElB,EAAC,qBAAqB,uDACpB,EAAC,eAAe,IACd,GAAG,EAAE,OAAO,EACZ,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EACxB,MAAM,EAAE,UAAU,EAClB,KAAK,EAAE,WAAW,GAClB,CACoB,CACN,EACpB;KACH;IAEO,QAAQ,CACd,KAAsD;QAEtD,OAAO,OAAO,IAAI,KAAK,CAAC;KACzB;;AAvE4B;IAA5B,kBAAkB,EAAE;4DAAoC;AAQjD;IAFP,qBAAqB,CAAC,wBAAwB,CAAC;+EAIjB;AAKrB;IADT,cAAc,CAAC,eAAe,CAAC;+DACD;;;;;","names":[],"sources":["src/components/commerce/atomic-commerce-query-summary/atomic-commerce-query-summary.pcss?tag=atomic-commerce-query-summary&encapsulation=shadow","src/components/commerce/atomic-commerce-query-summary/atomic-commerce-query-summary.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n\n:host {\n  overflow: hidden;\n}\n","import {\n  buildProductListing,\n  buildSearch,\n  Pagination,\n  ProductListingSummaryState,\n  SearchSummaryState,\n  Summary,\n} from '@coveo/headless/commerce';\nimport {Component, h, State} from '@stencil/core';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {LocalizedString} from '../../../utils/jsx-utils';\nimport {AriaLiveRegion} from '../../../utils/stencil-accessibility-utils';\nimport {QuerySummaryContainer} from '../../common/query-summary/stencil-container';\nimport {QuerySummaryGuard} from '../../common/query-summary/stencil-guard';\nimport {getProductQuerySummaryI18nParameters} from '../../common/query-summary/stencil-utils';\nimport {CommerceBindings} from '../atomic-commerce-interface/atomic-commerce-interface';\n\n/**\n * The `atomic-commerce-query-summary` component displays information about the current range of results and the request duration (e.g., \"Results 1-10 of 123 in 0.47 seconds\").\n *\n * @part container - The container for the whole summary.\n * @part results - The container for the results.\n * @part highlight - The summary highlights.\n * @part query - The summary highlighted query.\n * @part placeholder - The query summary placeholder used while the search interface is initializing.\n *\n * @alpha\n */\n@Component({\n  tag: 'atomic-commerce-query-summary',\n  styleUrl: 'atomic-commerce-query-summary.pcss',\n  shadow: true,\n})\nexport class AtomicCommerceQuerySummary\n  implements InitializableComponent<CommerceBindings>\n{\n  @InitializeBindings() public bindings!: CommerceBindings;\n  public listingOrSearchSummary!: Summary<\n    SearchSummaryState | ProductListingSummaryState\n  >;\n  public pagination!: Pagination;\n\n  @BindStateToController('listingOrSearchSummary')\n  @State()\n  private listingOrSearchSummaryState!:\n    | SearchSummaryState\n    | ProductListingSummaryState;\n\n  @State() public error!: Error;\n\n  @AriaLiveRegion('query-summary')\n  protected ariaMessage!: string;\n\n  public initialize() {\n    const controller =\n      this.bindings.interfaceElement.type === 'product-listing'\n        ? buildProductListing(this.bindings.engine)\n        : buildSearch(this.bindings.engine);\n    this.listingOrSearchSummary = controller.summary();\n  }\n\n  public render() {\n    const {\n      firstProduct,\n      firstRequestExecuted,\n      lastProduct,\n      totalNumberOfProducts,\n      hasProducts,\n      hasError,\n    } = this.listingOrSearchSummaryState;\n\n    const {i18nKey, highlights, ariaLiveMessage} =\n      getProductQuerySummaryI18nParameters({\n        first: firstProduct,\n        last: lastProduct,\n        query: this.isSearch(this.listingOrSearchSummaryState)\n          ? this.listingOrSearchSummaryState.query\n          : '',\n        total: totalNumberOfProducts,\n        i18n: this.bindings.i18n,\n        isLoading: false,\n      });\n\n    this.ariaMessage = ariaLiveMessage;\n\n    return (\n      <QuerySummaryGuard\n        firstSearchExecuted={firstRequestExecuted}\n        hasResults={hasProducts}\n        hasError={hasError}\n      >\n        <QuerySummaryContainer>\n          <LocalizedString\n            key={i18nKey}\n            i18n={this.bindings.i18n}\n            params={highlights}\n            count={lastProduct}\n          />\n        </QuerySummaryContainer>\n      </QuerySummaryGuard>\n    );\n  }\n\n  private isSearch(\n    state: ProductListingSummaryState | SearchSummaryState\n  ): state is SearchSummaryState {\n    return 'query' in state;\n  }\n}\n"],"version":3}