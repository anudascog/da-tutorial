{"file":"atomic-insight-result-quickview-action.entry.js","mappings":"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","names":[],"sources":["src/components/insight/atomic-insight-result-quickview-action/atomic-insight-result-quickview-action.pcss?tag=atomic-insight-result-quickview-action","src/components/insight/atomic-insight-result-quickview-action/atomic-insight-result-quickview-action.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n","import {Schema, StringValue} from '@coveo/bueno';\nimport {\n  buildQuickview,\n  QuickviewState,\n  Quickview,\n  Result,\n} from '@coveo/headless';\nimport {Component, Listen, Prop, State, h, Element} from '@stencil/core';\nimport QuickviewIcon from '../../../images/preview.svg';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {\n  AriaLiveRegion,\n  FocusTargetController,\n} from '../../../utils/stencil-accessibility-utils';\nimport {IconButton} from '../../common/iconButton';\nimport {Bindings} from '../../search/atomic-search-interface/atomic-search-interface';\nimport {ResultContext} from '../../search/result-template-components/result-template-decorators';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-insight-result-quickview-action',\n  styleUrl: 'atomic-insight-result-quickview-action.pcss',\n})\nexport class AtomicInsightResultQuickviewAction\n  implements InitializableComponent\n{\n  @InitializeBindings() public bindings!: Bindings;\n  @ResultContext() private result!: Result;\n\n  private buttonFocusTarget?: FocusTargetController;\n\n  @Element() host!: HTMLElement;\n  @State() public error!: Error;\n\n  public quickview!: Quickview;\n\n  @BindStateToController('quickview')\n  @State()\n  public quickviewState!: QuickviewState;\n\n  /**\n   * The `sandbox` attribute to apply to the quickview iframe.\n   *\n   * The quickview is loaded inside an iframe with a [`sandbox`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-sandbox) attribute for security reasons.\n   *\n   * This attribute exists primarily to protect against potential XSS attacks that could originate from the document being displayed.\n   *\n   * By default, the sandbox attributes are: `allow-popups allow-top-navigation allow-same-origin`.\n   *\n   * `allow-same-origin` is not optional, and must always be included in the list of allowed capabilities for the component to function properly.\n   */\n  @Prop()\n  public sandbox = 'allow-popups allow-top-navigation allow-same-origin';\n\n  @AriaLiveRegion('quickview')\n  protected quickviewAriaMessage!: string;\n\n  @Listen('atomic/quickview/next', {target: 'body'})\n  public onNextQuickview(evt: Event) {\n    evt.stopImmediatePropagation();\n    this.quickview.next();\n  }\n\n  @Listen('atomic/quickview/previous', {target: 'body'})\n  public onPreviousQuickview(evt: Event) {\n    evt.stopImmediatePropagation();\n    this.quickview.previous();\n  }\n\n  private quickviewModalRef?: HTMLAtomicQuickviewModalElement;\n\n  public get focusTarget() {\n    if (!this.buttonFocusTarget) {\n      this.buttonFocusTarget = new FocusTargetController(this);\n    }\n    return this.buttonFocusTarget;\n  }\n\n  public initialize() {\n    this.quickview = buildQuickview(this.bindings.engine, {\n      options: {result: this.result},\n    });\n    new Schema({\n      sandbox: new StringValue({\n        required: true,\n        regex: /allow-same-origin/,\n      }),\n    }).validate({sandbox: this.sandbox});\n  }\n\n  private addQuickviewModalIfNeeded() {\n    if (this.quickviewModalRef) {\n      return;\n    }\n\n    const quickviewModal = this.bindings.interfaceElement.querySelector(\n      'atomic-quickview-modal'\n    );\n    if (quickviewModal) {\n      this.quickviewModalRef = quickviewModal;\n      return;\n    }\n    this.quickviewModalRef = document.createElement('atomic-quickview-modal');\n    this.quickviewModalRef.setAttribute('sandbox', this.sandbox);\n    this.bindings.interfaceElement.appendChild(this.quickviewModalRef);\n  }\n\n  private updateModalContent() {\n    if (this.quickviewModalRef && this.quickview.state.content) {\n      this.quickviewModalRef.content = this.quickview.state.content;\n      this.quickviewModalRef.result = this.result;\n      this.quickviewModalRef.total = this.quickviewState.totalResults;\n      this.quickviewModalRef.current = this.quickviewState.currentResult;\n      this.quickviewModalRef.modalCloseCallback = () =>\n        this.focusTarget.focus();\n\n      this.quickviewAriaMessage = this.quickviewState.isLoading\n        ? this.bindings.i18n.t('quickview-loading')\n        : this.bindings.i18n.t('quickview-loaded', {\n            first: this.quickviewState.currentResult,\n            last: this.quickviewState.totalResults,\n            title: this.result.title,\n          });\n    }\n  }\n\n  private onClick(event?: MouseEvent) {\n    event?.stopPropagation();\n    this.quickview.fetchResultContent();\n  }\n\n  private get shouldRenderQuickview() {\n    return this.quickviewState.resultHasPreview;\n  }\n\n  public render() {\n    this.addQuickviewModalIfNeeded();\n    this.updateModalContent();\n    if (this.shouldRenderQuickview) {\n      return (\n        <IconButton\n          partPrefix=\"result-action\"\n          style=\"outline-neutral\"\n          ref={this.focusTarget.setTarget}\n          icon={QuickviewIcon}\n          title={this.bindings.i18n.t('quickview')}\n          onClick={() => this.onClick()}\n        />\n      );\n    }\n  }\n}\n"],"version":3}