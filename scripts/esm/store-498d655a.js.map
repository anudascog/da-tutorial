{"file":"store-498d655a.js","mappings":"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","names":[],"sources":["src/components/common/interface/store.ts"],"sourcesContent":["import {DateFacetValue, NumericFacetValue} from '@coveo/headless';\nimport {isInDocument} from '../../../utils/utils';\nimport {\n  FacetInfo,\n  FacetStore,\n  FacetType,\n  FacetValueFormat,\n} from '../facets/facet-common-store';\nimport {AnyEngineType} from './bindings';\n\nexport function createStore<StoreData extends Record<string, unknown>>(\n  initialState: StoreData\n): CommonStore<StoreData> {\n  const listeners = new Map<\n    keyof StoreData,\n    Set<(newValue: unknown) => void>\n  >();\n\n  const state = new Proxy(initialState, {\n    set(target, prop: string, value) {\n      const oldValue = target[prop];\n      if (oldValue !== value) {\n        (target as Record<string, unknown>)[prop] = value;\n\n        if (listeners.has(prop)) {\n          for (const cb of listeners.get(prop)!) {\n            cb(value);\n          }\n        }\n      }\n      return true;\n    },\n  });\n\n  const get = <PropName extends keyof StoreData>(\n    propName: PropName\n  ): StoreData[PropName] => {\n    return state[propName];\n  };\n\n  const set = <PropName extends keyof StoreData>(\n    propName: PropName,\n    value: StoreData[PropName]\n  ): void => {\n    state[propName] = value;\n  };\n\n  const onChange = <PropName extends keyof StoreData>(\n    propName: PropName,\n    callback: (newValue: StoreData[PropName]) => void\n  ): (() => void) => {\n    if (!listeners.has(propName)) {\n      listeners.set(propName, new Set());\n    }\n    listeners.get(propName)!.add(callback as (newValue: unknown) => void);\n\n    return () => {\n      listeners.get(propName)!.delete(callback as (newValue: unknown) => void);\n      if (listeners.get(propName)!.size === 0) {\n        listeners.delete(propName);\n      }\n    };\n  };\n\n  return {\n    state,\n    get,\n    set,\n    onChange,\n  };\n}\n\nexport interface CommonStore<StoreData> {\n  state: StoreData;\n  get: <PropName extends keyof StoreData>(\n    propName: PropName\n  ) => StoreData[PropName];\n  set: <PropName extends keyof StoreData>(\n    propName: PropName,\n    value: StoreData[PropName]\n  ) => void;\n  onChange: <PropName extends keyof StoreData>(\n    propName: PropName,\n    cb: (newValue: StoreData[PropName]) => void\n  ) => () => void;\n}\n\nexport type BaseStore<T> = CommonStore<T> & {\n  getUniqueIDFromEngine(engine: unknown): string | undefined;\n};\n\nexport function createBaseStore<T extends {}>(initialState: T): BaseStore<T> {\n  const store = createStore(initialState) as CommonStore<T>;\n\n  return {\n    ...store,\n\n    getUniqueIDFromEngine(_engine: AnyEngineType) {\n      throw new Error(\n        'getUniqueIDFromEngine not implemented at the base store level.'\n      );\n    },\n  };\n}\n\nexport interface ResultListInfo {\n  focusOnNextNewResult(): void;\n  focusOnFirstResultAfterNextSearch(): Promise<void>;\n}\n\nexport function unsetLoadingFlag(\n  store: CommonStore<{loadingFlags: string[]}>,\n  loadingFlag: string\n) {\n  const flags = store.state.loadingFlags;\n  store.state.loadingFlags = flags.filter((value) => value !== loadingFlag);\n}\n\nexport function setLoadingFlag(\n  store: CommonStore<{loadingFlags: string[]}>,\n  loadingFlag: string\n) {\n  const flags = store.state.loadingFlags;\n  store.state.loadingFlags = flags.concat(loadingFlag);\n}\n\ninterface Facets {\n  facets: FacetStore<FacetInfo>;\n  numericFacets: FacetStore<FacetInfo & FacetValueFormat<NumericFacetValue>>;\n  dateFacets: FacetStore<FacetInfo & FacetValueFormat<DateFacetValue>>;\n  categoryFacets: FacetStore<FacetInfo>;\n  facetElements: HTMLElement[];\n}\n\nexport const isRefineModalFacet = 'is-refine-modal';\n\nexport function registerFacet<T extends FacetType, U extends string>(\n  store: CommonStore<Facets>,\n  facetType: T,\n  data: Facets[T][U] & {facetId: U; element: HTMLElement}\n) {\n  const clearExistingFacetElement = (facetType: FacetType, facetId: string) => {\n    if (store.state[facetType][facetId]) {\n      store.state.facetElements = store.state.facetElements.filter(\n        (facetElement) => facetElement.getAttribute('facet-id') !== facetId\n      );\n    }\n  };\n\n  if (data.element.getAttribute(isRefineModalFacet) !== null) {\n    return;\n  }\n\n  clearExistingFacetElement(facetType, data.facetId);\n  store.state.facetElements.push(data.element);\n  store.state[facetType][data.facetId] = data;\n}\n\nexport function getFacetElements(store: CommonStore<Facets>) {\n  return store.state.facetElements.filter((element) => isInDocument(element));\n}\n\nexport function waitUntilAppLoaded(\n  store: CommonStore<{loadingFlags: string[]}>,\n  callback: () => void\n) {\n  if (!store.state.loadingFlags.length) {\n    callback();\n  } else {\n    store.onChange('loadingFlags', (flags) => {\n      if (!flags.length) {\n        callback();\n      }\n    });\n  }\n}\n\nexport function createAppLoadedListener(\n  store: CommonStore<{loadingFlags: string[]}>,\n  callback: (isAppLoaded: boolean) => void\n) {\n  const updateIsAppLoaded = () => {\n    const isAppLoaded = store.state.loadingFlags.length === 0;\n    callback(isAppLoaded);\n  };\n\n  store.onChange('loadingFlags', updateIsAppLoaded);\n  updateIsAppLoaded();\n}\n"],"version":3}