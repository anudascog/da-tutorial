{"file":"atomic-product-description.entry.js","mappings":";;;;;;;;;;;;;;;AAAA,MAAM,2BAA2B,GAAG,uUAAuU,CAAC;AAC5W,uCAAe,2BAA2B;;;;;;;;;;;;MCuB7B,wBAAwB;IA+BnC;;QArBiB,eAAU,GAAG,KAAK,CAAC;QACnB,gBAAW,GAAG,KAAK,CAAC;;;;QAQtB,kBAAa,GAAkB,GAAG,CAAC;;;;QAKnC,UAAK,GAAsC,cAAc,CAAC;;;;QAK1D,kBAAa,GAAG,IAAI,CAAC;0BAnBN,KAAK;2BACJ,KAAK;6BAQU,GAAG;qBAKS,cAAc;6BAKzC,IAAI;QAGjC,IAAI,CAAC,cAAc,GAAG,IAAI,cAAc,CAAC;YACvC,IACE,IAAI,CAAC,eAAe;gBACpB,IAAI,CAAC,eAAe,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,EACrE;gBACA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;aACzB;iBAAM;gBACL,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;aAC1B;SACF,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAEO,aAAa;QACnB,IAAI,MAAM,CAAC;YACT,aAAa,EAAE,IAAI,WAAW,CAAC;gBAC7B,WAAW,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;aAC1C,CAAC;YACF,KAAK,EAAE,IAAI,WAAW,CAAC;gBACrB,WAAW,EAAE,CAAC,cAAc,EAAE,gBAAgB,CAAC;aAChD,CAAC;SACH,CAAC,CAAC,QAAQ,CAAC;YACV,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC,CAAC;KACJ;IAED,gBAAgB;QACd,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CACnD,kBAAkB,CACD,CAAC;QACpB,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SACnD;KACF;IAEO,cAAc,CAAC,CAAc;QACnC,IAAI,CAAC,EAAE;YACL,CAAC,CAAC,eAAe,EAAE,CAAC;SACrB;QAED,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;KACpC;IAED,oBAAoB;QAClB,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;KAClC;IAEM,MAAM;QACX,MAAM,kBAAkB,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC;QAE5D,IAAI,CAAC,kBAAkB,EAAE;YACvB,OAAO,EAAC,MAAM,OAAG,CAAC;SACnB;QAED,QACE,EAAC,cAAc,IACb,UAAU,EAAE,IAAI,CAAC,UAAU,EAC3B,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,aAAa,EAAE,IAAI,CAAC,aAAa,EACjC,cAAc,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAC7C,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,EAChD,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,EAChD,aAAa,EAAE,IAAI,CAAC,aAAa,IAEjC,2BAAqB,KAAK,EAAE,IAAI,CAAC,KAAK,GAAwB,CAC/C,EACjB;KACH;;;AAjG4B;IAA5B,kBAAkB,EAAE;0DAAoC;AAC/B;IAAzB,cAAc,EAAE;yDAA2B;;;;;","names":[],"sources":["src/components/commerce/product-template-components/atomic-product-description/atomic-product-description.pcss?tag=atomic-product-description","src/components/commerce/product-template-components/atomic-product-description/atomic-product-description.tsx"],"sourcesContent":["@import '../../../common/expandable-text/expandable-text.pcss';\n","import {Schema, StringValue} from '@coveo/bueno';\nimport {Product} from '@coveo/headless/commerce';\nimport {Component, State, h, Element, Prop} from '@stencil/core';\nimport {\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {\n  ExpandableText,\n  TruncateAfter,\n} from '../../../common/expandable-text/expandable-text';\nimport {Hidden} from '../../../common/stencil-hidden';\nimport {CommerceBindings} from '../../atomic-commerce-interface/atomic-commerce-interface';\nimport {ProductContext} from '../product-template-decorators';\n\n/**\n * @alpha\n * The `atomic-product-description` component renders the description of a product.\n */\n@Component({\n  tag: 'atomic-product-description',\n  styleUrl: 'atomic-product-description.pcss',\n  shadow: false,\n})\nexport class AtomicProductDescription\n  implements InitializableComponent<CommerceBindings>\n{\n  @InitializeBindings() public bindings!: CommerceBindings;\n  @ProductContext() private product!: Product;\n\n  @Element() hostElement!: HTMLElement;\n\n  public error!: Error;\n\n  @State() private isExpanded = false;\n  @State() private isTruncated = false;\n\n  private descriptionText!: HTMLDivElement;\n  private resizeObserver: ResizeObserver;\n\n  /**\n   * The number of lines after which the product description should be truncated. A value of \"none\" will disable truncation.\n   */\n  @Prop() public truncateAfter: TruncateAfter = '2';\n\n  /**\n   * The name of the description field to use.\n   */\n  @Prop() public field: 'ec_description' | 'ec_shortdesc' = 'ec_shortdesc';\n\n  /**\n   * Whether the description should be collapsible after being expanded.\n   */\n  @Prop() public isCollapsible = true;\n\n  constructor() {\n    this.resizeObserver = new ResizeObserver(() => {\n      if (\n        this.descriptionText &&\n        this.descriptionText.scrollHeight > this.descriptionText.clientHeight\n      ) {\n        this.isTruncated = true;\n      } else {\n        this.isTruncated = false;\n      }\n    });\n    this.validateProps();\n  }\n\n  private validateProps() {\n    new Schema({\n      truncateAfter: new StringValue({\n        constrainTo: ['none', '1', '2', '3', '4'],\n      }),\n      field: new StringValue({\n        constrainTo: ['ec_shortdesc', 'ec_description'],\n      }),\n    }).validate({\n      truncateAfter: this.truncateAfter,\n      field: this.field,\n    });\n  }\n\n  componentDidLoad() {\n    this.descriptionText = this.hostElement.querySelector(\n      '.expandable-text'\n    ) as HTMLDivElement;\n    if (this.descriptionText) {\n      this.resizeObserver.observe(this.descriptionText);\n    }\n  }\n\n  private onToggleExpand(e?: MouseEvent) {\n    if (e) {\n      e.stopPropagation();\n    }\n\n    this.isExpanded = !this.isExpanded;\n  }\n\n  disconnectedCallback() {\n    this.resizeObserver.disconnect();\n  }\n\n  public render() {\n    const productDescription = this.product[this.field] ?? null;\n\n    if (!productDescription) {\n      return <Hidden />;\n    }\n\n    return (\n      <ExpandableText\n        isExpanded={this.isExpanded}\n        isTruncated={this.isTruncated}\n        truncateAfter={this.truncateAfter}\n        onToggleExpand={(e) => this.onToggleExpand(e)}\n        showMoreLabel={this.bindings.i18n.t('show-more')}\n        showLessLabel={this.bindings.i18n.t('show-less')}\n        isCollapsible={this.isCollapsible}\n      >\n        <atomic-product-text field={this.field}></atomic-product-text>\n      </ExpandableText>\n    );\n  }\n}\n"],"version":3}