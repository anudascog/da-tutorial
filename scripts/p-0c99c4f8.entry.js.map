{"version":3,"names":["AtomicCommerceText","this","strings","value","bindings","i18n","t","count","connectedCallback","error","Error","render","__decorate","InitializeBindings","AtomicProductText","shouldHighlight","shouldRenderHighlights","isFieldSupportedForHighlighting","includes","field","productValueAsString","getStringValueFromProductOrNull","product","h","ItemTextFallback","host","logger","engine","defaultValue","default","item","getProperty","ProductTemplatesHelpers","getProductProperty","getFieldValueCaption","textValue","highlightKeywords","ItemTextHighlighted","highlightString","HighlightUtils","onError","ProductContext"],"sources":["src/components/commerce/atomic-commerce-text/atomic-commerce-text.tsx","src/components/commerce/product-template-components/atomic-product-text/atomic-product-text.tsx"],"sourcesContent":["import {Component, Prop, State} from '@stencil/core';\nimport {\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {CommerceBindings} from '../atomic-commerce-interface/atomic-commerce-interface';\n\n/**\n * @alpha\n * The `atomic-commerce-text` component leverages the I18n translation module through the atomic-commerce-interface.\n */\n@Component({\n  tag: 'atomic-commerce-text',\n  shadow: true,\n})\nexport class AtomicCommerceText\n  implements InitializableComponent<CommerceBindings>\n{\n  @InitializeBindings() public bindings!: CommerceBindings;\n\n  private strings = {\n    value: () =>\n      this.bindings.i18n.t(this.value, {\n        count: this.count,\n      }),\n  };\n  @State() public error!: Error;\n\n  /**\n   * The string key value.\n   */\n  @Prop({reflect: true}) public value!: string;\n  /**\n   * The count value used for plurals.\n   * @type {number}\n   */\n  @Prop({reflect: true}) public count?: number;\n\n  public connectedCallback() {\n    if (!this.value) {\n      this.error = new Error('The \"value\" attribute must be defined.');\n    }\n  }\n\n  public render() {\n    return this.strings.value();\n  }\n}\n","import {\n  Product,\n  ProductTemplatesHelpers,\n  HighlightUtils,\n} from '@coveo/headless/commerce';\nimport {Component, h, Prop, Element, State} from '@stencil/core';\nimport {getFieldValueCaption} from '../../../../utils/field-utils';\nimport {\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {ItemTextFallback} from '../../../common/item-text/stencil-item-text-fallback';\nimport {ItemTextHighlighted} from '../../../common/item-text/stencil-item-text-highlighted';\nimport {CommerceBindings} from '../../atomic-commerce-interface/atomic-commerce-interface';\nimport {ProductContext} from '../product-template-decorators';\nimport {getStringValueFromProductOrNull} from '../product-utils';\n\n/**\n * @alpha\n * The `atomic-product-text` component renders the value of a string product field.\n */\n@Component({\n  tag: 'atomic-product-text',\n  shadow: false,\n})\nexport class AtomicProductText\n  implements InitializableComponent<CommerceBindings>\n{\n  @InitializeBindings() public bindings!: CommerceBindings;\n  @State() public error!: Error;\n\n  @ProductContext() private product!: Product;\n\n  @Element() private host!: HTMLElement;\n\n  /**\n   * The product field which the component should use.\n   * This will look in the Product object first, and then in the product.additionalFields object for the fields.\n   */\n  @Prop({reflect: true}) public field!: string;\n  /**\n   * When this is set to `true`, the component attempts to highlight text based on the highlighting properties provided by the search API response.\n   * This property only works for the product excerpt and the ec_name field.\n   */\n  @Prop({reflect: true}) public shouldHighlight = true;\n  /**\n   * The locale key for the text to display when the configured field has no value.\n   */\n  @Prop({reflect: true}) public default?: string;\n\n  private get shouldRenderHighlights() {\n    return this.shouldHighlight && this.isFieldSupportedForHighlighting();\n  }\n\n  public isFieldSupportedForHighlighting() {\n    return ['ec_name', 'excerpt'].includes(this.field);\n  }\n\n  public render() {\n    const productValueAsString = getStringValueFromProductOrNull(\n      this.product,\n      this.field\n    );\n\n    if (productValueAsString === null) {\n      return (\n        <ItemTextFallback\n          field={this.field}\n          host={this.host}\n          logger={this.bindings.engine.logger}\n          defaultValue={this.default}\n          item={this.product}\n          getProperty={ProductTemplatesHelpers.getProductProperty}\n        >\n          <atomic-commerce-text\n            value={getFieldValueCaption(\n              this.field,\n              this.default!,\n              this.bindings.i18n\n            )}\n          ></atomic-commerce-text>\n        </ItemTextFallback>\n      );\n    }\n\n    const textValue = `${productValueAsString}`;\n    const highlightKeywords = ProductTemplatesHelpers.getProductProperty(\n      this.product,\n      this.field === 'ec_name' ? 'nameHighlights' : 'excerptHighlights'\n    ) as HighlightUtils.HighlightKeyword[];\n\n    return this.shouldRenderHighlights && highlightKeywords ? (\n      <ItemTextHighlighted\n        textValue={textValue}\n        highlightKeywords={highlightKeywords}\n        highlightString={HighlightUtils.highlightString}\n        onError={(error) => (this.error = error)}\n      ></ItemTextHighlighted>\n    ) : (\n      <atomic-commerce-text\n        value={getFieldValueCaption(this.field, textValue, this.bindings.i18n)}\n      ></atomic-commerce-text>\n    );\n  }\n}\n"],"mappings":"k3BAeaA,EAAkB,M,yBAKrBC,KAAAC,QAAU,CAChBC,MAAO,IACLF,KAAKG,SAASC,KAAKC,EAAEL,KAAKE,MAAO,CAC/BI,MAAON,KAAKM,S,+DAeX,iBAAAC,GACL,IAAKP,KAAKE,MAAO,CACfF,KAAKQ,MAAQ,IAAIC,MAAM,yC,EAIpB,MAAAC,GACL,OAAOV,KAAKC,QAAQC,O,GA3BOS,GAA5BC,K,gZCOUC,EAAiB,M,yBAmBEb,KAAAc,gBAAkB,K,+DAAA,K,uBAMhD,0BAAYC,GACV,OAAOf,KAAKc,iBAAmBd,KAAKgB,iC,CAG/B,+BAAAA,GACL,MAAO,CAAC,UAAW,WAAWC,SAASjB,KAAKkB,M,CAGvC,MAAAR,GACL,MAAMS,EAAuBC,EAC3BpB,KAAKqB,QACLrB,KAAKkB,OAGP,GAAIC,IAAyB,KAAM,CACjC,OACEG,EAACC,EAAgB,CACfL,MAAOlB,KAAKkB,MACZM,KAAMxB,KAAKwB,KACXC,OAAQzB,KAAKG,SAASuB,OAAOD,OAC7BE,aAAc3B,KAAK4B,QACnBC,KAAM7B,KAAKqB,QACXS,YAAaC,EAAwBC,oBAErCV,EAAA,wBACEpB,MAAO+B,EACLjC,KAAKkB,MACLlB,KAAK4B,QACL5B,KAAKG,SAASC,Q,CAOxB,MAAM8B,EAAY,GAAGf,IACrB,MAAMgB,EAAoBJ,EAAwBC,mBAChDhC,KAAKqB,QACLrB,KAAKkB,QAAU,UAAY,iBAAmB,qBAGhD,OAAOlB,KAAKe,wBAA0BoB,EACpCb,EAACc,EAAmB,CAClBF,UAAWA,EACXC,kBAAmBA,EACnBE,gBAAiBC,EAAeD,gBAChCE,QAAU/B,GAAWR,KAAKQ,MAAQA,IAGpCc,EAAA,wBACEpB,MAAO+B,EAAqBjC,KAAKkB,MAAOgB,EAAWlC,KAAKG,SAASC,O,6BAxE1CO,EAAA,CAA5BC,K,+BAGyBD,EAAA,CAAzB6B,K","ignoreList":[]}