{"file":"stencil-suggestion-manager.js","mappings":"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","names":[],"sources":["src/components/common/search-box/stencil-search-box-wrapper.tsx","src/components/common/search-box/stencil-text-area-clear-button.tsx","src/components/common/search-box/stencil-search-text-area.tsx","src/utils/promise-utils.ts","src/components/common/suggestions/stencil-suggestion-manager.ts"],"sourcesContent":["import {FunctionalComponent, h} from '@stencil/core';\n\ninterface Props {\n  disabled: boolean;\n  onFocusout?: (event: FocusEvent) => void;\n}\n\nexport const SearchBoxWrapper: FunctionalComponent<Props> = (\n  props,\n  children\n) => {\n  const getClasses = () => {\n    const baseClasses =\n      'flex bg-background w-full border border-neutral rounded-md focus-within:ring-3 absolute top-0 left-0';\n    const focusClasses = props.disabled\n      ? 'focus-within:border-disabled focus-within:ring-neutral'\n      : 'focus-within:border-primary focus-within:ring-ring-primary';\n\n    return [baseClasses, focusClasses].join(' ');\n  };\n\n  return (\n    <div part=\"wrapper\" class={getClasses()} onFocusout={props.onFocusout}>\n      {children}\n    </div>\n  );\n};\n","import {FunctionalComponent, h} from '@stencil/core';\nimport ClearSlim from '../../../images/clear-slim.svg';\nimport {AnyBindings} from '../interface/bindings';\nimport {Button, StencilButtonProps} from '../stencil-button';\n\ninterface Props extends Partial<StencilButtonProps> {\n  bindings: AnyBindings;\n  inputRef: HTMLInputElement | HTMLTextAreaElement | null;\n}\n\nexport const TextAreaClearButton: FunctionalComponent<Props> = ({\n  inputRef,\n  bindings,\n  onClick,\n  ...defaultButtonProps\n}) => (\n  <div\n    part=\"clear-button-wrapper\"\n    class=\"ml-2 flex items-center justify-center py-2\"\n  >\n    <Button\n      style=\"text-transparent\"\n      part=\"clear-button\"\n      class=\"text-neutral-dark flex h-8 w-8 shrink-0 items-center justify-center\"\n      onClick={() => {\n        onClick?.();\n        inputRef?.focus();\n      }}\n      ariaLabel={bindings.i18n.t('clear')}\n      {...defaultButtonProps}\n    >\n      <atomic-icon\n        part=\"clear-icon\"\n        icon={ClearSlim}\n        class=\"h-4 w-4\"\n      ></atomic-icon>\n    </Button>\n  </div>\n);\n","import {FunctionalComponent, h} from '@stencil/core';\nimport {JSXBase} from '@stencil/core/internal';\nimport {AnyBindings} from '../interface/bindings';\nimport {TextAreaClearButton} from './stencil-text-area-clear-button';\n\ninterface Props extends JSXBase.TextareaHTMLAttributes<HTMLTextAreaElement> {\n  textAreaRef: HTMLTextAreaElement;\n  loading: boolean;\n  bindings: AnyBindings;\n  value: string;\n  ariaLabel: string;\n  onClear(): void;\n  popup?: {\n    id: string;\n    activeDescendant: string;\n    expanded: boolean;\n    hasSuggestions: boolean;\n  };\n}\n\nfunction getPopupAttributes(props: Required<Props>['popup']) {\n  return {\n    autocomplete: 'off',\n    autocapitalize: 'off',\n    autocorrect: 'off',\n    ...(props.activeDescendant && {\n      'aria-activedescendant': props.activeDescendant,\n    }),\n    'aria-autocomplete': 'both',\n    'aria-haspopup': 'true',\n    'aria-controls': props.id,\n  };\n}\n\nfunction syncTextWithReplica(elem: HTMLTextAreaElement, value?: string) {\n  const parent = elem?.parentNode as HTMLElement;\n  if (!parent) {\n    return;\n  }\n  if (elem.value === '\\n') {\n    return;\n  }\n  parent.dataset.replicatedValue = value ?? elem.value;\n}\n\nfunction resetReplicaText(elem: HTMLTextAreaElement) {\n  const parent = elem?.parentNode as HTMLElement;\n  if (parent) {\n    delete parent.dataset.replicatedValue;\n  }\n}\n\nfunction collapseTextArea(elem: HTMLTextAreaElement) {\n  const parent = elem?.parentNode as HTMLElement;\n  if (parent) {\n    parent.classList.remove('expanded');\n  }\n}\n\nfunction expandTextArea(elem: HTMLTextAreaElement) {\n  const parent = elem?.parentNode as HTMLElement;\n  if (parent) {\n    parent.classList.add('expanded');\n  }\n}\n\nexport const SearchTextArea: FunctionalComponent<Props> = ({\n  textAreaRef,\n  loading,\n  bindings,\n  onInput,\n  onFocus,\n  onBlur,\n  onChange,\n  onKeyDown,\n  onKeyUp,\n  value,\n  ariaLabel,\n  onClear,\n  popup,\n  ...defaultInputProps\n}) => (\n  <div class=\"flex grow overflow-hidden\">\n    <div part=\"textarea-expander\" class=\"grid grow overflow-hidden\">\n      <textarea\n        part=\"textarea\"\n        aria-label={ariaLabel}\n        placeholder={bindings.i18n.t('search')}\n        class=\"placeholder-neutral-dark\"\n        rows={1}\n        onInput={(e) => {\n          onInput?.(e);\n          syncTextWithReplica(textAreaRef);\n        }}\n        onKeyDown={(e) => {\n          syncTextWithReplica(textAreaRef);\n          if (e.key === 'Enter') {\n            if (e.shiftKey) {\n              return;\n            }\n            e.preventDefault();\n          }\n          onKeyDown?.(e);\n        }}\n        onKeyUp={(e) => {\n          onKeyUp?.(e);\n          if (e.key === 'Enter') {\n            e.preventDefault();\n            return;\n          }\n          syncTextWithReplica(textAreaRef);\n        }}\n        onBlur={(e) => {\n          onBlur?.(e);\n          collapseTextArea(textAreaRef);\n          syncTextWithReplica(textAreaRef);\n        }}\n        onChange={(e) => {\n          onChange?.(e);\n          syncTextWithReplica(textAreaRef);\n        }}\n        onFocus={(e) => {\n          onFocus?.(e);\n          const target = e.target as HTMLTextAreaElement;\n          syncTextWithReplica(textAreaRef ?? target);\n          expandTextArea(textAreaRef ?? target);\n        }}\n        autocomplete=\"off\"\n        {...(popup && getPopupAttributes(popup))}\n        {...defaultInputProps}\n        value={value}\n      />\n    </div>\n\n    {loading && (\n      <div class=\"searchbox-button-wrapper ml-2 flex items-center justify-center\">\n        <span\n          part=\"loading\"\n          class=\"loading mr-2 grid h-5 w-5 animate-spin place-items-center rounded-full bg-linear-to-r\"\n        ></span>\n      </div>\n    )}\n    {!loading && value && (\n      <TextAreaClearButton\n        inputRef={textAreaRef}\n        bindings={bindings}\n        onClick={() => {\n          onClear();\n          resetReplicaText(textAreaRef);\n        }}\n      />\n    )}\n  </div>\n);\n","export function promiseTimeout<T>(prom: T | Promise<T>, ms: number) {\n  let id: NodeJS.Timeout;\n  const timeout = new Promise((_, reject) => {\n    id = setTimeout(() => {\n      reject(new Error('Promise timed out.'));\n    }, ms);\n  });\n  return Promise.race([prom, timeout]).then(() => {\n    clearTimeout(id);\n  });\n}\n","import {isNullOrUndefined} from '@coveo/bueno';\nimport {forceUpdate} from '@stencil/core';\nimport DOMPurify from 'dompurify';\nimport {debounce} from '../../../utils/debounce-utils';\nimport {promiseTimeout} from '../../../utils/promise-utils';\nimport {\n  SearchBoxSuggestionElement,\n  SearchBoxSuggestionsBindings,\n  SearchBoxSuggestionsEvent,\n  elementHasNoQuery,\n  elementHasQuery,\n} from './suggestions-common';\n\n/**\n * List of suggestions that will be displayed along other lists (e.g recent queries) when the search box's input is selected.\n */\nexport interface SearchBoxSuggestions {\n  /**\n   * The search box will sort the position of suggestions using this value, the lowest value being first.\n   * By default, the DOM position will be used.\n   */\n  position: number;\n  /**\n   * Whether the suggestions should be listed in the right or left panel. By default, the suggestions are listed in the right panel.\n   */\n  panel?: 'left' | 'right';\n  /**\n   * Method that returns the list of elements which will be rendered in the list of suggestions.\n   */\n  renderItems(): SearchBoxSuggestionElement[];\n  /**\n   * Hook called when the user changes the search box's input value. This can lead to all the query suggestions being updated.\n   */\n  onInput?(): Promise<unknown> | void;\n  /**\n   * Hook called when the current suggested query changes as the user navigates the list of suggestions.\n   * This is used for instant results, which are rendered based on the current suggested query.\n   * @param q The new current suggested query.\n   */\n  onSuggestedQueryChange?(q: string): Promise<unknown> | void;\n}\n\ninterface SearchBoxProps {\n  getSearchBoxValue: () => string;\n  updateQuery: (suggestedQuery: string) => void;\n  getSuggestionTimeout: () => number;\n  getNumberOfSuggestionsToDisplay: () => number;\n  getSuggestionDelay: () => number;\n  getLogger: () => Pick<typeof console, 'warn'>;\n  getHost: () => HTMLElement;\n}\n\nexport class SuggestionManager<SearchBoxController> {\n  public suggestions: SearchBoxSuggestions[] = [];\n  public leftSuggestionElements: SearchBoxSuggestionElement[] = [];\n  public rightSuggestionElements: SearchBoxSuggestionElement[] = [];\n  public leftPanel: HTMLElement | undefined = undefined;\n  public rightPanel: HTMLElement | undefined = undefined;\n  public triggerSuggestions: () => Promise<void>;\n  public activeDescendant = '';\n  public suggestedQuery = '';\n  public keyboardActiveDescendant = '';\n\n  private queryDataAttribute = 'data-query';\n  private suggestionEvents: SearchBoxSuggestionsEvent<SearchBoxController>[] =\n    [];\n\n  private previousActiveDescendantElement: HTMLElement | null = null;\n  private leftSuggestions: SearchBoxSuggestions[] = [];\n  private rightSuggestions: SearchBoxSuggestions[] = [];\n\n  constructor(private ownerSearchBoxProps: SearchBoxProps) {\n    this.triggerSuggestions = debounce(\n      () => this.executeQuerySuggestion(),\n      this.ownerSearchBoxProps.getSuggestionDelay()\n    );\n  }\n\n  public get partialSuggestionBindings(): Pick<\n    SearchBoxSuggestionsBindings<SearchBoxController>,\n    | 'suggestedQuery'\n    | 'clearSuggestions'\n    | 'triggerSuggestions'\n    | 'getSuggestions'\n    | 'getSuggestionElements'\n  > {\n    return {\n      suggestedQuery: () => this.suggestedQuery,\n      clearSuggestions: () => this.clearSuggestions(),\n      triggerSuggestions: () => this.triggerSuggestions(),\n      getSuggestions: () => this.suggestions,\n      getSuggestionElements: () => this.allSuggestionElements,\n    };\n  }\n\n  public get activeDescendantElement(): HTMLElement | null {\n    if (!this.hasActiveDescendant) {\n      return null;\n    }\n\n    return (\n      this.leftPanel?.querySelector(`#${this.activeDescendant}`) ||\n      this.rightPanel?.querySelector(`#${this.activeDescendant}`) ||\n      null\n    );\n  }\n\n  public onSubmit() {\n    this.clickOnActiveElement();\n    this.clearSuggestions();\n  }\n\n  public updateActiveDescendant(id = '') {\n    this.activeDescendant = id;\n    forceUpdate(this.ownerSearchBoxProps.getHost());\n  }\n\n  public updateKeyboardActiveDescendant(id = '') {\n    this.keyboardActiveDescendant = id;\n  }\n\n  public clickOnActiveElement() {\n    this.activeDescendantElement?.click();\n    this.updateActiveDescendant();\n  }\n\n  public isRightPanelInFocus() {\n    if (\n      isNullOrUndefined(this.panelInFocus) ||\n      isNullOrUndefined(this.rightPanel)\n    ) {\n      return false;\n    }\n\n    return this.panelInFocus === this.rightPanel;\n  }\n\n  public initializeSuggestions(\n    bindings: SearchBoxSuggestionsBindings<SearchBoxController>\n  ) {\n    this.suggestions = this.suggestionEvents.map((event) => event(bindings));\n  }\n\n  public registerSuggestionsFromEvent(\n    event: CustomEvent<SearchBoxSuggestionsEvent<SearchBoxController>>,\n    bindings: SearchBoxSuggestionsBindings<SearchBoxController>\n  ) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.suggestionEvents.push(event.detail);\n    this.suggestions.push(event.detail(bindings));\n  }\n\n  public registerSuggestions(suggestions: SearchBoxSuggestions) {\n    this.suggestions.push(suggestions);\n  }\n\n  public get isDoubleList() {\n    return Boolean(\n      this.leftSuggestionElements.length && this.rightSuggestionElements.length\n    );\n  }\n\n  public focusPanel(side: 'left' | 'right') {\n    const panel = side === 'left' ? this.leftPanel : this.rightPanel;\n\n    if (this.panelInFocus === panel) {\n      return;\n    }\n    if (panel && panel.firstElementChild) {\n      const panelHasActiveDescendant =\n        this.previousActiveDescendantElement &&\n        panel.contains(this.previousActiveDescendantElement);\n      const newValue = panelHasActiveDescendant\n        ? this.previousActiveDescendantElement!\n        : (panel.firstElementChild as HTMLElement);\n      this.updateDescendants(newValue.id);\n    }\n  }\n\n  public clearSuggestions() {\n    this.clearSuggestionElements();\n    this.updateActiveDescendant();\n  }\n\n  public focusNextValue() {\n    if (!this.hasSuggestions || !this.nextOrFirstValue) {\n      return;\n    }\n\n    this.focusValue(this.nextOrFirstValue as HTMLElement);\n  }\n\n  public focusValue(value: HTMLElement) {\n    this.updateKeyboardActiveDescendant(value.id);\n    this.updateActiveDescendant(value.id);\n    this.scrollActiveDescendantIntoView();\n    this.updateQueryFromSuggestion();\n  }\n\n  public onSuggestionMouseOver(\n    item: SearchBoxSuggestionElement,\n    side: 'left' | 'right',\n    id: string\n  ) {\n    const thisPanel = side === 'left' ? this.leftPanel : this.rightPanel;\n    // When hovering, always reset the keyboard active descendant\n    this.updateKeyboardActiveDescendant();\n    if (this.panelInFocus === thisPanel) {\n      this.updateActiveDescendant(id);\n    } else {\n      this.updateDescendants(id);\n    }\n    if (item.query) {\n      this.updateSuggestedQuery(item.query);\n    }\n  }\n\n  public onSuggestionClick(item: SearchBoxSuggestionElement, e: Event) {\n    if (item.query) {\n      this.clearSuggestions();\n      this.updateOwnerSearchboxQuery(item.query);\n    }\n    item.onSelect && item.onSelect(e);\n  }\n\n  public get hasSuggestions() {\n    return !!this.allSuggestionElements.length;\n  }\n\n  public get allSuggestionElements() {\n    return [...this.leftSuggestionElements, ...this.rightSuggestionElements];\n  }\n\n  public focusPreviousValue() {\n    if (this.firstValue === this.activeDescendantElement) {\n      this.updateKeyboardActiveDescendant();\n      this.updateActiveDescendant();\n      return;\n    }\n\n    if (!this.hasSuggestions || !this.previousOrLastValue) {\n      return;\n    }\n\n    this.focusValue(this.previousOrLastValue as HTMLElement);\n  }\n\n  public get hasActiveDescendant() {\n    return this.activeDescendant !== '';\n  }\n\n  private async executeQuerySuggestion() {\n    this.updateActiveDescendant();\n    const settled = await Promise.allSettled(\n      this.suggestions.map((suggestion) =>\n        promiseTimeout(\n          suggestion.onInput ? suggestion.onInput() : Promise.resolve(),\n          this.ownerSearchBoxProps.getSuggestionTimeout()\n        )\n      )\n    );\n\n    const fulfilledSuggestions: SearchBoxSuggestions[] = [];\n\n    settled.forEach((prom, j) => {\n      if (prom.status === 'fulfilled') {\n        fulfilledSuggestions.push(this.suggestions[j]);\n      } else {\n        this.ownerSearchBoxProps\n          .getLogger()\n          .warn(\n            'Some query suggestions are not being shown because the promise timed out.'\n          );\n      }\n    });\n\n    const splitSuggestions = (side: 'left' | 'right', isDefault = false) =>\n      fulfilledSuggestions\n        .filter(\n          (suggestion) =>\n            suggestion.panel === side || (!suggestion.panel && isDefault)\n        )\n        .sort(this.sortSuggestions);\n\n    this.leftSuggestions = splitSuggestions('left', true);\n    this.leftSuggestionElements = this.getAndFilterLeftSuggestionElements();\n\n    this.rightSuggestions = splitSuggestions('right');\n    this.rightSuggestionElements = this.getSuggestionElements(\n      this.rightSuggestions\n    );\n\n    const defaultSuggestedQuery =\n      this.allSuggestionElements.find(elementHasQuery)?.query || '';\n\n    this.updateSuggestedQuery(defaultSuggestedQuery);\n  }\n\n  private get lastValue() {\n    return this.panelInFocus?.lastElementChild;\n  }\n\n  private get previousOrLastValue() {\n    if (!this.hasActiveDescendant) {\n      return this.lastValue?.firstChild;\n    }\n\n    const parentOfActiveDescendant =\n      this.activeDescendantElement?.parentElement;\n    return (\n      parentOfActiveDescendant?.previousElementSibling?.firstChild ||\n      this.firstValue?.firstChild\n    );\n  }\n\n  private sortSuggestions(a: SearchBoxSuggestions, b: SearchBoxSuggestions) {\n    return a.position - b.position;\n  }\n\n  private get nextOrFirstValue() {\n    if (!this.hasActiveDescendant) {\n      return this.firstValue?.firstChild;\n    }\n\n    const parentOfActiveDescendant =\n      this.activeDescendantElement?.parentElement;\n    return (\n      parentOfActiveDescendant?.nextElementSibling?.firstChild ||\n      this.firstValue?.firstChild\n    );\n  }\n\n  private get firstValue() {\n    return this.panelInFocus?.firstElementChild;\n  }\n\n  private get panelInFocus() {\n    if (this.leftPanel?.contains(this.activeDescendantElement)) {\n      return this.leftPanel;\n    }\n    if (this.rightPanel?.contains(this.activeDescendantElement)) {\n      return this.rightPanel;\n    }\n    return this.leftPanel || this.rightPanel;\n  }\n\n  private scrollActiveDescendantIntoView() {\n    this.activeDescendantElement?.scrollIntoView({\n      block: 'nearest',\n    });\n  }\n\n  private updateQueryFromSuggestion() {\n    const suggestedQuery = this.activeDescendantElement?.getAttribute(\n      this.queryDataAttribute\n    );\n    this.updateOwnerSearchboxQuery(suggestedQuery || '');\n  }\n\n  private updateOwnerSearchboxQuery(query: string) {\n    if (query && this.ownerSearchBoxProps.getSearchBoxValue() !== query) {\n      this.ownerSearchBoxProps.updateQuery(query);\n      this.updateSuggestedQuery(query);\n    }\n  }\n\n  private async updateSuggestedQuery(suggestedQuery: string) {\n    await Promise.allSettled(\n      this.suggestions.map((suggestion) =>\n        promiseTimeout(\n          suggestion.onSuggestedQueryChange\n            ? suggestion.onSuggestedQueryChange(suggestedQuery)\n            : Promise.resolve(),\n          this.ownerSearchBoxProps.getSuggestionTimeout()\n        )\n      )\n    );\n    this.suggestedQuery = suggestedQuery;\n    this.updateSuggestionElements(suggestedQuery);\n    forceUpdate(this.ownerSearchBoxProps.getHost());\n  }\n\n  private updateSuggestionElements(query: string) {\n    if (!this.isPanelInFocus(this.leftPanel, query)) {\n      this.leftSuggestionElements = this.getAndFilterLeftSuggestionElements();\n    }\n\n    if (!this.isPanelInFocus(this.rightPanel, query)) {\n      this.rightSuggestionElements = this.getSuggestionElements(\n        this.rightSuggestions\n      );\n    }\n  }\n\n  public forceUpdate() {\n    this.updateSuggestionElements(this.suggestedQuery);\n    forceUpdate(this.ownerSearchBoxProps.getHost());\n  }\n\n  private isPanelInFocus(\n    panel: HTMLElement | undefined,\n    query: string\n  ): boolean {\n    if (!this.activeDescendantElement) {\n      return false;\n    }\n\n    if (query) {\n      const escaped = DOMPurify.sanitize(query);\n      return !!panel?.querySelector(\n        `[${this.queryDataAttribute}=\"${CSS.escape(escaped)}\"]`\n      );\n    }\n\n    return this.activeDescendantElement?.closest('ul') === panel;\n  }\n\n  private getAndFilterLeftSuggestionElements() {\n    const suggestionElements = this.getSuggestionElements(this.leftSuggestions);\n    const filterOnDuplicate = new Set();\n\n    const out = suggestionElements.filter((suggestionElement) => {\n      if (isNullOrUndefined(suggestionElement.query)) {\n        return true;\n      }\n      if (filterOnDuplicate.has(suggestionElement.query)) {\n        return false;\n      } else {\n        filterOnDuplicate.add(suggestionElement.query);\n        return true;\n      }\n    });\n\n    return out;\n  }\n\n  private getSuggestionElements(suggestions: SearchBoxSuggestions[]) {\n    const elements = suggestions\n      .map((suggestion) => suggestion.renderItems())\n      .flat();\n\n    const max =\n      this.ownerSearchBoxProps.getNumberOfSuggestionsToDisplay() +\n      elements.filter(elementHasNoQuery).length;\n\n    return elements.slice(0, max);\n  }\n\n  private updateDescendants(activeDescendant = '') {\n    const newPrevDescendantElement = this.activeDescendantElement;\n    this.previousActiveDescendantElement = newPrevDescendantElement;\n    this.updateActiveDescendant(activeDescendant);\n  }\n\n  private clearSuggestionElements() {\n    this.leftSuggestionElements = [];\n    this.rightSuggestionElements = [];\n  }\n}\n"],"version":3}