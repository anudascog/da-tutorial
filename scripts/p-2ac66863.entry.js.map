{"version":3,"names":["atomicRatingRangeFacetCss","AtomicRatingRangeFacetStyle0","AtomicRatingRangeFacet","this","label","tabsIncluded","tabsExcluded","numberOfIntervals","maxValueInIndex","minValueInIndex","icon","Star","isCollapsed","headingLevel","filterFacetCount","injectionDepth","dependsOn","focusTarget","headerFocus","FocusTargetController","initialize","length","console","warn","searchStatus","buildSearchStatus","bindings","engine","tabManager","buildTabManager","initializeFacet","initializeDependenciesManager","disconnectedCallback","host","isConnected","dependenciesManager","stopWatching","isHidden","valuesToRender","searchStatusState","hasError","facet","state","enabled","options","facetId","field","numberOfValues","currentValues","generateCurrentValues","sortCriteria","generateAutomaticRanges","tabs","included","excluded","buildNumericFacet","facetInfo","i18n","t","element","store","registerFacet","format","value","formatFacetValue","content","ratingContent","initializePopover","hasValues","numberOfActiveValues","numberOfSelectedValues","scaleFactor","facetState","values","filter","buildFacetConditionsManager","conditions","parseDependsOn","i","push","buildNumericRange","start","Math","round","end","endInclusive","facetValue","count","h","class","Rating","numberOfTotalIcons","numberOfActiveIcons","renderLabelText","renderHeader","FacetHeader","onClearFilters","focusAfterSearch","deselectAll","onToggleCollapse","headerRef","el","setTarget","part","renderValue","onClick","displayValue","isSelected","FacetValueLink","numberOfResults","renderValuesContainer","children","FacetValuesGroup","renderValues","map","toggleSingleSelect","render","Hidden","firstSearchExecuted","FacetPlaceholder","FacetContainer","__decorate","InitializeBindings","BindStateToController","ArrayProp","MapProp"],"sources":["src/components/search/facets/atomic-rating-range-facet/atomic-rating-range-facet.pcss?tag=atomic-rating-range-facet&encapsulation=shadow","src/components/search/facets/atomic-rating-range-facet/atomic-rating-range-facet.tsx"],"sourcesContent":["@import '../../../common/facets/facet-common.pcss';\n@import '../../../common/atomic-rating/atomic-rating.pcss';\n","import {\n  NumericFacet,\n  buildNumericFacet,\n  NumericFacetState,\n  NumericFacetOptions,\n  SearchStatus,\n  SearchStatusState,\n  buildSearchStatus,\n  NumericFacetValue,\n  NumericRangeRequest,\n  buildNumericRange,\n  buildFacetConditionsManager,\n  FacetConditionsManager,\n  FacetValueRequest,\n  CategoryFacetValueRequest,\n  buildTabManager,\n  TabManager,\n  TabManagerState,\n} from '@coveo/headless';\nimport {Component, h, State, Prop, VNode, Element} from '@stencil/core';\nimport Star from '../../../../images/star.svg';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {ArrayProp, MapProp} from '../../../../utils/props-utils';\nimport {FocusTargetController} from '../../../../utils/stencil-accessibility-utils';\nimport {Rating} from '../../../common/atomic-rating/atomic-rating';\nimport {parseDependsOn} from '../../../common/facets/depends-on';\nimport {FacetInfo} from '../../../common/facets/facet-common-store';\nimport {FacetContainer} from '../../../common/facets/facet-container/stencil-facet-container';\nimport {FacetHeader} from '../../../common/facets/facet-header/stencil-facet-header';\nimport {FacetPlaceholder} from '../../../common/facets/facet-placeholder/facet-placeholder';\nimport {FacetValueLink} from '../../../common/facets/facet-value-link/stencil-facet-value-link';\nimport {FacetValuesGroup} from '../../../common/facets/facet-values-group/stencil-facet-values-group';\nimport {initializePopover} from '../../../common/facets/popover/popover-type';\nimport {Hidden} from '../../../common/stencil-hidden';\nimport {Bindings} from '../../atomic-search-interface/atomic-search-interface';\n\n/**\n * A facet is a list of values for a certain field occurring in the results, ordered using a configurable criteria (e.g., number of occurrences).\n * An `atomic-rating-range-facet` displays a facet of the results for the current query as ratings.\n * It only supports numeric fields.\n *\n * @part facet - The wrapper for the entire facet.\n * @part placeholder - The placeholder shown before the first search is executed.\n *\n * @part label-button - The button that displays the label and toggles to expand or collapse the facet.\n * @part label-button-icon - The label button icon.\n * @part clear-button - The button that resets the actively selected facet values.\n * @part clear-button-icon - The clear button icon.\n *\n * @part values - The facet values container.\n * @part value-label - The facet value label, common for all displays.\n * @part value-count - The facet value count, common for all displays.\n * @part value-rating - The facet value rating, common for all displays.\n * @part value-rating-icon - The individual star icons used in the rating display.\n *\n * @part value-link - The facet value when display is 'link'.\n * @part value-link-selected - The selected facet value when display is 'link'.\n * @part value-box - The facet value when display is 'box'.\n * @part value-box-selected - The selected facet value when display is 'box'.\n */\n@Component({\n  tag: 'atomic-rating-range-facet',\n  styleUrl: 'atomic-rating-range-facet.pcss',\n  shadow: true,\n})\nexport class AtomicRatingRangeFacet implements InitializableComponent {\n  @InitializeBindings() public bindings!: Bindings;\n  public facet!: NumericFacet;\n  private dependenciesManager?: FacetConditionsManager;\n  public searchStatus!: SearchStatus;\n  public tabManager!: TabManager;\n  @Element() private host!: HTMLElement;\n\n  @BindStateToController('facet')\n  @State()\n  public facetState!: NumericFacetState;\n  @BindStateToController('searchStatus')\n  @State()\n  public searchStatusState!: SearchStatusState;\n  @BindStateToController('tabManager')\n  @State()\n  public tabManagerState!: TabManagerState;\n  @State() public error!: Error;\n\n  /**\n   * Specifies a unique identifier for the facet.\n   */\n  @Prop({mutable: true, reflect: true}) public facetId?: string;\n  /**\n   * The non-localized label for the facet.\n   * Used in the `atomic-breadbox` component through the bindings store.\n   */\n  @Prop({reflect: true}) public label = 'no-label';\n  /**\n   * The field whose values you want to display in the facet.\n   */\n  @Prop({reflect: true}) public field!: string;\n  /**\n   * The tabs on which the facet can be displayed. This property should not be used at the same time as `tabs-excluded`.\n   *\n   * Set this property as a stringified JSON array, e.g.,\n   * ```html\n   *  <atomic-timeframe-facet tabs-included='[\"tabIDA\", \"tabIDB\"]'></atomic-timeframe-facet>\n   * ```\n   * If you don't set this property, the facet can be displayed on any tab. Otherwise, the facet can only be displayed on the specified tabs.\n   */\n  @ArrayProp()\n  @Prop({reflect: true, mutable: true})\n  public tabsIncluded: string[] | string = '[]';\n\n  /**\n   * The tabs on which this facet must not be displayed. This property should not be used at the same time as `tabs-included`.\n   *\n   * Set this property as a stringified JSON array, e.g.,\n   * ```html\n   *  <atomic-timeframe-facet tabs-excluded='[\"tabIDA\", \"tabIDB\"]'></atomic-timeframe-facet>\n   * ```\n   * If you don't set this property, the facet can be displayed on any tab. Otherwise, the facet won't be displayed on any of the specified tabs.\n   */\n  @ArrayProp()\n  @Prop({reflect: true, mutable: true})\n  public tabsExcluded: string[] | string = '[]';\n\n  /**\n   * The number of options to display in the facet. If `maxValueInIndex` isn't specified, it will be assumed that this is also the maximum number of rating icons.\n   */\n  @Prop({reflect: true}) public numberOfIntervals = 5;\n  /**\n   * The maximum value in the field's index and the number of rating icons to display in the facet. This property will default to the same value as `numberOfIntervals`, if not assigned a value.\n   */\n  @Prop({reflect: true}) public maxValueInIndex = this.numberOfIntervals;\n  /**\n   * The minimum value of the field.\n   */\n  @Prop({reflect: true}) public minValueInIndex = 1;\n  /**\n   * The SVG icon to use to display the rating.\n   *\n   * - Use a value that starts with `http://`, `https://`, `./`, or `../`, to fetch and display an icon from a given location.\n   * - Use a value that starts with `assets://`, to display an icon from the Atomic package.\n   * - Use a stringified SVG to display it directly.\n   *\n   * When using a custom icon, at least part of your icon should have the color set to `fill=\"currentColor\"`.\n   * This part of the SVG will take on the colors set in the following [variables](https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties):\n   *\n   * - `--atomic-rating-icon-active-color`\n   * - `--atomic-rating-icon-inactive-color`\n   */\n  @Prop({reflect: true}) public icon = Star;\n  /**\n   * Specifies whether the facet is collapsed. When the facet is the child of an `atomic-facet-manager` component, the facet manager controls this property.\n   */\n  @Prop({reflect: true, mutable: true}) public isCollapsed = false;\n  /**\n   * The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the heading over the facet, from 1 to 6.\n   */\n  @Prop({reflect: true}) public headingLevel = 0;\n  /**\n   * Whether to exclude the parents of folded results when estimating the result count for each facet value.\n   *\n   *\n   * Note: Resulting count is only an estimation, in some cases this value could be incorrect.\n   */\n  @Prop({reflect: true}) public filterFacetCount = true;\n  /**\n   * The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\n   * Note: A high injectionDepth may negatively impact the facet request performance.\n   * Minimum: `0`\n   * Default: `1000`\n   */\n  @Prop({reflect: true}) public injectionDepth = 1000;\n\n  /**\n   * The required facets and values for this facet to be displayed.\n   * Examples:\n   * ```html\n   * <atomic-facet facet-id=\"abc\" field=\"objecttype\" ...></atomic-facet>\n   *\n   * <!-- To show the facet when any value is selected in the facet with id \"abc\": -->\n   * <atomic-rating-range-facet\n   *   depends-on-abc\n   *   ...\n   * ></atomic-rating-range-facet>\n   *\n   * <!-- To show the facet when value \"doc\" is selected in the facet with id \"abc\": -->\n   * <atomic-rating-range-facet\n   *   depends-on-abc=\"doc\"\n   *   ...\n   * ></atomic-rating-range-facet>\n   * ```\n   */\n  @MapProp() @Prop() public dependsOn: Record<string, string> = {};\n\n  private headerFocus?: FocusTargetController;\n\n  private get focusTarget() {\n    if (!this.headerFocus) {\n      this.headerFocus = new FocusTargetController(this);\n    }\n    return this.headerFocus;\n  }\n\n  public initialize() {\n    if (\n      [...this.tabsIncluded].length > 0 &&\n      [...this.tabsExcluded].length > 0\n    ) {\n      console.warn(\n        'Values for both \"tabs-included\" and \"tabs-excluded\" have been provided. This is could lead to unexpected behaviors.'\n      );\n    }\n    this.searchStatus = buildSearchStatus(this.bindings.engine);\n    this.tabManager = buildTabManager(this.bindings.engine);\n    this.initializeFacet();\n    this.initializeDependenciesManager();\n  }\n  public disconnectedCallback() {\n    if (this.host.isConnected) {\n      return;\n    }\n    this.dependenciesManager?.stopWatching();\n  }\n\n  private get isHidden() {\n    return (\n      !this.valuesToRender.length ||\n      this.searchStatusState.hasError ||\n      !this.facet.state.enabled\n    );\n  }\n\n  private initializeFacet() {\n    const options: NumericFacetOptions = {\n      facetId: this.facetId,\n      field: this.field,\n      numberOfValues: this.numberOfIntervals,\n      currentValues: this.generateCurrentValues(),\n      sortCriteria: 'descending',\n      generateAutomaticRanges: false,\n      filterFacetCount: this.filterFacetCount,\n      injectionDepth: this.injectionDepth,\n      tabs: {\n        included: [...this.tabsIncluded],\n        excluded: [...this.tabsExcluded],\n      },\n    };\n    this.facet = buildNumericFacet(this.bindings.engine, {options});\n    this.facetId = this.facet.state.facetId;\n    const facetInfo: FacetInfo = {\n      label: () => this.bindings.i18n.t(this.label),\n      facetId: this.facetId!,\n      element: this.host,\n      isHidden: () => this.isHidden,\n    };\n    this.bindings.store.registerFacet('numericFacets', {\n      ...facetInfo,\n      format: (value) => this.formatFacetValue(value),\n      content: (value) => this.ratingContent(value),\n    });\n    initializePopover(this.host, {\n      ...facetInfo,\n      hasValues: () => !!this.valuesToRender.length,\n      numberOfActiveValues: () => this.numberOfSelectedValues,\n    });\n  }\n\n  private get scaleFactor() {\n    return this.maxValueInIndex / this.numberOfIntervals;\n  }\n\n  private get numberOfSelectedValues() {\n    return this.facetState.values.filter(({state}) => state === 'selected')\n      .length;\n  }\n\n  private initializeDependenciesManager() {\n    this.dependenciesManager = buildFacetConditionsManager(\n      this.bindings.engine,\n      {\n        facetId: this.facetId!,\n        conditions: parseDependsOn<\n          FacetValueRequest | CategoryFacetValueRequest\n        >(this.dependsOn),\n      }\n    );\n  }\n\n  private generateCurrentValues() {\n    const currentValues: NumericRangeRequest[] = [];\n    for (let i = this.minValueInIndex; i <= this.numberOfIntervals; i++) {\n      currentValues.push(\n        buildNumericRange({\n          start: Math.round(i * this.scaleFactor * 100) / 100,\n          end: Math.round(this.maxValueInIndex * 100) / 100,\n          endInclusive: true,\n        })\n      );\n    }\n    return currentValues;\n  }\n\n  private formatFacetValue(facetValue: NumericFacetValue) {\n    if (facetValue.start === this.maxValueInIndex) {\n      return this.bindings.i18n.t('stars-only', {\n        count: facetValue.start,\n      });\n    }\n    return this.bindings.i18n.t('stars-range', {\n      value: facetValue.start,\n      count: this.maxValueInIndex,\n    });\n  }\n\n  private ratingContent(facetValue: NumericFacetValue) {\n    return (\n      <div class=\"flex items-center\">\n        <Rating\n          i18n={this.bindings.i18n}\n          numberOfTotalIcons={this.maxValueInIndex}\n          numberOfActiveIcons={facetValue.start}\n          icon={this.icon}\n        ></Rating>\n        {this.renderLabelText(facetValue)}\n      </div>\n    );\n  }\n\n  private renderHeader() {\n    return (\n      <FacetHeader\n        i18n={this.bindings.i18n}\n        label={this.label}\n        onClearFilters={() => {\n          this.focusTarget.focusAfterSearch();\n          this.facet.deselectAll();\n        }}\n        numberOfActiveValues={this.numberOfSelectedValues}\n        isCollapsed={this.isCollapsed}\n        headingLevel={this.headingLevel}\n        onToggleCollapse={() => (this.isCollapsed = !this.isCollapsed)}\n        headerRef={(el) => this.focusTarget.setTarget(el)}\n      ></FacetHeader>\n    );\n  }\n\n  private renderLabelText(facetValue: NumericFacetValue) {\n    return (\n      <span\n        part=\"value-label\"\n        class={`group-focus:text-primary group-hover:text-primary ml-1 flex items-center truncate ${\n          facetValue.state === 'selected' ? 'font-bold' : ''\n        }`}\n      >\n        {facetValue.start === this.maxValueInIndex ? (\n          <span>{this.bindings.i18n.t('only')}</span>\n        ) : (\n          this.bindings.i18n.t('and-up')\n        )}\n      </span>\n    );\n  }\n\n  private renderValue(facetValue: NumericFacetValue, onClick: () => void) {\n    const displayValue = this.formatFacetValue(facetValue);\n    const isSelected = facetValue.state === 'selected';\n    return (\n      <FacetValueLink\n        displayValue={displayValue}\n        numberOfResults={facetValue.numberOfResults}\n        isSelected={isSelected}\n        i18n={this.bindings.i18n}\n        onClick={onClick}\n      >\n        {this.ratingContent(facetValue)}\n      </FacetValueLink>\n    );\n  }\n\n  private renderValuesContainer(children: VNode[]) {\n    return (\n      <FacetValuesGroup i18n={this.bindings.i18n} label={this.label}>\n        <ul class=\"mt-3\" part=\"values\">\n          {children}\n        </ul>\n      </FacetValuesGroup>\n    );\n  }\n\n  private renderValues() {\n    return this.renderValuesContainer(\n      this.valuesToRender.map((value) =>\n        this.renderValue(value, () => this.facet.toggleSingleSelect(value))\n      )\n    );\n  }\n\n  private get valuesToRender() {\n    return this.facet.state.values.filter(\n      (value) => value.numberOfResults || value.state !== 'idle'\n    );\n  }\n\n  public render() {\n    if (this.searchStatusState.hasError || !this.facet.state.enabled) {\n      return <Hidden></Hidden>;\n    }\n\n    if (!this.searchStatusState.firstSearchExecuted) {\n      return (\n        <FacetPlaceholder\n          numberOfValues={this.numberOfIntervals}\n          isCollapsed={this.isCollapsed}\n        ></FacetPlaceholder>\n      );\n    }\n\n    if (!this.valuesToRender.length) {\n      return <Hidden></Hidden>;\n    }\n\n    return (\n      <FacetContainer>\n        {this.renderHeader()}\n        {!this.isCollapsed && this.renderValues()}\n      </FacetContainer>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}