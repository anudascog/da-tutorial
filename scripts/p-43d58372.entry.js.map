{"version":3,"names":["atomicCommerceBreadboxCss","AtomicCommerceBreadboxStyle0","AtomicCommerceBreadbox","this","lastRemovedBreadcrumbIndex","numberOfBreadcrumbs","numberOfCollapsedBreadcrumbs","isCollapsed","pathLimit","valueForFacetType","type","field","value","formatHumanReadable","facetValue","logger","bindings","engine","i18n","manualRanges","formatter","getNumberFormatter","t","start","parseDate","format","end","path","map","pathValue","getFieldValueCaption","warn","initialize","validateProps","interfaceElement","searchOrListing","buildProductListing","buildSearch","context","buildContext","breadcrumbManager","window","ResizeObserver","resizeObserver","adaptBreadcrumbs","observe","host","parentElement","Schema","NumberValue","default","min","required","validate","disconnectedCallback","disconnect","focusTargets","breadcrumbRemovedFocus","FocusTargetController","breadcrumbShowLessFocus","breadcrumbShowMoreFocus","breadcrumbs","Array","from","shadowRoot","querySelectorAll","hide","element","style","display","show","showAllBreadcrumbs","forEach","breadcrumb","hideOverflowingBreadcrumbs","hiddenBreadcrumbs","i","length","isOverflowing","updateShowMoreValue","updateShowLessDisplay","showLess","offsetTop","listElement","querySelector","scrollWidth","clientWidth","showMore","textContent","toLocaleString","language","setAttribute","defaultCurrencyFormatter","contextState","currency","defaultNumberFormatter","buildBreadcrumb","values","facetId","label","facetDisplayName","deselect","formattedValue","renderBreadcrumbs","index","isLastBreadcrumb","h","BreadcrumbButton","setRef","ref","setTarget","firstExpandedBreadcrumbIndex","onSelectBreadcrumb","store","state","resultList","focusOnFirstResultAfterNextSearch","focusAfterSearch","BreadcrumbContent","render","breadcrumbManagerState","facetBreadcrumbs","flat","Hidden","BreadcrumbContainer","BreadcrumbShowMore","el","onShowMore","focusOnNextTarget","BreadcrumbShowLess","onShowLess","BreadcrumbClearAll","onClick","async","deselectAll","componentDidRender","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/commerce/atomic-commerce-breadbox/atomic-commerce-breadbox.pcss?tag=atomic-commerce-breadbox&encapsulation=shadow","src/components/commerce/atomic-commerce-breadbox/atomic-commerce-breadbox.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n@import '../../common/atomic-rating/atomic-rating.pcss';\n\n.max-w-snippet {\n  max-width: 30ch;\n}\n\n[part='breadcrumb-label'].excluded,\n[part='breadcrumb-value'].excluded {\n  text-decoration: line-through;\n  @apply text-error;\n}\n\n/* When excluded, strikethrough line must be continuous, so we must prepend empty character instead of margin */\n[part='breadcrumb-value']::before {\n  content: '\\00a0';\n}\n","import {NumberValue, Schema} from '@coveo/bueno';\nimport {\n  BreadcrumbManagerState,\n  BreadcrumbManager,\n  ProductListing,\n  Search,\n  buildProductListing,\n  buildSearch,\n  NumericFacetValue,\n  RegularFacetValue,\n  DateFacetValue,\n  Breadcrumb,\n  CategoryFacetValue,\n  BreadcrumbValue,\n  Context,\n  ContextState,\n  buildContext,\n  LocationFacetValue,\n} from '@coveo/headless/commerce';\nimport {Component, h, State, Element, Prop} from '@stencil/core';\nimport {parseDate} from '../../../utils/date-utils';\nimport {getFieldValueCaption} from '../../../utils/field-utils';\nimport {\n  InitializableComponent,\n  BindStateToController,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {FocusTargetController} from '../../../utils/stencil-accessibility-utils';\nimport {Breadcrumb as BreadboxBreadcrumb} from '../../common/breadbox/breadcrumb-types';\nimport {BreadcrumbButton} from '../../common/breadbox/stencil-breadcrumb-button';\nimport {BreadcrumbClearAll} from '../../common/breadbox/stencil-breadcrumb-clear-all';\nimport {BreadcrumbContainer} from '../../common/breadbox/stencil-breadcrumb-container';\nimport {BreadcrumbContent} from '../../common/breadbox/stencil-breadcrumb-content';\nimport {BreadcrumbShowLess} from '../../common/breadbox/stencil-breadcrumb-show-less';\nimport {BreadcrumbShowMore} from '../../common/breadbox/stencil-breadcrumb-show-more';\nimport {formatHumanReadable} from '../../common/facets/numeric-facet/formatter';\nimport {\n  defaultCurrencyFormatter,\n  defaultNumberFormatter,\n} from '../../common/formats/format-common';\nimport {Hidden} from '../../common/stencil-hidden';\nimport {CommerceBindings} from '../atomic-commerce-interface/atomic-commerce-interface';\n\ntype AnyFacetValue =\n  | RegularFacetValue\n  | LocationFacetValue\n  | NumericFacetValue\n  | DateFacetValue\n  | CategoryFacetValue;\n\n/**\n * The `atomic-commerce-breadbox` component creates breadcrumbs that display a summary of the currently active facet values.\n *\n * @part container - The container of the whole component, list & label.\n * @part breadcrumb-list-container - The container of the list of breadcrumb buttons.\n * @part breadcrumb-list - The list of breadcrumb buttons.\n * @part breadcrumb-button - A single breadcrumb button.\n * @part breadcrumb-label - The breadcrumb label, associated with the facet.\n * @part breadcrumb-value - The breadcrumb formatted value.\n * @part breadcrumb-clear - The button to clear individual filters.\n * @part show-more - The button to display all breadcrumbs.\n * @part show-less - The button to display less breadcrumbs.\n * @part label - The \"Filters\" label.\n * @part clear - The button to clear all filters.\n *\n * @alpha\n */\n@Component({\n  tag: 'atomic-commerce-breadbox',\n  styleUrl: 'atomic-commerce-breadbox.pcss',\n  shadow: true,\n})\nexport class AtomicCommerceBreadbox\n  implements InitializableComponent<CommerceBindings>\n{\n  @InitializeBindings() public bindings!: CommerceBindings;\n\n  private resizeObserver?: ResizeObserver;\n  private showMore!: HTMLButtonElement;\n  private showLess!: HTMLButtonElement;\n  private lastRemovedBreadcrumbIndex = 0;\n  private numberOfBreadcrumbs = 0;\n  private numberOfCollapsedBreadcrumbs = 0;\n  private firstExpandedBreadcrumbIndex?: number;\n  breadcrumbManager!: BreadcrumbManager;\n\n  @Element() private host!: HTMLElement;\n\n  public context!: Context;\n  @BindStateToController('context') contextState!: ContextState;\n\n  public searchOrListing!: Search | ProductListing;\n\n  @BindStateToController('breadcrumbManager')\n  @State()\n  private breadcrumbManagerState!: BreadcrumbManagerState;\n  @State() public error!: Error;\n  @State() private isCollapsed = true;\n\n  private breadcrumbRemovedFocus?: FocusTargetController;\n\n  private breadcrumbShowMoreFocus?: FocusTargetController;\n\n  private breadcrumbShowLessFocus?: FocusTargetController;\n\n  /**\n   * This prop allows you to control the display depth\n   * of the path by specifying the number of parent or ancestor\n   * breadcrumbs links relative to the currently selected value.\n   *\n   * If the path size is equal to or less than the pathLimit, all values in\n   * the path will be displayed without truncation.\n   *\n   * If the path size exceeds the pathLimit, it will truncate the path by\n   * replacing the middle values with ellipses ('...').\n   *\n   * Minimum: `1`\n   * @defaultValue `3`\n   */\n  @Prop() public pathLimit = 3;\n\n  public initialize() {\n    this.validateProps();\n\n    if (this.bindings.interfaceElement.type === 'product-listing') {\n      this.searchOrListing = buildProductListing(this.bindings.engine);\n    } else {\n      this.searchOrListing = buildSearch(this.bindings.engine);\n    }\n\n    this.context = buildContext(this.bindings.engine);\n\n    this.breadcrumbManager = this.searchOrListing.breadcrumbManager();\n\n    if (window.ResizeObserver) {\n      this.resizeObserver = new ResizeObserver(() => this.adaptBreadcrumbs());\n      this.resizeObserver.observe(this.host.parentElement!);\n    }\n  }\n\n  private validateProps() {\n    new Schema({\n      pathLimit: new NumberValue({\n        default: 3,\n        min: 1,\n        required: false,\n      }),\n    }).validate({\n      pathLimit: this.pathLimit,\n    });\n  }\n\n  public disconnectedCallback() {\n    this.resizeObserver?.disconnect();\n  }\n\n  private get focusTargets() {\n    if (!this.breadcrumbRemovedFocus) {\n      this.breadcrumbRemovedFocus = new FocusTargetController(this);\n    }\n    if (!this.breadcrumbShowLessFocus) {\n      this.breadcrumbShowLessFocus = new FocusTargetController(this);\n    }\n    if (!this.breadcrumbShowMoreFocus) {\n      this.breadcrumbShowMoreFocus = new FocusTargetController(this);\n    }\n    return {\n      breadcrumbRemovedFocus: this.breadcrumbRemovedFocus,\n      breadcrumbShowLessFocus: this.breadcrumbShowLessFocus,\n      breadcrumbShowMoreFocus: this.breadcrumbShowMoreFocus,\n    };\n  }\n\n  private get breadcrumbs() {\n    return Array.from(\n      this.host.shadowRoot!.querySelectorAll('li.breadcrumb')\n    ) as HTMLElement[];\n  }\n\n  private hide(element: HTMLElement) {\n    element.style.display = 'none';\n  }\n\n  private show(element: HTMLElement) {\n    element.style.display = '';\n  }\n\n  private showAllBreadcrumbs() {\n    this.breadcrumbs.forEach((breadcrumb) => this.show(breadcrumb));\n  }\n\n  private hideOverflowingBreadcrumbs() {\n    let hiddenBreadcrumbs = 0;\n    for (\n      let i = this.breadcrumbs.length - 1;\n      this.isOverflowing && i >= 0;\n      i--\n    ) {\n      this.hide(this.breadcrumbs[i]);\n      hiddenBreadcrumbs++;\n    }\n    this.updateShowMoreValue(hiddenBreadcrumbs);\n  }\n\n  private updateShowLessDisplay() {\n    this.show(this.showLess);\n    if (this.showLess.offsetTop === 0) {\n      this.hide(this.showLess);\n    }\n  }\n\n  private adaptBreadcrumbs() {\n    if (!this.breadcrumbs.length) {\n      return;\n    }\n    this.showAllBreadcrumbs();\n\n    if (!this.isCollapsed) {\n      this.updateShowLessDisplay();\n      return;\n    }\n\n    this.updateShowMoreValue(this.breadcrumbs.length);\n    this.hideOverflowingBreadcrumbs();\n  }\n\n  private get isOverflowing() {\n    const listElement = this.host.shadowRoot!.querySelector('ul');\n    if (!listElement) {\n      return false;\n    }\n    return listElement.scrollWidth > listElement.clientWidth;\n  }\n\n  private updateShowMoreValue(value: number) {\n    this.numberOfCollapsedBreadcrumbs = value;\n    if (value === 0) {\n      this.hide(this.showMore);\n      return;\n    }\n    this.show(this.showMore);\n    this.showMore.textContent = `+ ${value.toLocaleString(\n      this.bindings.i18n.language\n    )}`;\n    this.showMore.setAttribute(\n      'aria-label',\n      this.bindings.i18n.t('show-n-more-filters', {\n        value,\n      })\n    );\n  }\n\n  private getNumberFormatter(field: string) {\n    if (field === 'ec_price' || field === 'ec_promo_price') {\n      return defaultCurrencyFormatter(this.contextState.currency);\n    }\n    return defaultNumberFormatter;\n  }\n\n  private valueForFacetType = (\n    type: string,\n    field: string,\n    value: BreadcrumbValue<AnyFacetValue>\n  ): string[] => {\n    switch (type) {\n      case 'numericalRange':\n        return [\n          formatHumanReadable({\n            facetValue: value.value as NumericFacetValue,\n            logger: this.bindings.engine.logger,\n            i18n: this.bindings.i18n,\n            field: field,\n            manualRanges: [],\n            formatter: this.getNumberFormatter(field),\n          }),\n        ];\n      case 'dateRange':\n        return [\n          this.bindings.i18n.t('to', {\n            start: parseDate((value.value as DateFacetValue).start).format(\n              'YYYY-MM-DD'\n            ),\n            end: parseDate((value.value as DateFacetValue).end).format(\n              'YYYY-MM-DD'\n            ),\n          }),\n        ];\n      case 'hierarchical':\n        return (value.value as CategoryFacetValue).path.map(\n          (pathValue: string) =>\n            getFieldValueCaption(field, pathValue, this.bindings.i18n)\n        );\n      case 'regular':\n        return [\n          getFieldValueCaption(\n            field,\n            (value.value as RegularFacetValue).value,\n            this.bindings.i18n\n          ),\n        ];\n      default: {\n        // TODO COMHUB-291 support location breadcrumb\n        this.bindings.engine.logger.warn('Unexpected breadcrumb type.');\n        return [];\n      }\n    }\n  };\n\n  private buildBreadcrumb(breadcrumb: Breadcrumb<AnyFacetValue>) {\n    return breadcrumb.values.map((value: BreadcrumbValue<AnyFacetValue>) => {\n      return {\n        facetId: breadcrumb.facetId,\n        label: breadcrumb.facetDisplayName,\n        deselect: value.deselect,\n        formattedValue: this.valueForFacetType(\n          breadcrumb.type,\n          breadcrumb.facetId,\n          value\n        ),\n      };\n    });\n  }\n\n  private renderBreadcrumbs(breadcrumbs: BreadboxBreadcrumb[]) {\n    this.numberOfBreadcrumbs = breadcrumbs.length;\n\n    return breadcrumbs.map((breadcrumb, index) => {\n      const isLastBreadcrumb = breadcrumbs.length === 1;\n      return (\n        <BreadcrumbButton\n          setRef={(ref) => {\n            if (this.lastRemovedBreadcrumbIndex === index) {\n              this.focusTargets.breadcrumbRemovedFocus.setTarget(ref);\n            }\n            if (this.firstExpandedBreadcrumbIndex === index) {\n              this.focusTargets.breadcrumbShowMoreFocus.setTarget(ref);\n            }\n          }}\n          pathLimit={this.pathLimit}\n          breadcrumb={breadcrumb}\n          onSelectBreadcrumb={() => {\n            if (isLastBreadcrumb) {\n              this.bindings.store.state.resultList?.focusOnFirstResultAfterNextSearch();\n            } else if (this.numberOfBreadcrumbs > 1) {\n              this.focusTargets.breadcrumbRemovedFocus.focusAfterSearch();\n            }\n\n            this.lastRemovedBreadcrumbIndex = index;\n            breadcrumb.deselect();\n          }}\n          i18n={this.bindings.i18n}\n        >\n          <BreadcrumbContent\n            pathLimit={this.pathLimit}\n            isCollapsed={this.isCollapsed}\n            i18n={this.bindings.i18n}\n            breadcrumb={breadcrumb}\n          ></BreadcrumbContent>\n        </BreadcrumbButton>\n      );\n    });\n  }\n\n  public render() {\n    const breadcrumbs = this.breadcrumbManagerState.facetBreadcrumbs\n      .map((breadcrumb) => {\n        return this.buildBreadcrumb(breadcrumb);\n      })\n      .flat();\n\n    if (!breadcrumbs.length) {\n      return <Hidden></Hidden>;\n    }\n    return (\n      <BreadcrumbContainer\n        isCollapsed={this.isCollapsed}\n        i18n={this.bindings.i18n}\n      >\n        {this.renderBreadcrumbs(breadcrumbs)}\n        <BreadcrumbShowMore\n          setRef={(el: HTMLButtonElement) => {\n            this.focusTargets.breadcrumbShowLessFocus.setTarget(el!);\n            this.showMore = el;\n          }}\n          onShowMore={() => {\n            this.firstExpandedBreadcrumbIndex =\n              this.numberOfBreadcrumbs - this.numberOfCollapsedBreadcrumbs;\n            this.focusTargets.breadcrumbShowMoreFocus.focusOnNextTarget();\n            this.isCollapsed = false;\n          }}\n          isCollapsed={this.isCollapsed}\n          i18n={this.bindings.i18n}\n          numberOfCollapsedBreadcrumbs={this.numberOfCollapsedBreadcrumbs}\n        ></BreadcrumbShowMore>\n\n        <BreadcrumbShowLess\n          setRef={(el: HTMLButtonElement) => {\n            this.showLess = el;\n          }}\n          onShowLess={() => {\n            this.focusTargets.breadcrumbShowLessFocus.focusOnNextTarget();\n            this.isCollapsed = true;\n          }}\n          isCollapsed={this.isCollapsed}\n          i18n={this.bindings.i18n}\n        ></BreadcrumbShowLess>\n\n        <BreadcrumbClearAll\n          setRef={() => {\n            const isFocusTarget =\n              this.lastRemovedBreadcrumbIndex === this.numberOfBreadcrumbs;\n\n            isFocusTarget\n              ? this.focusTargets.breadcrumbRemovedFocus.setTarget\n              : undefined;\n          }}\n          onClick={async () => {\n            this.breadcrumbManager.deselectAll();\n            this.bindings.store.state.resultList?.focusOnFirstResultAfterNextSearch();\n          }}\n          isCollapsed={this.isCollapsed}\n          i18n={this.bindings.i18n}\n        ></BreadcrumbClearAll>\n      </BreadcrumbContainer>\n    );\n  }\n\n  public componentDidRender() {\n    this.adaptBreadcrumbs();\n  }\n}\n"],"mappings":"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","ignoreList":[]}