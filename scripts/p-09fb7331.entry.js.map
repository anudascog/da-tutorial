{"version":3,"names":["atomicInsightTabCss","AtomicInsightTabStyle0","AtomicInsightTab","this","tabId","randomID","isAppLoaded","label","active","unsubscribe","select","tab","initialize","buildInsightTab","bindings","engine","options","expression","id","initialState","isActive","subscribe","state","createAppLoadedListener","store","componentDidRender","dispatchTabLoaded","host","disconnectedCallback","render","h","Button","style","part","class","tabState","ariaLabel","i18n","t","title","ariaPressed","onClick","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/insight/atomic-insight-tab/atomic-insight-tab.pcss?tag=atomic-insight-tab&encapsulation=shadow","src/components/insight/atomic-insight-tab/atomic-insight-tab.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n\n.active {\n  &::after {\n    @apply bg-primary absolute bottom-0 block h-1 w-full rounded;\n    content: '';\n  }\n}\n\n[part='tab'] {\n  @apply relative mt-1 mr-6 pb-3 font-semibold;\n  max-width: 150px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n","import {Unsubscribe} from '@coveo/headless';\nimport {\n  buildTab as buildInsightTab,\n  Tab as InsightTab,\n  TabState as InsightTabState,\n} from '@coveo/headless/insight';\nimport {Component, h, Prop, State, Method, Element} from '@stencil/core';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {randomID} from '../../../utils/utils';\nimport {createAppLoadedListener} from '../../common/interface/store';\nimport {Button} from '../../common/stencil-button';\nimport {dispatchTabLoaded, TabCommon} from '../../common/tabs/tab-common';\nimport {InsightBindings} from '../atomic-insight-interface/atomic-insight-interface';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-insight-tab',\n  styleUrl: './atomic-insight-tab.pcss',\n  shadow: true,\n})\nexport class AtomicInsightTab\n  implements TabCommon, InitializableComponent<InsightBindings>\n{\n  private tab!: InsightTab;\n  private tabId = randomID('insight-tab');\n\n  @Element() host!: HTMLElement;\n\n  @InitializeBindings() public bindings!: InsightBindings;\n\n  @State() public error!: Error;\n  @State() private isAppLoaded = false;\n\n  @BindStateToController('tab')\n  @State()\n  private tabState!: InsightTabState;\n\n  /**\n   * The label that will be shown to the user.\n   */\n  @Prop({reflect: true}) public label = 'no-label';\n\n  /**\n   * Whether this tab is active upon rendering.\n   * If multiple tabs are set to active on render, the last one to be rendered will override the others.\n   */\n  @Prop({reflect: true, mutable: true}) public active = false;\n\n  /**\n   * The expression that will be passed to the search as a `cq` paramenter upon being selected.\n   */\n  @Prop() public expression!: string;\n\n  private unsubscribe: Unsubscribe = () => {};\n\n  /**\n   * Activates the tab.\n   */\n  @Method()\n  async select() {\n    this.tab.select();\n  }\n\n  public initialize() {\n    this.tab = buildInsightTab(this.bindings.engine, {\n      options: {expression: this.expression, id: this.tabId},\n      initialState: {isActive: this.active},\n    });\n    this.unsubscribe = this.tab.subscribe(\n      () => (this.active = this.tab.state.isActive)\n    );\n    createAppLoadedListener(this.bindings.store, (isAppLoaded) => {\n      this.isAppLoaded = isAppLoaded;\n    });\n  }\n\n  public componentDidRender() {\n    dispatchTabLoaded(this.host);\n  }\n\n  public disconnectedCallback() {\n    this.unsubscribe();\n  }\n\n  public render() {\n    if (!this.isAppLoaded) {\n      return;\n    }\n\n    return (\n      <Button\n        style=\"text-transparent\"\n        part=\"tab\"\n        class={this.tabState.isActive ? 'active' : ''}\n        ariaLabel={this.bindings.i18n.t('tab-search', {label: this.label})}\n        title={this.label}\n        ariaPressed={`${this.tabState.isActive}`}\n        onClick={() => this.tab.select()}\n      >\n        {this.label}\n      </Button>\n    );\n  }\n}\n"],"mappings":"geAAA,MAAMA,EAAsB,u61DAC5B,MAAAC,EAAeD,E,iXCyBFE,EAAgB,M,yBAInBC,KAAAC,MAAQC,EAAS,eAORF,KAAAG,YAAc,MASDH,KAAAI,MAAQ,WAMOJ,KAAAK,OAAS,MAO9CL,KAAAM,YAA2B,O,sCAtBJ,M,mCASO,W,YAMgB,M,0BAatD,YAAMC,GACJP,KAAKQ,IAAID,Q,CAGJ,UAAAE,GACLT,KAAKQ,IAAME,EAAgBV,KAAKW,SAASC,OAAQ,CAC/CC,QAAS,CAACC,WAAYd,KAAKc,WAAYC,GAAIf,KAAKC,OAChDe,aAAc,CAACC,SAAUjB,KAAKK,UAEhCL,KAAKM,YAAcN,KAAKQ,IAAIU,WAC1B,IAAOlB,KAAKK,OAASL,KAAKQ,IAAIW,MAAMF,WAEtCG,EAAwBpB,KAAKW,SAASU,OAAQlB,IAC5CH,KAAKG,YAAcA,CAAW,G,CAI3B,kBAAAmB,GACLC,EAAkBvB,KAAKwB,K,CAGlB,oBAAAC,GACLzB,KAAKM,a,CAGA,MAAAoB,GACL,IAAK1B,KAAKG,YAAa,CACrB,M,CAGF,OACEwB,EAACC,EAAM,CACLC,MAAM,mBACNC,KAAK,MACLC,MAAO/B,KAAKgC,SAASf,SAAW,SAAW,GAC3CgB,UAAWjC,KAAKW,SAASuB,KAAKC,EAAE,aAAc,CAAC/B,MAAOJ,KAAKI,QAC3DgC,MAAOpC,KAAKI,MACZiC,YAAa,GAAGrC,KAAKgC,SAASf,WAC9BqB,QAAS,IAAMtC,KAAKQ,IAAID,UAEvBP,KAAKI,M,6BAvEiBmC,EAAA,CAA5BC,K,+BAOOD,EAAA,CAFPE,EAAsB,Q","ignoreList":[]}