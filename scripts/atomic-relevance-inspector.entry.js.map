{"file":"atomic-relevance-inspector.entry.js","mappings":";;;;;;;AAAA,MAAM,2BAA2B,GAAG,qi1DAAqi1D,CAAC;AAC1k1D,uCAAe,2BAA2B;;MCY7B,wBAAwB;;;;QAMZ,SAAI,GAAG,KAAK,CAAC;;oBAAN,KAAK;;IAK5B,MAAM;QACX,QACE,qEACE,WAAW,EAAC,QAAQ,EACpB,MAAM,EAAE,IAAI,CAAC,IAAI,EACjB,KAAK,EAAE;gBACL,IAAI,CAAC,uBAAuB,EAAE,IAAI,EAAE,CAAC;aACtC,IAED,0DAAG,IAAI,EAAC,QAAQ,mCAAiC,EACjD,0DAAG,IAAI,EAAC,MAAM,6EAEV,EACJ,4DAAK,IAAI,EAAC,QAAQ,EAAC,KAAK,EAAC,sCAAsC,IAC7D,EAAC,MAAM,qDACL,KAAK,EAAC,iBAAiB,EACvB,KAAK,EAAC,UAAU,EAChB,OAAO,EAAE,MAAM,IAAI,CAAC,uBAAuB,EAAE,IAAI,EAAE,aAG5C,EACT,0DACE,KAAK,EAAC,iBAAiB,EACvB,MAAM,EAAC,QAAQ,EACf,IAAI,EAAE,IAAI,CAAC,SAAS,EACpB,OAAO,EAAE,MAAM,IAAI,CAAC,uBAAuB,EAAE,IAAI,EAAE,WAGjD,CACA,CACO,EACf;KACH;IAED,IAAY,SAAS;QACnB,MAAM,EAAC,cAAc,EAAE,WAAW,EAAC,GACjC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC;QAE3C,MAAM,KAAK,GAAG,uBAAuB,CAAC,cAAc,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;QAC5E,MAAM,EAAC,gBAAgB,EAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC;QAC7D,OAAO,GAAG,KAAK,YAAY,cAAc,8BAA8B,gBAAgB,EAAE,CAAC;KAC3F;;;;;;","names":[],"sources":["src/components/search/atomic-relevance-inspector/atomic-relevance-inspector.pcss?tag=atomic-relevance-inspector&encapsulation=shadow","src/components/search/atomic-relevance-inspector/atomic-relevance-inspector.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n","import {getOrganizationEndpoint} from '@coveo/headless';\nimport {Component, h, Prop, Event, EventEmitter} from '@stencil/core';\nimport {Button} from '../../common/stencil-button';\nimport {Bindings} from '../atomic-search-interface/atomic-search-interface';\n\n/**\n * The `atomic-relevance-inspector` component is used internally to offer insight on search page relevance, as well as information to help troubleshoot issues during development.\n */\n@Component({\n  tag: 'atomic-relevance-inspector',\n  styleUrl: 'atomic-relevance-inspector.pcss',\n  shadow: true,\n})\nexport class AtomicRelevanceInspector {\n  /**\n   * The Atomic interface bindings, namely the headless search engine and i18n instances.\n   */\n  @Prop() bindings!: Bindings;\n\n  @Prop({reflect: true}) open = false;\n\n  @Event({eventName: 'atomic/relevanceInspector/close'})\n  closeRelevanceInspector: EventEmitter<null> | undefined;\n\n  public render() {\n    return (\n      <atomic-modal\n        exportparts=\"footer\"\n        isOpen={this.open}\n        close={() => {\n          this.closeRelevanceInspector?.emit();\n        }}\n      >\n        <p slot=\"header\">Open the relevance inspector</p>\n        <p slot=\"body\">\n          The Relevance Inspector will open in the Coveo Administration Console.\n        </p>\n        <div slot=\"footer\" class=\"flex w-full items-center justify-end\">\n          <Button\n            style=\"outline-primary\"\n            class=\"mr-2 p-2\"\n            onClick={() => this.closeRelevanceInspector?.emit()}\n          >\n            Ignore\n          </Button>\n          <a\n            class=\"btn-primary p-2\"\n            target=\"_blank\"\n            href={this.adminHref}\n            onClick={() => this.closeRelevanceInspector?.emit()}\n          >\n            Open\n          </a>\n        </div>\n      </atomic-modal>\n    );\n  }\n\n  private get adminHref() {\n    const {organizationId, environment} =\n      this.bindings.engine.state.configuration;\n\n    const admin = getOrganizationEndpoint(organizationId, environment, 'admin');\n    const {searchResponseId} = this.bindings.engine.state.search;\n    return `${admin}/admin/#/${organizationId}/search/relevanceInspector/${searchResponseId}`;\n  }\n}\n"],"version":3}