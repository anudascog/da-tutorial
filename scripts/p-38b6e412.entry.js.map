{"version":3,"names":["atomicSmartSnippetSuggestionsCss","AtomicSmartSnippetSuggestionsStyle0","AtomicSmartSnippetSuggestions","this","headingLevel","initialize","id","randomID","smartSnippetQuestionsList","buildSmartSnippetQuestionsList","bindings","engine","render","smartSnippetQuestionsListState","questions","length","h","Hidden","SmartSnippetSuggestionsWrapper","i18n","map","relatedQuestion","i","renderRelatedQuestion","index","SmartSnippetSuggestionsQuestionWrapper","expanded","key","questionAnswerId","SmartSnippetSuggestionsQuestion","ariaControls","onClick","toggleQuestion","question","icon","ArrowDown","ArrowRight","part","getQuestionPart","class","renderAnswer","SmartSnippetSuggestionsAnswerAndSourceWrapper","exportparts","htmlContent","answer","innerStyle","style","onSelectInlineLink","e","selectInlineLink","detail","onBeginDelayedSelectInlineLink","beginDelayedSelectInlineLink","onCancelPendingSelectInlineLink","cancelPendingSelectInlineLink","source","renderSource","SmartSnippetSuggestionsFooter","anchorAttributes","getAttributesFromLinkSlot","host","onBeginDelayedSelectSource","beginDelayedSelectSource","onCancelPendingSelectSource","cancelPendingSelectSource","onSelectSource","selectSource","styleTag","querySelector","content","snippetStyle","innerHTML","collapse","expand","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/search/smart-snippets/atomic-smart-snippet-suggestions/atomic-smart-snippet-suggestions.pcss?tag=atomic-smart-snippet-suggestions&encapsulation=shadow","src/components/search/smart-snippets/atomic-smart-snippet-suggestions/atomic-smart-snippet-suggestions.tsx"],"sourcesContent":["@import '../../../common/smart-snippets/atomic-smart-snippet-suggestions/atomic-smart-snippet-suggestions.pcss';\n","import {getAttributesFromLinkSlot} from '@/src/components/common/item-link/attributes-slot';\nimport {\n  getQuestionPart,\n  SmartSnippetSuggestionsAnswerAndSourceWrapper,\n  SmartSnippetSuggestionsFooter,\n  SmartSnippetSuggestionsQuestion,\n  SmartSnippetSuggestionsQuestionWrapper,\n  SmartSnippetSuggestionsWrapper,\n} from '@/src/components/common/smart-snippets/atomic-smart-snippet-suggestions/smart-snippet-suggestions-common';\nimport {Hidden} from '@/src/components/common/stencil-hidden';\nimport {randomID} from '@/src/utils/utils';\nimport {\n  buildSmartSnippetQuestionsList,\n  Result,\n  SmartSnippetQuestionsList,\n  SmartSnippetQuestionsListState,\n  SmartSnippetRelatedQuestion,\n} from '@coveo/headless';\nimport {Component, Prop, State, Element, h} from '@stencil/core';\nimport ArrowDown from '../../../../images/arrow-down.svg';\nimport ArrowRight from '../../../../images/arrow-right.svg';\nimport {\n  InitializableComponent,\n  InitializeBindings,\n  BindStateToController,\n} from '../../../../utils/initialization-utils';\nimport {Bindings} from '../../atomic-search-interface/atomic-search-interface';\n\n/**\n * The `atomic-smart-snippet-suggestions-suggestions` component displays an accordion of questions related to the query with their corresponding answers.\n *\n * You can style the snippets by inserting a template element like this:\n * ```html\n * <atomic-smart-snippet-suggestions>\n *   <template>\n *     <style>\n *       b {\n *         color: blue;\n *       }\n *     </style>\n *   </template>\n * </atomic-smart-snippet-suggestions>\n * ```\n *\n * @slot source-anchor-attributes - Lets you pass [attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attributes) down to anchor elements, overriding other attributes.\n * To be used exclusively in anchor elements, such as: `<a slot=\"source-anchor-attributes\" target=\"_blank\"></a>`.\n *\n * @part container - The wrapper with a border around the entire component.\n * @part heading - The heading above the list of related questions.\n * @part questions - The list of related questions.\n * @part question-answer-expanded - An expanded related question.\n * @part question-answer-collapsed - A collapsed related question.\n * @part question-button-expanded - The button to collapse a related question.\n * @part question-button-collapsed - The button to expand a related question.\n * @part question-icon-expanded - The caret of an expanded related question.\n * @part question-icon-collapsed - The caret of a collapsed related question.\n * @part question-text-expanded - The title of an expanded related question.\n * @part question-text-collapsed - The title of a collapsed related question.\n * @part answer-and-source - The wrapper around the answer and source of a related question.\n * @part answer - The container displaying the full document excerpt of a related question's answer.\n * @part footer - The wrapper around the source of a related question's answer.\n * @part source-url - The URL to the document a related question's answer is extracted from.\n * @part source-title - The title of the document a related question's answer is extracted from.\n */\n@Component({\n  tag: 'atomic-smart-snippet-suggestions',\n  styleUrl: 'atomic-smart-snippet-suggestions.pcss',\n  shadow: true,\n})\nexport class AtomicSmartSnippetSuggestions implements InitializableComponent {\n  @InitializeBindings() public bindings!: Bindings;\n  public smartSnippetQuestionsList!: SmartSnippetQuestionsList;\n  @BindStateToController('smartSnippetQuestionsList')\n  @State()\n  public smartSnippetQuestionsListState!: SmartSnippetQuestionsListState;\n  public error!: Error;\n  @Element() public host!: HTMLElement;\n\n  /**\n   * The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the \"People also ask\" heading over the snippets, from 1 to 5.\n   */\n  @Prop({reflect: true}) public headingLevel = 0;\n\n  /**\n   * Sets the style of the snippets.\n   *\n   * Example:\n   * ```ts\n   * smartSnippet.snippetStyle = `\n   *   b {\n   *     color: blue;\n   *   }\n   * `;\n   * ```\n   */\n  @Prop() snippetStyle?: string;\n\n  private id!: string;\n\n  public initialize() {\n    this.id = randomID('atomic-smart-snippet-suggestions-');\n    this.smartSnippetQuestionsList = buildSmartSnippetQuestionsList(\n      this.bindings.engine\n    );\n  }\n\n  public render() {\n    if (!this.smartSnippetQuestionsListState.questions.length) {\n      return <Hidden></Hidden>;\n    }\n\n    return (\n      <SmartSnippetSuggestionsWrapper\n        headingLevel={this.headingLevel}\n        i18n={this.bindings.i18n}\n      >\n        {this.smartSnippetQuestionsListState.questions.map(\n          (relatedQuestion, i) => this.renderRelatedQuestion(relatedQuestion, i)\n        )}\n      </SmartSnippetSuggestionsWrapper>\n    );\n  }\n\n  private renderRelatedQuestion(\n    relatedQuestion: SmartSnippetRelatedQuestion,\n    index: number\n  ) {\n    return (\n      <SmartSnippetSuggestionsQuestionWrapper\n        expanded={relatedQuestion.expanded}\n        key={relatedQuestion.questionAnswerId}\n      >\n        <SmartSnippetSuggestionsQuestion\n          ariaControls={`${this.id}-${index}`}\n          expanded={relatedQuestion.expanded}\n          headingLevel={this.headingLevel}\n          onClick={() => this.toggleQuestion(relatedQuestion)}\n          question={relatedQuestion.question}\n        >\n          <atomic-icon\n            icon={relatedQuestion.expanded ? ArrowDown : ArrowRight}\n            part={getQuestionPart('icon', relatedQuestion.expanded)}\n            class=\"mr-3 w-2.5 stroke-[1.25]\"\n          ></atomic-icon>\n        </SmartSnippetSuggestionsQuestion>\n        {relatedQuestion.expanded && this.renderAnswer(relatedQuestion, index)}\n      </SmartSnippetSuggestionsQuestionWrapper>\n    );\n  }\n\n  private renderAnswer(\n    relatedQuestion: SmartSnippetRelatedQuestion,\n    index: number\n  ) {\n    return (\n      <SmartSnippetSuggestionsAnswerAndSourceWrapper\n        expanded={relatedQuestion.expanded}\n        id={`${this.id}-${index}`}\n      >\n        <atomic-smart-snippet-answer\n          exportparts=\"answer\"\n          htmlContent={relatedQuestion.answer}\n          innerStyle={this.style}\n          onSelectInlineLink={(e) =>\n            this.smartSnippetQuestionsList.selectInlineLink(\n              relatedQuestion.questionAnswerId,\n              e.detail\n            )\n          }\n          onBeginDelayedSelectInlineLink={(e) =>\n            this.smartSnippetQuestionsList.beginDelayedSelectInlineLink(\n              relatedQuestion.questionAnswerId,\n              e.detail\n            )\n          }\n          onCancelPendingSelectInlineLink={(e) =>\n            this.smartSnippetQuestionsList.cancelPendingSelectInlineLink(\n              relatedQuestion.questionAnswerId,\n              e.detail\n            )\n          }\n        ></atomic-smart-snippet-answer>\n        {relatedQuestion.source &&\n          this.renderSource(\n            relatedQuestion.questionAnswerId,\n            relatedQuestion.source\n          )}\n      </SmartSnippetSuggestionsAnswerAndSourceWrapper>\n    );\n  }\n\n  private renderSource(questionAnswerId: string, source: Result) {\n    return (\n      <SmartSnippetSuggestionsFooter i18n={this.bindings.i18n}>\n        <atomic-smart-snippet-source\n          anchorAttributes={getAttributesFromLinkSlot(\n            this.host,\n            'source-anchor-attributes'\n          )}\n          onBeginDelayedSelectSource={() =>\n            this.smartSnippetQuestionsList.beginDelayedSelectSource(\n              questionAnswerId\n            )\n          }\n          onCancelPendingSelectSource={() =>\n            this.smartSnippetQuestionsList.cancelPendingSelectSource(\n              questionAnswerId\n            )\n          }\n          onSelectSource={() =>\n            this.smartSnippetQuestionsList.selectSource(questionAnswerId)\n          }\n          source={source}\n        ></atomic-smart-snippet-source>\n      </SmartSnippetSuggestionsFooter>\n    );\n  }\n\n  private get style() {\n    const styleTag = this.host\n      .querySelector('template')\n      ?.content.querySelector('style');\n    if (!styleTag) {\n      return this.snippetStyle;\n    }\n    return styleTag.innerHTML;\n  }\n\n  private toggleQuestion(relatedQuestion: SmartSnippetRelatedQuestion) {\n    if (relatedQuestion.expanded) {\n      this.smartSnippetQuestionsList.collapse(relatedQuestion.questionAnswerId);\n    } else {\n      this.smartSnippetQuestionsList.expand(relatedQuestion.questionAnswerId);\n    }\n  }\n}\n"],"mappings":"ooBAAA,MAAMA,EAAmC,6s3DACzC,MAAAC,EAAeD,E,iXCoEFE,EAA6B,M,yBAYVC,KAAAC,aAAe,E,gEAAA,E,4BAkBtC,UAAAC,GACLF,KAAKG,GAAKC,EAAS,qCACnBJ,KAAKK,0BAA4BC,EAC/BN,KAAKO,SAASC,O,CAIX,MAAAC,GACL,IAAKT,KAAKU,+BAA+BC,UAAUC,OAAQ,CACzD,OAAOC,EAACC,EAAM,K,CAGhB,OACED,EAACE,EAA8B,CAC7Bd,aAAcD,KAAKC,aACnBe,KAAMhB,KAAKO,SAASS,MAEnBhB,KAAKU,+BAA+BC,UAAUM,KAC7C,CAACC,EAAiBC,IAAMnB,KAAKoB,sBAAsBF,EAAiBC,K,CAMpE,qBAAAC,CACNF,EACAG,GAEA,OACER,EAACS,EAAsC,CACrCC,SAAUL,EAAgBK,SAC1BC,IAAKN,EAAgBO,kBAErBZ,EAACa,EAA+B,CAC9BC,aAAc,GAAG3B,KAAKG,MAAMkB,IAC5BE,SAAUL,EAAgBK,SAC1BtB,aAAcD,KAAKC,aACnB2B,QAAS,IAAM5B,KAAK6B,eAAeX,GACnCY,SAAUZ,EAAgBY,UAE1BjB,EAAA,eACEkB,KAAMb,EAAgBK,SAAWS,EAAYC,EAC7CC,KAAMC,EAAgB,OAAQjB,EAAgBK,UAC9Ca,MAAM,8BAGTlB,EAAgBK,UAAYvB,KAAKqC,aAAanB,EAAiBG,G,CAK9D,YAAAgB,CACNnB,EACAG,GAEA,OACER,EAACyB,EAA6C,CAC5Cf,SAAUL,EAAgBK,SAC1BpB,GAAI,GAAGH,KAAKG,MAAMkB,KAElBR,EAAA,+BACE0B,YAAY,SACZC,YAAatB,EAAgBuB,OAC7BC,WAAY1C,KAAK2C,MACjBC,mBAAqBC,GACnB7C,KAAKK,0BAA0ByC,iBAC7B5B,EAAgBO,iBAChBoB,EAAEE,QAGNC,+BAAiCH,GAC/B7C,KAAKK,0BAA0B4C,6BAC7B/B,EAAgBO,iBAChBoB,EAAEE,QAGNG,gCAAkCL,GAChC7C,KAAKK,0BAA0B8C,8BAC7BjC,EAAgBO,iBAChBoB,EAAEE,UAIP7B,EAAgBkC,QACfpD,KAAKqD,aACHnC,EAAgBO,iBAChBP,EAAgBkC,Q,CAMlB,YAAAC,CAAa5B,EAA0B2B,GAC7C,OACEvC,EAACyC,EAA6B,CAACtC,KAAMhB,KAAKO,SAASS,MACjDH,EAAA,+BACE0C,iBAAkBC,EAChBxD,KAAKyD,KACL,4BAEFC,2BAA4B,IAC1B1D,KAAKK,0BAA0BsD,yBAC7BlC,GAGJmC,4BAA6B,IAC3B5D,KAAKK,0BAA0BwD,0BAC7BpC,GAGJqC,eAAgB,IACd9D,KAAKK,0BAA0B0D,aAAatC,GAE9C2B,OAAQA,I,CAMhB,SAAYT,GACV,MAAMqB,EAAWhE,KAAKyD,KACnBQ,cAAc,aACbC,QAAQD,cAAc,SAC1B,IAAKD,EAAU,CACb,OAAOhE,KAAKmE,Y,CAEd,OAAOH,EAASI,S,CAGV,cAAAvC,CAAeX,GACrB,GAAIA,EAAgBK,SAAU,CAC5BvB,KAAKK,0BAA0BgE,SAASnD,EAAgBO,iB,KACnD,CACLzB,KAAKK,0BAA0BiE,OAAOpD,EAAgBO,iB,8BAlK7B8C,EAAA,CAA5BC,K,+BAIMD,EAAA,CAFNE,EAAsB,8B","ignoreList":[]}