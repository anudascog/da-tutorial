{"version":3,"names":["StencilCheckbox","props","partName","part","classNames","parts","checked","push","class","attributes","key","id","join","toString","ariaLabel","text","value","ref","h","role","onClick","onToggle","onMouseDown","e","style","stroke","icon","Tick","iconPart"],"sources":["src/components/common/stencil-checkbox.tsx"],"sourcesContent":["import {FunctionalComponent, h} from '@stencil/core';\nimport Tick from '../../images/checkbox.svg';\n\n/**\n * @deprecated Should only be used for Stencil components; for Lit components, use the CheckboxProps interface from the checkbox.ts file\n */\nexport interface StencilCheckboxProps {\n  checked: boolean;\n  onToggle(checked: boolean): void;\n  key?: string | number;\n  id?: string;\n  class?: string;\n  text?: string;\n  part?: string;\n  iconPart?: string;\n  ariaLabel?: string;\n  ariaCurrent?: string;\n  ref?(element?: HTMLElement): void;\n  onMouseDown?(evt: MouseEvent): void;\n}\n\n/**\n * @deprecated Should only be used for Stencil components; for Lit components, use the Checkbox function from the checkbox.ts file\n */\nexport const StencilCheckbox: FunctionalComponent<StencilCheckboxProps> = (\n  props\n) => {\n  const partName = props.part ?? 'checkbox';\n\n  const classNames = [\n    'w-4 h-4 grid place-items-center rounded focus-visible:outline-none hover:border-primary-light focus-visible:border-primary-light',\n  ];\n  const parts = [partName];\n  if (props.checked) {\n    classNames.push(\n      'selected bg-primary hover:bg-primary-light focus-visible:bg-primary-light'\n    );\n    parts.push(`${partName}-checked`);\n  } else {\n    classNames.push('border border-neutral-dark');\n  }\n  if (props.class) {\n    classNames.push(props.class);\n  }\n\n  const attributes = {\n    key: props.key,\n    id: props.id,\n    class: classNames.join(' '),\n    part: parts.join(' '),\n    'aria-checked': props.checked.toString(),\n    'aria-label': props.ariaLabel ?? props.text,\n    value: props.text,\n    ref: props.ref,\n  };\n\n  return (\n    <button\n      {...attributes}\n      role=\"checkbox\"\n      onClick={() => props.onToggle?.(!props.checked)}\n      onMouseDown={(e) => props.onMouseDown?.(e)}\n    >\n      <atomic-icon\n        style={{stroke: 'white'}}\n        class={`w-3/5 ${props.checked ? 'block' : 'hidden'}`}\n        icon={Tick}\n        part={props.iconPart}\n      ></atomic-icon>\n    </button>\n  );\n};\n"],"mappings":"8OAwBaA,EACXC,IAEA,MAAMC,EAAWD,EAAME,MAAQ,WAE/B,MAAMC,EAAa,CACjB,oIAEF,MAAMC,EAAQ,CAACH,GACf,GAAID,EAAMK,QAAS,CACjBF,EAAWG,KACT,6EAEFF,EAAME,KAAK,GAAGL,Y,KACT,CACLE,EAAWG,KAAK,6B,CAElB,GAAIN,EAAMO,MAAO,CACfJ,EAAWG,KAAKN,EAAMO,M,CAGxB,MAAMC,EAAa,CACjBC,IAAKT,EAAMS,IACXC,GAAIV,EAAMU,GACVH,MAAOJ,EAAWQ,KAAK,KACvBT,KAAME,EAAMO,KAAK,KACjB,eAAgBX,EAAMK,QAAQO,WAC9B,aAAcZ,EAAMa,WAAab,EAAMc,KACvCC,MAAOf,EAAMc,KACbE,IAAKhB,EAAMgB,KAGb,OACEC,EAAA,aACMT,EACJU,KAAK,WACLC,QAAS,IAAMnB,EAAMoB,YAAYpB,EAAMK,SACvCgB,YAAcC,GAAMtB,EAAMqB,cAAcC,IAExCL,EAAA,eACEM,MAAO,CAACC,OAAQ,SAChBjB,MAAO,SAASP,EAAMK,QAAU,QAAU,WAC1CoB,KAAMC,EACNxB,KAAMF,EAAM2B,WAEP,S","ignoreList":[]}