{"file":"atomic-product-price.js","mappings":";;;;;;;AAAA,MAAM,qBAAqB,GAAG,wJAAwJ,CAAC;AACvL,iCAAe,qBAAqB;;;;;;;;;;;;MCyBvBA,oBAAkB;;;;;IAUtB,UAAU;QACf,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;KACnD;IAEO,WAAW,CAAC,KAAa;QAC/B,IAAI;YACF,MAAM,EAAC,QAAQ,EAAC,GAAG,IAAI,CAAC,YAAY,CAAC;YACrC,MAAM,SAAS,GAAG,wBAAwB,CAAC,QAAQ,CAAC,CAAC;YACrD,OAAO,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAqB,CAAC,CAAC;SACnE;QAAC,OAAO,KAAK,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,KAAc,CAAC;YAC5B,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC;SACzB;KACF;IAEO,KAAK,CAAC,KAAa;QACzB,IAAI;YACF,OAAO,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;SACxC;QAAC,OAAO,KAAK,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,KAAc,CAAC;YAC5B,OAAO,IAAI,CAAC;SACb;KACF;IAEO,iBAAiB,CAAC,KAAa;QACrC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,KAAK,KAAK,IAAI,EAAE;YAClB,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SAChC;KACF;IAED,IAAY,mBAAmB;QAC7B,QACE,IAAI,CAAC,OAAO,CAAC,cAAc,KAAK,IAAI;YACpC,IAAI,CAAC,OAAO,CAAC,QAAQ,KAAK,IAAI;YAC9B,IAAI,CAAC,OAAO,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EACnD;KACH;IAEM,MAAM;QACX,MAAM,SAAS,GAAG,IAAI,CAAC,iBAAiB,CACtC,IAAI,CAAC,mBAAmB,GAAG,gBAAgB,GAAG,UAAU,CACzD,CAAC;QAEF,MAAM,aAAa,GAAG,IAAI,CAAC,mBAAmB;cAC1C,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;cAClC,IAAI,CAAC;QAET,QACE,EAAC,IAAI,qDAAC,KAAK,EAAC,sBAAsB,IAChC,4DACE,KAAK,EAAE,uBAAuB,IAAI,CAAC,mBAAmB,IAAI,YAAY,EAAE,IAEvE,SAAS,CACN,EAEN,4DACE,KAAK,EACH,wEAAwE;iBACvE,CAAC,aAAa,GAAG,YAAY,GAAG,EAAE,CAAC,IAGrC,aAAa,IAAI,GAAG,CACjB,CACD,EACP;KACH;;;AAzE4B;IAA5B,kBAAkB,EAAE;sDAAoC;AAG/B;IAAzB,cAAc,EAAE;qDAA2B;AAEV;IAAjC,qBAAqB,CAAC,SAAS,CAAC;0DAA6B;;;;;;;;;;;;;;;;;;;;","names":["AtomicProductPrice"],"sources":["src/components/commerce/product-template-components/atomic-product-price/atomic-product-price.pcss?tag=atomic-product-price","src/components/commerce/product-template-components/atomic-product-price/atomic-product-price.tsx"],"sourcesContent":[".display-grid {\n  & atomic-product-price {\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: column;\n\n    & .original-price {\n      line-height: 1;\n    }\n  }\n}\n","import {\n  buildContext,\n  Product,\n  Context,\n  ContextState,\n} from '@coveo/headless/commerce';\nimport {Component, h, Host} from '@stencil/core';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {defaultCurrencyFormatter} from '../../../common/formats/format-common';\nimport {CommerceBindings} from '../../atomic-commerce-interface/atomic-commerce-interface';\nimport {ProductContext} from '../product-template-decorators';\nimport {parseValue} from '../product-utils';\n\n/**\n * @alpha\n * The `atomic-product-price` component renders the price of a product.\n */\n@Component({\n  tag: 'atomic-product-price',\n  styleUrl: 'atomic-product-price.pcss',\n  shadow: false,\n})\nexport class AtomicProductPrice\n  implements InitializableComponent<CommerceBindings>\n{\n  @InitializeBindings() public bindings!: CommerceBindings;\n  public error!: Error;\n\n  @ProductContext() private product!: Product;\n  public context!: Context;\n  @BindStateToController('context') contextState!: ContextState;\n\n  public initialize(): void {\n    this.context = buildContext(this.bindings.engine);\n  }\n\n  private formatValue(value: number) {\n    try {\n      const {currency} = this.contextState;\n      const formatter = defaultCurrencyFormatter(currency);\n      return formatter(value, this.bindings.i18n.languages as string[]);\n    } catch (error) {\n      this.error = error as Error;\n      return value.toString();\n    }\n  }\n\n  private parse(field: string) {\n    try {\n      return parseValue(this.product, field);\n    } catch (error) {\n      this.error = error as Error;\n      return null;\n    }\n  }\n\n  private getFormattedValue(field: string) {\n    const value = this.parse(field);\n    if (value !== null) {\n      return this.formatValue(value);\n    }\n  }\n\n  private get hasPromotionalPrice() {\n    return (\n      this.product.ec_promo_price !== null &&\n      this.product.ec_price !== null &&\n      this.product.ec_promo_price < this.product.ec_price\n    );\n  }\n\n  public render() {\n    const mainPrice = this.getFormattedValue(\n      this.hasPromotionalPrice ? 'ec_promo_price' : 'ec_price'\n    );\n\n    const originalPrice = this.hasPromotionalPrice\n      ? this.getFormattedValue('ec_price')\n      : null;\n\n    return (\n      <Host class=\"flex flex-wrap gap-1\">\n        <div\n          class={`truncate break-keep ${this.hasPromotionalPrice && 'text-error'}`}\n        >\n          {mainPrice}\n        </div>\n\n        <div\n          class={\n            'original-price content-center truncate text-xl break-keep line-through' +\n            (!originalPrice ? ' invisible' : '')\n          }\n        >\n          {originalPrice ?? 'â€‹'}\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}