{"file":"atomic-breadbox.entry.js","mappings":"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","names":[],"sources":["src/components/search/atomic-breadbox/atomic-breadbox.pcss?tag=atomic-breadbox&encapsulation=shadow","src/components/search/atomic-breadbox/atomic-breadbox.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n@import '../../common/atomic-rating/atomic-rating.pcss';\n\n[part='breadcrumb-label'].excluded,\n[part='breadcrumb-value'].excluded {\n  text-decoration: line-through;\n  @apply text-error;\n}\n","import {NumberValue, Schema} from '@coveo/bueno';\nimport {\n  BreadcrumbManagerState,\n  BreadcrumbManager,\n  buildBreadcrumbManager,\n  FacetManager,\n  FacetManagerState,\n  buildFacetManager,\n} from '@coveo/headless';\nimport {Component, h, State, Element, Prop} from '@stencil/core';\nimport {getFieldValueCaption} from '../../../utils/field-utils';\nimport {\n  InitializableComponent,\n  BindStateToController,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {FocusTargetController} from '../../../utils/stencil-accessibility-utils';\nimport {Breadcrumb as BreadboxBreadcrumb} from '../../common/breadbox/breadcrumb-types';\nimport {BreadcrumbButton} from '../../common/breadbox/stencil-breadcrumb-button';\nimport {BreadcrumbClearAll} from '../../common/breadbox/stencil-breadcrumb-clear-all';\nimport {BreadcrumbContainer} from '../../common/breadbox/stencil-breadcrumb-container';\nimport {BreadcrumbContent} from '../../common/breadbox/stencil-breadcrumb-content';\nimport {BreadcrumbShowLess} from '../../common/breadbox/stencil-breadcrumb-show-less';\nimport {BreadcrumbShowMore} from '../../common/breadbox/stencil-breadcrumb-show-more';\nimport {Hidden} from '../../common/stencil-hidden';\nimport {Bindings} from '../atomic-search-interface/atomic-search-interface';\n\n/**\n * The `atomic-breadbox` component creates breadcrumbs that display a summary of the currently active facet values.\n *\n * @part container - The container of the whole component, list & label.\n * @part breadcrumb-list-container - The container of the list of breadcrumb buttons.\n * @part breadcrumb-list - The list of breadcrumb buttons.\n * @part breadcrumb-button - A single breadcrumb button.\n * @part breadcrumb-label - The breadcrumb label, associated with the facet.\n * @part breadcrumb-value - The breadcrumb formatted value.\n * @part breadcrumb-clear - The button to clear individual filters.\n * @part show-more - The button to display all breadcrumbs.\n * @part show-less - The button to display less breadcrumbs.\n * @part label - The \"Filters\" label.\n * @part clear - The button to clear all filters.\n */\n@Component({\n  tag: 'atomic-breadbox',\n  styleUrl: 'atomic-breadbox.pcss',\n  shadow: true,\n})\nexport class AtomicBreadbox implements InitializableComponent {\n  @InitializeBindings() public bindings!: Bindings;\n  private breadcrumbManager!: BreadcrumbManager;\n  private resizeObserver?: ResizeObserver;\n  private showMore!: HTMLButtonElement;\n  private showLess!: HTMLButtonElement;\n  private lastRemovedBreadcrumbIndex = 0;\n  private numberOfBreadcrumbs = 0;\n  private numberOfCollapsedBreadcrumbs = 0;\n  private firstExpandedBreadcrumbIndex?: number;\n  facetManager!: FacetManager;\n\n  @Element() private host!: HTMLElement;\n\n  @BindStateToController('breadcrumbManager')\n  @State()\n  private breadcrumbManagerState!: BreadcrumbManagerState;\n  @BindStateToController('facetManager')\n  @State()\n  public facetManagerState!: FacetManagerState;\n  @State() public error!: Error;\n  @State() private isCollapsed = true;\n\n  private breadcrumbRemovedFocus?: FocusTargetController;\n\n  private breadcrumbShowMoreFocus?: FocusTargetController;\n\n  private breadcrumbShowLessFocus?: FocusTargetController;\n\n  /**\n   * This prop allows you to control the display depth\n   * of the path by specifying the number of parent or ancestor\n   * breadcrumbs links relative to the currently selected value.\n   *\n   * If the path size is equal to or less than the pathLimit, all values in\n   * the path will be displayed without truncation.\n   *\n   * If the path size exceeds the pathLimit, it will truncate the path by\n   * replacing the middle values with ellipses ('...').\n   *\n   * Minimum: `1`\n   * @defaultValue `3`\n   */\n  @Prop() public pathLimit = 3;\n\n  public initialize() {\n    this.validateProps();\n    this.breadcrumbManager = buildBreadcrumbManager(this.bindings.engine);\n    this.facetManager = buildFacetManager(this.bindings.engine);\n\n    if (window.ResizeObserver) {\n      this.resizeObserver = new ResizeObserver(() => this.adaptBreadcrumbs());\n      this.resizeObserver.observe(this.host.parentElement!);\n    }\n  }\n\n  private validateProps() {\n    new Schema({\n      pathLimit: new NumberValue({\n        default: 3,\n        min: 1,\n        required: false,\n      }),\n    }).validate({\n      pathLimit: this.pathLimit,\n    });\n  }\n\n  public disconnectedCallback() {\n    this.resizeObserver?.disconnect();\n  }\n\n  private get focusTargets() {\n    if (!this.breadcrumbRemovedFocus) {\n      this.breadcrumbRemovedFocus = new FocusTargetController(this);\n    }\n    if (!this.breadcrumbShowLessFocus) {\n      this.breadcrumbShowLessFocus = new FocusTargetController(this);\n    }\n    if (!this.breadcrumbShowMoreFocus) {\n      this.breadcrumbShowMoreFocus = new FocusTargetController(this);\n    }\n    return {\n      breadcrumbRemovedFocus: this.breadcrumbRemovedFocus,\n      breadcrumbShowLessFocus: this.breadcrumbShowLessFocus,\n      breadcrumbShowMoreFocus: this.breadcrumbShowMoreFocus,\n    };\n  }\n\n  private get breadcrumbs() {\n    return Array.from(\n      this.host.shadowRoot!.querySelectorAll('li.breadcrumb')\n    ) as HTMLElement[];\n  }\n\n  private hide(element: HTMLElement) {\n    element.style.display = 'none';\n  }\n\n  private show(element: HTMLElement) {\n    element.style.display = '';\n  }\n\n  private showAllBreadcrumbs() {\n    this.breadcrumbs.forEach((breadcrumb) => this.show(breadcrumb));\n  }\n\n  private hideOverflowingBreadcrumbs() {\n    let hiddenBreadcrumbs = 0;\n    for (\n      let i = this.breadcrumbs.length - 1;\n      this.isOverflowing && i >= 0;\n      i--\n    ) {\n      this.hide(this.breadcrumbs[i]);\n      hiddenBreadcrumbs++;\n    }\n    this.updateShowMoreValue(hiddenBreadcrumbs);\n  }\n\n  private updateShowLessDisplay() {\n    this.show(this.showLess);\n    if (this.showLess.offsetTop === 0) {\n      this.hide(this.showLess);\n    }\n  }\n\n  private adaptBreadcrumbs() {\n    if (!this.breadcrumbs.length) {\n      return;\n    }\n    this.showAllBreadcrumbs();\n\n    if (!this.isCollapsed) {\n      this.updateShowLessDisplay();\n      return;\n    }\n\n    this.updateShowMoreValue(this.breadcrumbs.length);\n    this.hideOverflowingBreadcrumbs();\n  }\n\n  private get isOverflowing() {\n    const listElement = this.host.shadowRoot!.querySelector('ul');\n    if (!listElement) {\n      return false;\n    }\n    return listElement.scrollWidth > listElement.clientWidth;\n  }\n\n  private updateShowMoreValue(value: number) {\n    this.numberOfCollapsedBreadcrumbs = value;\n    if (value === 0) {\n      this.hide(this.showMore);\n      return;\n    }\n\n    this.show(this.showMore);\n    this.showMore.textContent = `+ ${value.toLocaleString(\n      this.bindings.i18n.language\n    )}`;\n\n    this.showMore.setAttribute(\n      'aria-label',\n      this.bindings.i18n.t('show-n-more-filters', {\n        value,\n      })\n    );\n  }\n\n  private get facetBreadcrumbs(): BreadboxBreadcrumb[] {\n    return this.breadcrumbManagerState.facetBreadcrumbs\n      .map(({facetId, field, values}) =>\n        values.map((value) => ({value, facetId, field}))\n      )\n      .flat()\n      .filter(({facetId}) => this.bindings.store.state.facets[facetId])\n      .map(({value, facetId, field}) => ({\n        facetId,\n        label: this.bindings.store.state.facets[facetId]?.label(),\n        state: value.value.state,\n        deselect: value.deselect,\n        formattedValue: [\n          getFieldValueCaption(field, value.value.value, this.bindings.i18n),\n        ],\n      }));\n  }\n\n  private get categoryFacetBreadcrumbs(): BreadboxBreadcrumb[] {\n    return this.breadcrumbManagerState.categoryFacetBreadcrumbs.map(\n      ({facetId, field, path, deselect}) => ({\n        facetId,\n        label: this.bindings.store.state.categoryFacets[facetId].label(),\n        deselect: deselect,\n        formattedValue: path.map((pathValue) =>\n          getFieldValueCaption(field, pathValue.value, this.bindings.i18n)\n        ),\n      })\n    );\n  }\n\n  private get numericFacetBreadcrumbs(): BreadboxBreadcrumb[] {\n    return this.breadcrumbManagerState.numericFacetBreadcrumbs\n      .map(({facetId, field, values}) =>\n        values.map((value) => ({value, facetId, field}))\n      )\n      .flat()\n      .map(({value, facetId}) => ({\n        facetId,\n        label: this.bindings.store.state.numericFacets[facetId].label(),\n        state: value.value.state,\n        deselect: value.deselect,\n        formattedValue: [\n          this.bindings.store.state.numericFacets[facetId].format(value.value),\n        ],\n        content: this.bindings.store.state.numericFacets[facetId].content?.(\n          value.value\n        ),\n      }));\n  }\n\n  private get dateFacetBreadcrumbs(): BreadboxBreadcrumb[] {\n    return this.breadcrumbManagerState.dateFacetBreadcrumbs\n      .map(({facetId, field, values}) =>\n        values.map((value) => ({value, facetId, field}))\n      )\n      .flat()\n      .map(({value, facetId}) => ({\n        facetId,\n        label: this.bindings.store.state.dateFacets[facetId].label(),\n        state: value.value.state,\n        deselect: value.deselect,\n        formattedValue: [\n          this.bindings.store.state.dateFacets[facetId].format(value.value),\n        ],\n      }));\n  }\n\n  private get automaticFacetBreadcrumbs(): BreadboxBreadcrumb[] {\n    return this.breadcrumbManagerState.automaticFacetBreadcrumbs\n      .flatMap(({facetId, field, label, values}) =>\n        values.map((value) => ({value, facetId, field, label}))\n      )\n      .map(({value, facetId, field, label}) => ({\n        facetId,\n        state: value.value.state,\n        label: label ? label : field,\n        deselect: value.deselect,\n        formattedValue: [\n          getFieldValueCaption(field, value.value.value, this.bindings.i18n),\n        ],\n      }));\n  }\n\n  private get allBreadcrumbs(): BreadboxBreadcrumb[] {\n    return [\n      ...this.facetBreadcrumbs,\n      ...this.categoryFacetBreadcrumbs,\n      ...this.numericFacetBreadcrumbs,\n      ...this.dateFacetBreadcrumbs,\n      ...this.automaticFacetBreadcrumbs,\n    ];\n  }\n\n  private renderBreadcrumbs(allBreadcrumbs: BreadboxBreadcrumb[]) {\n    const sortedBreadcrumbs = allBreadcrumbs.sort((a, b) => {\n      const indexA = this.facetManagerState.facetIds.indexOf(a.facetId);\n      const indexB = this.facetManagerState.facetIds.indexOf(b.facetId);\n      return indexA - indexB;\n    });\n    this.numberOfBreadcrumbs = sortedBreadcrumbs.length;\n\n    return [\n      sortedBreadcrumbs.map((breadcrumb, index) => {\n        const isLastBreadcrumb = this.allBreadcrumbs.length === 1;\n        return (\n          <BreadcrumbButton\n            setRef={(ref) => {\n              if (this.lastRemovedBreadcrumbIndex === index) {\n                this.focusTargets.breadcrumbRemovedFocus.setTarget(ref);\n              }\n              if (this.firstExpandedBreadcrumbIndex === index) {\n                this.focusTargets.breadcrumbShowMoreFocus.setTarget(ref);\n              }\n            }}\n            pathLimit={this.pathLimit}\n            breadcrumb={breadcrumb}\n            onSelectBreadcrumb={() => {\n              if (isLastBreadcrumb) {\n                this.bindings.store.state.resultList?.focusOnFirstResultAfterNextSearch();\n              } else if (this.numberOfBreadcrumbs > 1) {\n                this.focusTargets.breadcrumbRemovedFocus.focusAfterSearch();\n              }\n\n              this.lastRemovedBreadcrumbIndex = index;\n              breadcrumb.deselect();\n            }}\n            i18n={this.bindings.i18n}\n          >\n            <BreadcrumbContent\n              pathLimit={this.pathLimit}\n              isCollapsed={this.isCollapsed}\n              i18n={this.bindings.i18n}\n              breadcrumb={breadcrumb}\n            ></BreadcrumbContent>\n          </BreadcrumbButton>\n        );\n      }),\n    ];\n  }\n\n  public render() {\n    const allBreadcrumbs = this.allBreadcrumbs;\n\n    if (!allBreadcrumbs.length) {\n      return <Hidden></Hidden>;\n    }\n\n    return (\n      <BreadcrumbContainer\n        isCollapsed={this.isCollapsed}\n        i18n={this.bindings.i18n}\n      >\n        {this.renderBreadcrumbs(allBreadcrumbs)}\n        <BreadcrumbShowMore\n          setRef={(el) => {\n            this.showMore = el;\n          }}\n          onShowMore={() => {\n            this.firstExpandedBreadcrumbIndex =\n              this.numberOfBreadcrumbs - this.numberOfCollapsedBreadcrumbs;\n            this.focusTargets.breadcrumbShowMoreFocus.focusOnNextTarget();\n            this.isCollapsed = false;\n          }}\n          isCollapsed={this.isCollapsed}\n          i18n={this.bindings.i18n}\n          numberOfCollapsedBreadcrumbs={this.numberOfCollapsedBreadcrumbs}\n        ></BreadcrumbShowMore>\n        <BreadcrumbShowLess\n          setRef={(el) => {\n            this.showLess = el;\n          }}\n          onShowLess={() => {\n            this.focusTargets.breadcrumbShowLessFocus.focusOnNextTarget();\n            this.isCollapsed = true;\n          }}\n          isCollapsed={this.isCollapsed}\n          i18n={this.bindings.i18n}\n        ></BreadcrumbShowLess>\n        <BreadcrumbClearAll\n          setRef={() => {\n            const isFocusTarget =\n              this.lastRemovedBreadcrumbIndex === this.numberOfBreadcrumbs;\n\n            isFocusTarget\n              ? this.focusTargets.breadcrumbRemovedFocus.setTarget\n              : undefined;\n          }}\n          onClick={async () => {\n            this.breadcrumbManager.deselectAll();\n            this.bindings.store.state.resultList?.focusOnFirstResultAfterNextSearch();\n          }}\n          isCollapsed={this.isCollapsed}\n          i18n={this.bindings.i18n}\n        ></BreadcrumbClearAll>\n      </BreadcrumbContainer>\n    );\n  }\n\n  public componentDidRender() {\n    this.adaptBreadcrumbs();\n  }\n}\n"],"version":3}