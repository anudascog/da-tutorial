{"version":3,"names":["atomicInsightRefineModalCss","AtomicInsightRefineModalStyle0","AtomicInsightRefineModal","this","isOpen","watchEnabled","host","querySelector","append","getClonedFacetElements","bindings","store","getFacetElements","interfaceElement","onAnimationFrame","dimensionChanged","updateDimensions","window","requestAnimationFrame","interfaceDimensions","rectEquals","getBoundingClientRect","initialize","querySummary","buildInsightQuerySummary","engine","breadcrumbManager","buildInsightBreadcrumbManager","renderHeader","h","class","breadcrumbManagerState","hasBreadcrumbs","Button","onClick","deselectAll","style","text","i18n","t","renderBody","length","Hidden","slot","name","render","Host","key","top","left","width","height","RefineModal","onClose","numberOfItems","querySummaryState","total","title","openButton","scope","componentDidLoad","display","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/insight/atomic-insight-refine-modal/atomic-insight-refine-modal.pcss?tag=atomic-insight-refine-modal&encapsulation=shadow","src/components/insight/atomic-insight-refine-modal/atomic-insight-refine-modal.tsx"],"sourcesContent":["@import '../../common/refine-modal/refine-modal-common.pcss';\n","import {\n  QuerySummary as InsightQuerySummary,\n  QuerySummaryState as InsightQuerySummaryState,\n  buildQuerySummary as buildInsightQuerySummary,\n  BreadcrumbManager as InsightBreadcrumbManager,\n  BreadcrumbManagerState as InsightBreadcrumbManagerState,\n  buildBreadcrumbManager as buildInsightBreadcrumbManager,\n} from '@coveo/headless/insight';\nimport {Component, h, State, Prop, Element, Watch, Host} from '@stencil/core';\nimport {rectEquals} from '../../../utils/dom-utils';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {\n  getClonedFacetElements,\n  RefineModal,\n} from '../../common/refine-modal/modal';\nimport {Button} from '../../common/stencil-button';\nimport {Hidden} from '../../common/stencil-hidden';\nimport {InsightBindings} from '../atomic-insight-interface/atomic-insight-interface';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-insight-refine-modal',\n  styleUrl: 'atomic-insight-refine-modal.pcss',\n  shadow: true,\n})\nexport class AtomicInsightRefineModal\n  implements InitializableComponent<InsightBindings>\n{\n  @InitializeBindings() public bindings!: InsightBindings;\n  @Element() public host!: HTMLElement;\n\n  @BindStateToController('querySummary')\n  @State()\n  public querySummaryState!: InsightQuerySummaryState;\n\n  @BindStateToController('breadcrumbManager')\n  @State()\n  public breadcrumbManagerState!: InsightBreadcrumbManagerState;\n\n  @State()\n  public error!: Error;\n\n  @State()\n  public interfaceDimensions?: DOMRect;\n\n  @Prop({mutable: true}) openButton?: HTMLElement;\n\n  @Prop({reflect: true, mutable: true}) isOpen = false;\n\n  public querySummary!: InsightQuerySummary;\n  private breadcrumbManager!: InsightBreadcrumbManager;\n\n  @Watch('isOpen')\n  watchEnabled(isOpen: boolean) {\n    if (isOpen) {\n      if (!this.host.querySelector('div[slot=\"facets\"]')) {\n        this.host.append(\n          getClonedFacetElements(\n            this.bindings.store.getFacetElements(),\n            0,\n            this.bindings.interfaceElement\n          )\n        );\n      }\n      this.onAnimationFrame();\n    }\n  }\n\n  private onAnimationFrame() {\n    if (!this.isOpen) {\n      return;\n    }\n    if (this.dimensionChanged()) {\n      this.updateDimensions();\n    }\n    window.requestAnimationFrame(() => this.onAnimationFrame());\n  }\n\n  private dimensionChanged() {\n    if (!this.interfaceDimensions) {\n      return true;\n    }\n\n    return !rectEquals(\n      this.interfaceDimensions,\n      this.bindings.interfaceElement.getBoundingClientRect()\n    );\n  }\n\n  public updateDimensions() {\n    this.interfaceDimensions =\n      this.bindings.interfaceElement.getBoundingClientRect();\n  }\n\n  public initialize() {\n    this.querySummary = buildInsightQuerySummary(this.bindings.engine);\n    this.breadcrumbManager = buildInsightBreadcrumbManager(\n      this.bindings.engine\n    );\n  }\n\n  private renderHeader() {\n    return (\n      <div class=\"mb-3 flex w-full justify-between\">\n        {this.breadcrumbManagerState.hasBreadcrumbs && (\n          <Button\n            onClick={() => this.breadcrumbManager.deselectAll()}\n            style=\"text-primary\"\n            text={this.bindings.i18n.t('clear-all-filters')}\n            class=\"px-2 py-1\"\n          ></Button>\n        )}\n      </div>\n    );\n  }\n\n  private renderBody() {\n    if (!this.bindings.store.getFacetElements().length) {\n      return <Hidden></Hidden>;\n    }\n\n    return (\n      <aside slot=\"body\" class=\"adjust-for-scroll-bar flex w-full flex-col\">\n        {this.renderHeader()}\n        <slot name=\"facets\"></slot>\n      </aside>\n    );\n  }\n\n  public render() {\n    return (\n      <Host>\n        {this.interfaceDimensions && (\n          <style>\n            {`atomic-modal::part(backdrop) {\n            top: ${this.interfaceDimensions.top}px;\n            left: ${this.interfaceDimensions.left}px;\n            width: ${this.interfaceDimensions.width}px;\n            height: ${this.interfaceDimensions.height}px;\n            }`}\n          </style>\n        )}\n        <RefineModal\n          i18n={this.bindings.i18n}\n          host={this.host}\n          isOpen={this.isOpen}\n          onClose={() => (this.isOpen = false)}\n          numberOfItems={this.querySummaryState.total}\n          title={this.bindings.i18n.t('filters')}\n          openButton={this.openButton}\n          scope={this.bindings.interfaceElement}\n        >\n          {this.renderBody()}\n        </RefineModal>\n      </Host>\n    );\n  }\n\n  public componentDidLoad() {\n    this.host.style.display = '';\n  }\n}\n"],"mappings":"slBAAA,MAAMA,EAA8B,k/0DACpC,MAAAC,EAAeD,E,iXC8BFE,EAAwB,M,yBAsBGC,KAAAC,OAAS,M,qKAAA,K,CAM/C,YAAAC,CAAaD,GACX,GAAIA,EAAQ,CACV,IAAKD,KAAKG,KAAKC,cAAc,sBAAuB,CAClDJ,KAAKG,KAAKE,OACRC,EACEN,KAAKO,SAASC,MAAMC,mBACpB,EACAT,KAAKO,SAASG,kB,CAIpBV,KAAKW,kB,EAID,gBAAAA,GACN,IAAKX,KAAKC,OAAQ,CAChB,M,CAEF,GAAID,KAAKY,mBAAoB,CAC3BZ,KAAKa,kB,CAEPC,OAAOC,uBAAsB,IAAMf,KAAKW,oB,CAGlC,gBAAAC,GACN,IAAKZ,KAAKgB,oBAAqB,CAC7B,OAAO,I,CAGT,OAAQC,EACNjB,KAAKgB,oBACLhB,KAAKO,SAASG,iBAAiBQ,wB,CAI5B,gBAAAL,GACLb,KAAKgB,oBACHhB,KAAKO,SAASG,iBAAiBQ,uB,CAG5B,UAAAC,GACLnB,KAAKoB,aAAeC,EAAyBrB,KAAKO,SAASe,QAC3DtB,KAAKuB,kBAAoBC,EACvBxB,KAAKO,SAASe,O,CAIV,YAAAG,GACN,OACEC,EAAA,OAAKC,MAAM,oCACR3B,KAAK4B,uBAAuBC,gBAC3BH,EAACI,EAAM,CACLC,QAAS,IAAM/B,KAAKuB,kBAAkBS,cACtCC,MAAM,eACNC,KAAMlC,KAAKO,SAAS4B,KAAKC,EAAE,qBAC3BT,MAAM,c,CAOR,UAAAU,GACN,IAAKrC,KAAKO,SAASC,MAAMC,mBAAmB6B,OAAQ,CAClD,OAAOZ,EAACa,EAAM,K,CAGhB,OACEb,EAAA,SAAOc,KAAK,OAAOb,MAAM,8CACtB3B,KAAKyB,eACNC,EAAA,QAAMe,KAAK,W,CAKV,MAAAC,GACL,OACEhB,EAACiB,EAAI,CAAAC,IAAA,4CACF5C,KAAKgB,qBACJU,EAAA,SAAAkB,IAAA,4CACG,oDACM5C,KAAKgB,oBAAoB6B,6BACxB7C,KAAKgB,oBAAoB8B,+BACxB9C,KAAKgB,oBAAoB+B,iCACxB/C,KAAKgB,oBAAoBgC,4BAIvCtB,EAACuB,EAAW,CAAAL,IAAA,2CACVT,KAAMnC,KAAKO,SAAS4B,KACpBhC,KAAMH,KAAKG,KACXF,OAAQD,KAAKC,OACbiD,QAAS,IAAOlD,KAAKC,OAAS,MAC9BkD,cAAenD,KAAKoD,kBAAkBC,MACtCC,MAAOtD,KAAKO,SAAS4B,KAAKC,EAAE,WAC5BmB,WAAYvD,KAAKuD,WACjBC,MAAOxD,KAAKO,SAASG,kBAEpBV,KAAKqC,c,CAMP,gBAAAoB,GACLzD,KAAKG,KAAK8B,MAAMyB,QAAU,E,mFAnICC,EAAA,CAA5BC,K,+BAKMD,EAAA,CAFNE,EAAsB,iB,wCAMhBF,EAAA,CAFNE,EAAsB,sB","ignoreList":[]}