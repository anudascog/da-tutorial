{"file":"item-template-provider-2499fe9d.js","mappings":";;;;;MAQa,oBAAqB,SAAQA,iCAAwB;IAChE,YACE,KAA8D,EACtD,kBAA+B;QAEvC,KAAK,CAAC,KAAK,EAAE,MAAMC,oCAA2B,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;QAF/D,uBAAkB,GAAlB,kBAAkB,CAAa;KAGxC;;IAGS,mBAAmB;QAK3B,MAAM,OAAO,GAAG,QAAQ,CAAC,sBAAsB,EAAE,CAAC;QAClD,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;QAC5D,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAE5B,MAAM,WAAW,GAAG,QAAQ,CAAC,sBAAsB,EAAE,CAAC;QACtD,MAAM,UAAU,GAAG;;QAEf,IAAI,CAAC,kBAAkB,GAAG,gCAAgC,IAAI,CAAC,kBAAkB,QAAQ,GAAG,EAAE;;KAEjG,CAAC;QACF,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QACxD,YAAY,CAAC,SAAS,GAAG,UAAU,CAAC,IAAI,EAAE,CAAC;QAC3C,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QAC9C,OAAO;YACL,OAAO;YACP,WAAW;YACX,UAAU,EAAE,EAAE;SACf,CAAC;KACH;;;;;","names":["TemplateProvider","buildResultTemplatesManager"],"sources":["src/components/common/item-list/item-template-provider.ts"],"sourcesContent":["import {Result, Template, buildResultTemplatesManager} from '@coveo/headless';\nimport {AnyBindings} from '../interface/bindings';\nimport {ItemTarget} from '../layout/display-options';\nimport {\n  TemplateProvider,\n  TemplateProviderProps,\n} from '../template-provider/template-provider';\n\nexport class ItemTemplateProvider extends TemplateProvider<Result> {\n  constructor(\n    props: TemplateProviderProps<Result> & {bindings: AnyBindings},\n    private gridCellLinkTarget?: ItemTarget\n  ) {\n    super(props, () => buildResultTemplatesManager(props.bindings.engine));\n  }\n\n  // TODO: Add JSX support for default template\n  protected makeDefaultTemplate(): Template<\n    Result,\n    DocumentFragment,\n    DocumentFragment\n  > {\n    const content = document.createDocumentFragment();\n    const linkEl = document.createElement('atomic-result-link');\n    content.appendChild(linkEl);\n\n    const linkContent = document.createDocumentFragment();\n    const linkMarkup = `\n      <atomic-result-link>\n      ${this.gridCellLinkTarget ? `<a slot=\"attributes\" target=\"${this.gridCellLinkTarget}\"></a>` : ''}\n      </atomic-result-link>\n    `;\n    const linkTemplate = document.createElement('template');\n    linkTemplate.innerHTML = linkMarkup.trim();\n    linkContent.appendChild(linkTemplate.content);\n    return {\n      content,\n      linkContent,\n      conditions: [],\n    };\n  }\n}\n"],"version":3}