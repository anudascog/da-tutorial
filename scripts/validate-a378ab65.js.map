{"file":"validate-a378ab65.js","mappings":";;;;;MAea,OAAO,GAAsC,CAAC,EACzD,KAAK,EACL,SAAS,EACT,QAAQ,EACR,OAAO,EACP,IAAI,EACJ,gBAAgB,EAChB,WAAW,EACX,iCAAiC,EACjC,oBAAoB,GACrB;IACC,MAAM,oCAAoC,GAAG,CAAC,MAAc;QAC1D,IAAI,MAAM,GAAG,QAAQ,EAAE;YACrB,iCAAiC,EAAE,EAAE,IAAI,CAAC,MAAM,gBAAgB,EAAE,CAAC,CAAC;SACrE;aAAM,IAAI,MAAM,GAAG,QAAQ,EAAE;YAC5B,oBAAoB,EAAE,CAAC;SACxB;KACF,CAAC;IAEF,QACEA,iBACE,IAAI,EAAC,SAAS,EACd,IAAI,EAAC,YAAY,gBACL,KAAK,EACjB,KAAK,EAAC,sBAAsB,IAE3B,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM;QAClB,MAAM,UAAU,GAAG,QAAQ,KAAK,MAAM,CAAC;QACvC,MAAM,KAAK,GAAG,CAAC,QAAQ,CAAC,CAAC;QACzB,IAAI,UAAU,EAAE;YACd,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SAC7B;QACD,MAAM,IAAI,GAAG,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QACzC,QACEA,QAACC,8BAAW,IACV,GAAG,EAAE,QAAQ,EACb,SAAS,EAAE,SAAS,EACpB,KAAK,EAAC,iBAAiB,EACvB,OAAO,EAAE,UAAU,EACnB,SAAS,EAAE,IAAI,EACf,SAAS,EAAE;gBACT,oCAAoC,CAAC,MAAM,CAAC,CAAC;gBAC7C,WAAW,CAAC,MAAM,CAAC,CAAC;aACrB,EACD,KAAK,EAAC,yCAAyC,EAC/C,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EACrB,IAAI,EAAE,IAAI,EACV,iBAAiB,EAAE,KAAK,GACX,EACf;KACH,CAAC,CACE,EACN;AACJ;;MCpEa,gBAAiB,SAAQ,KAAK;IACzC,YAAY,MAAc;QACxB,KAAK,CACH,qBAAqB,MAAM,uDAAuD,CACnF,CAAC;QACF,IAAI,CAAC,IAAI,GAAG,kBAAkB,CAAC;KAChC;CACF;MAEY,8BAA+B,SAAQ,KAAK;IACvD,YAAY,aAAqB,EAAE,OAAiB;QAClD,KAAK,CACH,6BAA6B,aAAa,oCAAoC,OAAO,GAAG,CACzF,CAAC;QACF,IAAI,CAAC,IAAI,GAAG,gCAAgC,CAAC;KAC9C;;;MCbU,KAAK,GAAwB,CAAC,CAAC,EAAE,QAAQ;IACpD,QACED,kBACE,IAAI,EAAC,OAAO,EACZ,KAAK,EAAC,uDAAuD,iBACjD,MAAM,IAEjB,QAAQ,CACJ,EACP;AACJ;;SCVgB,uBAAuB,CAAC,OAAe;IACrD,OAAO,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM;QACnC,MAAM,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;QACtC,IAAI,KAAK,CAAC,YAAY,CAAC,EAAE;YACvB,MAAM,IAAI,gBAAgB,CAAC,MAAM,CAAC,CAAC;SACpC;QAED,OAAO,YAAY,CAAC;KACrB,CAAC,CAAC;AACL,CAAC;SAEe,qBAAqB,CACnC,aAAqB,EACrB,OAAiB;IAEjB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;QACpC,MAAM,IAAI,8BAA8B,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;KAClE;IAED,OAAO,aAAa,CAAC;AACvB;;;;;;;;;","names":["h","RadioButton"],"sources":["src/components/common/items-per-page/choices.tsx","src/components/common/items-per-page/error.ts","src/components/common/items-per-page/label.tsx","src/components/common/items-per-page/validate.ts"],"sourcesContent":["import {FunctionalComponent, h} from '@stencil/core';\nimport {RadioButton} from '../stencil-radio-button';\n\ninterface ChoicesProps {\n  label: string;\n  groupName: string;\n  pageSize: number;\n  choices: number[];\n  lang: string;\n  scrollToTopEvent: () => {};\n  setItemSize: (size: number) => void;\n  focusOnFirstResultAfterNextSearch: () => Promise<void> | undefined;\n  focusOnNextNewResult: () => void | undefined;\n}\n\nexport const Choices: FunctionalComponent<ChoicesProps> = ({\n  label,\n  groupName,\n  pageSize,\n  choices,\n  lang,\n  scrollToTopEvent,\n  setItemSize,\n  focusOnFirstResultAfterNextSearch,\n  focusOnNextNewResult,\n}) => {\n  const focusOnProperResultDependingOnChoice = (choice: number) => {\n    if (choice < pageSize) {\n      focusOnFirstResultAfterNextSearch()?.then(() => scrollToTopEvent());\n    } else if (choice > pageSize) {\n      focusOnNextNewResult();\n    }\n  };\n\n  return (\n    <div\n      part=\"buttons\"\n      role=\"radiogroup\"\n      aria-label={label}\n      class=\"flex flex-wrap gap-2\"\n    >\n      {choices.map((choice) => {\n        const isSelected = pageSize === choice;\n        const parts = ['button'];\n        if (isSelected) {\n          parts.push('active-button');\n        }\n        const text = choice.toLocaleString(lang);\n        return (\n          <RadioButton\n            key={'choice'}\n            groupName={groupName}\n            style=\"outline-neutral\"\n            checked={isSelected}\n            ariaLabel={text}\n            onChecked={() => {\n              focusOnProperResultDependingOnChoice(choice);\n              setItemSize(choice);\n            }}\n            class=\"btn-page focus-visible:bg-neutral-light\"\n            part={parts.join(' ')}\n            text={text}\n            selectWhenFocused={false}\n          ></RadioButton>\n        );\n      })}\n    </div>\n  );\n};\n","export class ChoiceIsNaNError extends Error {\n  constructor(choice: string) {\n    super(\n      `The choice value \"${choice}\" from the \"choicesDisplayed\" option is not a number.`\n    );\n    this.name = 'ChoiceIsNaNError';\n  }\n}\n\nexport class InitialChoiceNotInChoicesError extends Error {\n  constructor(initialChoice: number, choices: number[]) {\n    super(\n      `The initial choice value \"${initialChoice}\" is not included in the choices ${choices}.`\n    );\n    this.name = 'InitialChoiceNotInChoicesError';\n  }\n}\n","import {FunctionalComponent, h} from '@stencil/core';\n\nexport const Label: FunctionalComponent = (_, children) => {\n  return (\n    <span\n      part=\"label\"\n      class=\"text-on-background mr-3 self-start text-lg leading-10\"\n      aria-hidden=\"true\"\n    >\n      {children}\n    </span>\n  );\n};\n","import {ChoiceIsNaNError, InitialChoiceNotInChoicesError} from './error';\n\nexport function convertChoicesToNumbers(choices: string) {\n  return choices.split(',').map((choice) => {\n    const parsedChoice = parseInt(choice);\n    if (isNaN(parsedChoice)) {\n      throw new ChoiceIsNaNError(choice);\n    }\n\n    return parsedChoice;\n  });\n}\n\nexport function validateInitialChoice(\n  initialChoice: number,\n  choices: number[]\n): number {\n  if (!choices.includes(initialChoice)) {\n    throw new InitialChoiceNotInChoicesError(initialChoice, choices);\n  }\n\n  return initialChoice;\n}\n"],"version":3}