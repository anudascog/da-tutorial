{"file":"atomic-results-per-page.entry.cjs.js","mappings":"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","names":["randomID","convertChoicesToNumbers","validateInitialChoice","ChoiceIsNaNError","InitialChoiceNotInChoicesError","buildSearchStatus","buildResultsPerPage","createAppLoadedListener","h","PagerGuard","Label","FieldsetGroup","Choices","InitializeBindings","BindStateToController"],"sources":["src/components/search/atomic-results-per-page/atomic-results-per-page.pcss?tag=atomic-results-per-page&encapsulation=shadow","src/components/search/atomic-results-per-page/atomic-results-per-page.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n","import {\n  ResultsPerPage,\n  buildResultsPerPage,\n  ResultsPerPageState,\n  buildSearchStatus,\n  SearchStatus,\n  SearchStatusState,\n} from '@coveo/headless';\nimport {Component, Event, EventEmitter, h, Prop, State} from '@stencil/core';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {randomID} from '../../../utils/utils';\nimport {createAppLoadedListener} from '../../common/interface/store';\nimport {Choices} from '../../common/items-per-page/choices';\nimport {\n  ChoiceIsNaNError,\n  InitialChoiceNotInChoicesError,\n} from '../../common/items-per-page/error';\nimport {Label} from '../../common/items-per-page/label';\nimport {\n  convertChoicesToNumbers,\n  validateInitialChoice,\n} from '../../common/items-per-page/validate';\nimport {PagerGuard} from '../../common/pager/stencil-pager-guard';\nimport {FieldsetGroup} from '../../common/stencil-fieldset-group';\nimport {Bindings} from '../atomic-search-interface/atomic-search-interface';\n\n/**\n * The `atomic-results-per-page` component determines how many results to display per page.\n *\n * @part label - The \"Results per page\" label.\n * @part buttons - The list of buttons.\n * @part button - The result per page button.\n * @part active-button - The active result per page button.\n */\n@Component({\n  tag: 'atomic-results-per-page',\n  styleUrl: 'atomic-results-per-page.pcss',\n  shadow: true,\n})\nexport class AtomicResultsPerPage implements InitializableComponent {\n  @InitializeBindings() public bindings!: Bindings;\n  private resultPerPage!: ResultsPerPage;\n  public searchStatus!: SearchStatus;\n  private choices!: number[];\n  private readonly radioGroupName = randomID('atomic-results-per-page-');\n\n  @State()\n  @BindStateToController('resultPerPage')\n  public resultPerPageState!: ResultsPerPageState;\n  @BindStateToController('searchStatus')\n  @State()\n  private searchStatusState!: SearchStatusState;\n  @State() public error!: Error;\n  @State() private isAppLoaded = false;\n\n  /**\n   * A list of choices for the number of results to display per page, separated by commas.\n   */\n  @Prop({reflect: true}) choicesDisplayed = '10,25,50,100';\n  /**\n   * The initial selection for the number of result per page. This should be part of the `choicesDisplayed` option. By default, this is set to the first value in `choicesDisplayed`.\n   * @type {number}\n   */\n  @Prop({mutable: true, reflect: true}) initialChoice?: number;\n\n  @Event({\n    eventName: 'atomic/scrollToTop',\n  })\n  private scrollToTopEvent!: EventEmitter;\n\n  public initialize() {\n    try {\n      this.choices = convertChoicesToNumbers(this.choicesDisplayed);\n      this.initialChoice = this.initialChoice ?? this.choices[0];\n      validateInitialChoice(this.initialChoice, this.choices);\n    } catch (error) {\n      if (\n        error instanceof ChoiceIsNaNError ||\n        error instanceof InitialChoiceNotInChoicesError\n      ) {\n        this.bindings.engine.logger.error(error.message, this);\n        throw error;\n      }\n    }\n\n    this.searchStatus = buildSearchStatus(this.bindings.engine);\n    this.resultPerPage = buildResultsPerPage(this.bindings.engine, {\n      initialState: {numberOfResults: this.initialChoice},\n    });\n    createAppLoadedListener(this.bindings.store, (isAppLoaded) => {\n      this.isAppLoaded = isAppLoaded;\n    });\n  }\n\n  private get label() {\n    return this.bindings.i18n.t('results-per-page');\n  }\n\n  public render() {\n    return (\n      <PagerGuard\n        hasError={this.searchStatusState.hasError}\n        hasItems={this.searchStatusState.hasResults}\n        isAppLoaded={this.isAppLoaded}\n      >\n        <div class=\"flex items-center\" role=\"toolbar\" aria-label={this.label}>\n          <Label>{this.label}</Label>\n          <FieldsetGroup label={this.label}>\n            <Choices\n              label={this.label}\n              groupName={this.radioGroupName}\n              pageSize={this.resultPerPageState.numberOfResults}\n              choices={this.choices}\n              lang={this.bindings.i18n.language}\n              scrollToTopEvent={this.scrollToTopEvent.emit}\n              setItemSize={this.resultPerPage.set}\n              focusOnFirstResultAfterNextSearch={() =>\n                this.bindings.store.state.resultList?.focusOnFirstResultAfterNextSearch()\n              }\n              focusOnNextNewResult={() =>\n                this.bindings.store.state.resultList?.focusOnNextNewResult()\n              }\n            ></Choices>\n          </FieldsetGroup>\n        </div>\n      </PagerGuard>\n    );\n  }\n}\n"],"version":3}