{"version":3,"names":["atomicGeneratedAnswerFeedbackModalCss","AtomicGeneratedAnswerFeedbackModalStyle0","AtomicGeneratedAnswerFeedbackModal","this","isOpen","helpful","currentAnswer","getInitialAnswerState","feedbackSubmitted","answerEvaluationRequired","formId","randomID","updateBreakpoints","once","host","isAnyAnswerEvaluationUndefined","Object","values","some","value","undefined","watchToggleOpen","generatedAnswer","openFeedbackModal","documented","correctTopic","hallucinationFree","readable","resetState","clearInputRefs","detailsInputRef","linkInputRef","close","closeFeedbackModal","setCurrentAnswer","key","sendFeedback","feedback","feedbackSent","emit","handleSubmit","e","preventDefault","renderHeader","h","slot","part","class","bindings","i18n","t","IconButton","style","onClick","icon","CloseIcon","partPrefix","ariaLabel","renderFeedbackOption","option","correspondingAnswer","buttonClasses","isSelected","push","RadioButton","String","groupName","checked","onChecked","join","text","renderAnswerEvaluation","label","labelClasses","isRequired","renderOptions","options","map","localeKey","FieldsetGroup","renderLinkToCorrectAnswerField","type","ref","placeholder","onChange","currentTarget","renderAddNotesField","name","detailsInput","rows","renderFeedbackForm","id","onSubmit","renderSuccessMessage","Success","renderBody","renderFeedbackFormFooter","Button","form","renderSuccessFormFooter","renderFooter","render","fullscreen","container","exportparts","ATOMIC_MODAL_EXPORT_PARTS","__decorate","InitializeBindings"],"sources":["src/components/common/generated-answer/atomic-generated-answer-feedback/atomic-generated-answer-feedback-modal.pcss?tag=atomic-generated-answer-feedback-modal&encapsulation=shadow","src/components/common/generated-answer/atomic-generated-answer-feedback/atomic-generated-answer-feedback-modal.tsx"],"sourcesContent":["@import '../../../../global/global.pcss';\n\n@utility mobile-feedback-modal {\n  &::part(container) {\n    @apply w-auto min-w-full;\n  }\n\n  &::part(header),\n  &::part(body),\n  &::part(footer) {\n    @apply max-w-full;\n  }\n  [part='buttons'] {\n    .required-label {\n      @apply text-sm;\n    }\n  }\n  [part='form'] {\n    .answer-evaluation {\n      @apply block;\n    }\n\n    .options {\n      @apply mt-2;\n    }\n  }\n  [part='modal-header'] {\n    .hide {\n      @apply hidden;\n    }\n  }\n}\n\n[part='generated-answer-feedback-modal'] {\n  &::part(container) {\n    @apply min-w-170;\n  }\n\n  &::part(header),\n  &::part(body),\n  &::part(footer) {\n    @apply max-w-170;\n  }\n\n  @media not all and (width >= theme(--breakpoint-desktop)) {\n    @apply mobile-feedback-modal;\n  }\n}\n\n[part='form'] {\n  .active {\n    @apply border-primary-light text-primary-light bg-primary-background;\n  }\n  .text-error-red {\n    @apply text-inline-code;\n  }\n  .required {\n    @apply flex;\n  }\n}\n","import {\n  GeneratedAnswer,\n  GeneratedAnswerFeedback,\n  GeneratedAnswerFeedbackOption,\n} from '@coveo/headless';\nimport {\n  Component,\n  State,\n  h,\n  Watch,\n  Prop,\n  Element,\n  Event,\n  EventEmitter,\n} from '@stencil/core/internal';\nimport CloseIcon from '../../../../images/close.svg';\nimport Success from '../../../../images/success.svg';\nimport {\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {updateBreakpoints} from '../../../../utils/replace-breakpoint';\nimport {once, randomID} from '../../../../utils/utils';\nimport {ATOMIC_MODAL_EXPORT_PARTS} from '../../atomic-modal/export-parts';\nimport {IconButton} from '../../iconButton';\nimport {AnyBindings} from '../../interface/bindings';\nimport {Button} from '../../stencil-button';\nimport {FieldsetGroup} from '../../stencil-fieldset-group';\nimport {RadioButton} from '../../stencil-radio-button';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-generated-answer-feedback-modal',\n  styleUrl: 'atomic-generated-answer-feedback-modal.pcss',\n  shadow: true,\n})\nexport class AtomicGeneratedAnswerFeedbackModal\n  implements InitializableComponent<AnyBindings>\n{\n  @InitializeBindings() public bindings!: AnyBindings;\n  @Element() public host!: HTMLElement;\n\n  /**\n   * Indicates whether the modal is open.\n   */\n  @Prop({reflect: true, mutable: true}) isOpen = false;\n  /**\n   * A `GeneratedAnswer` controller instance. It is used when the user interacts with the modal.\n   */\n  @Prop({reflect: true, mutable: true}) generatedAnswer!: GeneratedAnswer;\n  /**\n   * Indicates whether the answer was helpful or not.\n   */\n  @Prop({reflect: true, mutable: true}) helpful = false;\n\n  @State() public error!: Error;\n  @State() private currentAnswer: Partial<GeneratedAnswerFeedback> =\n    this.getInitialAnswerState();\n  @State() feedbackSubmitted: boolean = false;\n  @State() answerEvaluationRequired: boolean = false;\n\n  private readonly formId = randomID(\n    'atomic-generated-answer-feedback-modal-form-'\n  );\n  private detailsInputRef?: HTMLTextAreaElement;\n\n  private linkInputRef?: HTMLInputElement;\n\n  @Event() feedbackSent!: EventEmitter;\n\n  @Watch('isOpen')\n  watchToggleOpen(isOpen: boolean) {\n    if (isOpen) {\n      this.generatedAnswer.openFeedbackModal();\n    }\n  }\n\n  private static options: {\n    localeKey: string;\n    correspondingAnswer: keyof GeneratedAnswerFeedback;\n  }[] = [\n    {\n      localeKey: 'feedback-correct-topic',\n      correspondingAnswer: 'correctTopic',\n    },\n    {\n      localeKey: 'feedback-hallucination-free',\n      correspondingAnswer: 'hallucinationFree',\n    },\n    {\n      localeKey: 'feedback-documented',\n      correspondingAnswer: 'documented',\n    },\n    {\n      localeKey: 'feedback-readable',\n      correspondingAnswer: 'readable',\n    },\n  ];\n\n  private getInitialAnswerState(): Partial<GeneratedAnswerFeedback> {\n    return {\n      documented: undefined,\n      correctTopic: undefined,\n      hallucinationFree: undefined,\n      readable: undefined,\n    };\n  }\n\n  private resetState() {\n    this.feedbackSubmitted = false;\n    this.currentAnswer = this.getInitialAnswerState();\n    this.answerEvaluationRequired = false;\n    this.isOpen = false;\n  }\n\n  private clearInputRefs() {\n    if (this.detailsInputRef) {\n      this.detailsInputRef.value = '';\n    }\n    if (this.linkInputRef) {\n      this.linkInputRef.value = '';\n    }\n  }\n\n  private close() {\n    this.clearInputRefs();\n    this.resetState();\n    this.generatedAnswer.closeFeedbackModal();\n  }\n\n  private updateBreakpoints = once(() => updateBreakpoints(this.host));\n\n  private setCurrentAnswer(\n    key: keyof GeneratedAnswerFeedback,\n    value: GeneratedAnswerFeedbackOption | string\n  ) {\n    this.currentAnswer = {\n      ...this.currentAnswer,\n      [key]: value,\n    };\n  }\n\n  public sendFeedback() {\n    const feedback: GeneratedAnswerFeedback = {\n      ...(this.currentAnswer as GeneratedAnswerFeedback),\n      helpful: this.helpful,\n    };\n    this.generatedAnswer.sendFeedback(feedback);\n    this.feedbackSent.emit();\n  }\n\n  private isAnyAnswerEvaluationUndefined = () => {\n    return Object.values(this.currentAnswer).some(\n      (value) => value === undefined\n    );\n  };\n\n  private handleSubmit(e: Event) {\n    e.preventDefault();\n    if (this.isAnyAnswerEvaluationUndefined()) {\n      this.answerEvaluationRequired = true;\n      return;\n    }\n    this.feedbackSubmitted = true;\n    this.answerEvaluationRequired = false;\n    this.sendFeedback();\n  }\n\n  private renderHeader() {\n    return (\n      <div\n        slot=\"header\"\n        part=\"modal-header\"\n        class=\"flex w-full items-center justify-between\"\n      >\n        <h1>\n          <span>{this.bindings.i18n.t('feedback-modal-title')}</span>\n          <span class=\"hide ml-0.5\">\n            {this.bindings.i18n.t('additional-feedback')}\n          </span>\n        </h1>\n        <IconButton\n          style=\"text-transparent\"\n          class=\"search-clear-button\"\n          onClick={() => this.close()}\n          icon={CloseIcon}\n          partPrefix={'close'}\n          ariaLabel={this.bindings.i18n.t('close')}\n        />\n      </div>\n    );\n  }\n\n  private renderFeedbackOption(\n    option: GeneratedAnswerFeedbackOption,\n    correspondingAnswer: keyof GeneratedAnswerFeedback\n  ) {\n    const buttonClasses = [\n      'min-w-20',\n      'flex',\n      'items-center',\n      'justify-center',\n      'px-3',\n      'py-1.5',\n      'mr-1',\n      'text-neutral-dark',\n    ];\n    const isSelected = this.currentAnswer[correspondingAnswer] === option;\n\n    if (isSelected) {\n      buttonClasses.push('active');\n    }\n    return (\n      <RadioButton\n        key={String(correspondingAnswer)}\n        groupName={this.bindings.i18n.t(correspondingAnswer)}\n        style=\"outline-neutral\"\n        checked={isSelected}\n        aria-checked={isSelected}\n        onChecked={() => {\n          this.setCurrentAnswer(correspondingAnswer, option);\n        }}\n        class={buttonClasses.join(' ')}\n        text={this.bindings.i18n.t(option)}\n      ></RadioButton>\n    );\n  }\n\n  private renderAnswerEvaluation(\n    label: string,\n    correspondingAnswer: keyof GeneratedAnswerFeedback\n  ) {\n    const labelClasses = ['text-error-red', 'text-sm', 'hidden'];\n    const isRequired =\n      this.answerEvaluationRequired &&\n      this.currentAnswer[correspondingAnswer] === undefined;\n    if (isRequired) {\n      labelClasses.push('required');\n    }\n    return (\n      <div class=\"block\">\n        <div class=\"flex\">\n          <label class=\"text-base\">\n            {this.bindings.i18n.t(label)}\n            <span class=\"text-error-red ml-0.5\">*</span>\n          </label>\n        </div>\n        <span class={labelClasses.join(' ')}>\n          {this.bindings.i18n.t('required-fields-error')}\n        </span>\n      </div>\n    );\n  }\n\n  private renderOptions() {\n    return (\n      <fieldset>\n        <legend class=\"font-bold\">\n          {this.bindings.i18n.t('answer-evaluation')}\n        </legend>\n        {AtomicGeneratedAnswerFeedbackModal.options.map(\n          ({localeKey, correspondingAnswer}) => (\n            <FieldsetGroup label={this.bindings.i18n.t(localeKey)}>\n              <div\n                class={`answer-evaluation mt-3 flex items-center justify-between ${String(correspondingAnswer)}`}\n                key={String(correspondingAnswer)}\n              >\n                {this.renderAnswerEvaluation(localeKey, correspondingAnswer)}\n                <div\n                  class=\"options flex text-base\"\n                  aria-label={this.bindings.i18n.t(localeKey)}\n                >\n                  {this.renderFeedbackOption('yes', correspondingAnswer)}\n                  {this.renderFeedbackOption('unknown', correspondingAnswer)}\n                  {this.renderFeedbackOption('no', correspondingAnswer)}\n                </div>\n              </div>\n            </FieldsetGroup>\n          )\n        )}\n      </fieldset>\n    );\n  }\n\n  private renderLinkToCorrectAnswerField() {\n    return (\n      <fieldset>\n        <legend class=\"font-bold\">\n          {this.bindings.i18n.t('generated-answer-feedback-link')}\n        </legend>\n        <input\n          type=\"text\"\n          ref={(linkInputRef) => (this.linkInputRef = linkInputRef)}\n          placeholder=\"https://URL\"\n          class=\"input-primary placeholder-neutral-dark mt-4 h-9 w-full rounded-md px-4\"\n          onChange={(e) =>\n            this.setCurrentAnswer(\n              'documentUrl',\n              (e.currentTarget as HTMLInputElement).value\n            )\n          }\n        />\n      </fieldset>\n    );\n  }\n\n  private renderAddNotesField() {\n    return (\n      <fieldset>\n        <legend class=\"mt-8 font-bold\">\n          {this.bindings.i18n.t('generated-answer-additional-notes')}\n        </legend>\n        <textarea\n          name=\"answer-details\"\n          ref={(detailsInput) => (this.detailsInputRef = detailsInput)}\n          class=\"placeholder-neutral-dark border-neutral hover:border-primary-light focus-visible:border-primary mt-4 w-full resize-none rounded-md border px-4 py-2 leading-5 focus:outline-hidden focus-visible:ring-2\"\n          rows={4}\n          placeholder={this.bindings.i18n.t('add-notes')}\n          onChange={(e) =>\n            this.setCurrentAnswer(\n              'details',\n              (e.currentTarget as HTMLTextAreaElement).value\n            )\n          }\n        ></textarea>\n      </fieldset>\n    );\n  }\n\n  private renderFeedbackForm() {\n    return (\n      <form\n        part=\"form\"\n        id={this.formId}\n        slot=\"body\"\n        onSubmit={(e) => this.handleSubmit(e)}\n        class=\"flex flex-col gap-8 leading-4\"\n      >\n        {this.renderOptions()}\n        {this.renderLinkToCorrectAnswerField()}\n        {this.renderAddNotesField()}\n      </form>\n    );\n  }\n\n  private renderSuccessMessage() {\n    return (\n      <div slot=\"body\" class=\"my-4 flex flex-col items-center gap-4\">\n        <atomic-icon icon={Success} class=\"w-48\" />\n        <p class=\"text-base\">\n          {this.bindings.i18n.t('generated-answer-feedback-success')}\n        </p>\n      </div>\n    );\n  }\n\n  private renderBody() {\n    if (!this.feedbackSubmitted) {\n      return this.renderFeedbackForm();\n    } else {\n      return this.renderSuccessMessage();\n    }\n  }\n\n  private renderFeedbackFormFooter() {\n    const buttonClasses =\n      'flex items-center justify-center text-sm leading-4 p-2 rounded-md';\n\n    return (\n      <div slot=\"footer\" part=\"modal-footer\">\n        <div class=\"flex items-center justify-between\">\n          <div class=\"required-label text-base\">\n            <span class=\"text-error mr-0.5\">*</span>\n            {this.bindings.i18n.t('required-fields')}\n          </div>\n          <div class=\"flex gap-2\">\n            <Button\n              part=\"cancel-button\"\n              style=\"outline-primary\"\n              class={buttonClasses}\n              ariaLabel={this.bindings.i18n.t('skip')}\n              onClick={() => this.close()}\n            >\n              {this.bindings.i18n.t('skip')}\n            </Button>\n            <Button\n              part=\"submit-button\"\n              style=\"primary\"\n              type=\"submit\"\n              form={this.formId}\n              class={buttonClasses}\n              ariaLabel={this.bindings.i18n.t('generated-answer-send-feedback')}\n            >\n              {this.bindings.i18n.t('generated-answer-send-feedback')}\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private renderSuccessFormFooter() {\n    return (\n      <div slot=\"footer\">\n        <div class=\"flex justify-end gap-2 p-2\">\n          <Button\n            part=\"cancel-button\"\n            style=\"primary\"\n            onClick={() => this.close()}\n            class=\"flex justify-center p-2 text-sm leading-4\"\n            ariaLabel={this.bindings.i18n.t('modal-done')}\n          >\n            {this.bindings.i18n.t('modal-done')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  private renderFooter() {\n    if (!this.feedbackSubmitted) {\n      return this.renderFeedbackFormFooter();\n    } else {\n      return this.renderSuccessFormFooter();\n    }\n  }\n\n  public render() {\n    this.updateBreakpoints();\n\n    return (\n      <atomic-modal\n        fullscreen={false}\n        isOpen={this.isOpen}\n        close={() => this.close()}\n        container={this.host}\n        part=\"generated-answer-feedback-modal\"\n        exportparts={ATOMIC_MODAL_EXPORT_PARTS}\n      >\n        {this.renderHeader()}\n        {this.renderBody()}\n        {this.renderFooter()}\n      </atomic-modal>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}