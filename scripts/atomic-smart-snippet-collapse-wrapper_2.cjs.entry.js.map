{"file":"atomic-smart-snippet-collapse-wrapper.atomic-smart-snippet-expandable-answer.entry.cjs.js","mappings":"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","names":["h","ArrowDown","Host","__decorate","InitializeBindings","listenOnce"],"sources":["src/components/common/smart-snippets/atomic-smart-snippet-collapse-wrapper/atomic-smart-snippet-collapse-wrapper.pcss?tag=atomic-smart-snippet-collapse-wrapper&encapsulation=shadow","src/components/common/smart-snippets/atomic-smart-snippet-collapse-wrapper/atomic-smart-snippet-collapse-wrapper.tsx","src/components/common/smart-snippets/atomic-smart-snippet-expandable-answer/atomic-smart-snippet-expandable-answer.pcss?tag=atomic-smart-snippet-expandable-answer&encapsulation=shadow","src/components/common/smart-snippets/atomic-smart-snippet-expandable-answer/atomic-smart-snippet-expandable-answer.tsx"],"sourcesContent":["@import '../../../../global/global.pcss';\n@import '../../../../utils/tailwind-utilities/set-font-size.tw.css';\n\n/**\n * @prop --atomic-smart-snippet-gradient-start: At which height to start fading out a truncated answer.\n */\n:host {\n  &::part(smart-snippet-collapse-wrapper) {\n    @apply set-font-size-lg;\n\n    height: auto;\n    max-height: var(--collapsed-size);\n\n    --gradient-start: var(\n      --atomic-smart-snippet-gradient-start,\n      calc(max(var(--collapsed-size) - (var(--line-height) * 1.5), var(--collapsed-size) * 0.5))\n    );\n    @apply text-on-background;\n    mask-image: linear-gradient(black, black var(--gradient-start), transparent 100%);\n\n    transition: max-height 2s cubic-bezier(0, 1, 0.16, 1) -1.82s;\n  }\n\n  button atomic-icon {\n    @apply relative top-0.5;\n  }\n}\n\n:host(.expanded) {\n  &::part(smart-snippet-collapse-wrapper) {\n    height: auto;\n    max-height: 9999999px;\n    transition: max-height 2s cubic-bezier(1, 0, 1, 0) 0s;\n    mask-image: none;\n  }\n\n  button atomic-icon {\n    @apply top-0 -scale-y-100;\n  }\n}\n","import {Component, h, Element, State, Prop, Host} from '@stencil/core';\nimport ArrowDown from '../../../../images/arrow-down.svg';\nimport {InitializeBindings} from '../../../../utils/initialization-utils';\nimport {AnyBindings} from '../../interface/bindings';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-smart-snippet-collapse-wrapper',\n  styleUrl: 'atomic-smart-snippet-collapse-wrapper.pcss',\n  shadow: true,\n})\nexport class AtomicSmartSnippetCollapseWrapper {\n  @InitializeBindings() public bindings!: AnyBindings;\n  public error!: Error;\n  @Element() public host!: HTMLElement;\n\n  @Prop({reflect: true}) public maximumHeight?: number;\n\n  @Prop({reflect: true}) public collapsedHeight?: number;\n\n  @State() public isExpanded = true;\n\n  @State() public showButton = true;\n\n  @State() private fullHeight?: number;\n\n  private shouldRenderButton = !!this.maximumHeight;\n\n  private validateProps() {\n    if (\n      this.maximumHeight &&\n      (!this.collapsedHeight || this.maximumHeight < this.collapsedHeight)\n    ) {\n      throw new Error(\n        'snippetMaximumHeight must be equal or greater than snippetCollapsedHeight'\n      );\n    }\n  }\n\n  public initialize() {\n    this.validateProps();\n  }\n\n  public componentDidRender() {\n    if (this.fullHeight === undefined && this.shouldRenderButton) {\n      this.initializeFullHeight();\n    }\n  }\n\n  private initializeFullHeight() {\n    this.fullHeight = this.host.getBoundingClientRect().height;\n    this.showButton = this.fullHeight! > this.maximumHeight!;\n    this.isExpanded = !this.showButton;\n    this.host.style.setProperty(\n      '--collapsed-size',\n      this.collapsedHeight + 'px'\n    );\n  }\n\n  private renderButton() {\n    if (!this.showButton) {\n      return;\n    }\n    return (\n      <button\n        onClick={() => (this.isExpanded = !this.isExpanded)}\n        class=\"text-primary mb-4 hover:underline\"\n        part={this.isExpanded ? 'show-less-button' : 'show-more-button'}\n      >\n        {this.bindings.i18n.t(this.isExpanded ? 'show-less' : 'show-more')}\n        <atomic-icon\n          icon={ArrowDown}\n          class=\"ml-2 w-3 align-baseline\"\n        ></atomic-icon>\n      </button>\n    );\n  }\n\n  render() {\n    return (\n      <Host\n        class={\n          this.fullHeight || !this.shouldRenderButton\n            ? this.isExpanded\n              ? 'expanded'\n              : ''\n            : 'invisible'\n        }\n      >\n        <div\n          part=\"smart-snippet-collapse-wrapper\"\n          class=\"block overflow-hidden\"\n        >\n          <slot></slot>\n        </div>\n        {this.shouldRenderButton && this.renderButton()}\n      </Host>\n    );\n  }\n}\n","@import '../../../../global/global.pcss';\n@import '../../../../utils/tailwind-utilities/set-font-size.tw.css';\n\n/**\n * @prop --atomic-smart-snippet-gradient-start: At which height to start fading out a truncated answer.\n */\n:host {\n  atomic-smart-snippet-answer {\n    @apply set-font-size-lg;\n\n    display: block;\n    overflow: hidden;\n    height: var(--collapsed-size);\n\n    --gradient-start: var(\n      --atomic-smart-snippet-gradient-start,\n      calc(max(var(--collapsed-size) - (var(--line-height) * 1.5), var(--collapsed-size) * 0.5))\n    );\n    @apply text-on-background;\n    mask-image: linear-gradient(black, black var(--gradient-start), transparent 100%);\n\n    &.loaded {\n      transition: height ease-in-out 0.25s;\n    }\n  }\n\n  button atomic-icon {\n    @apply relative top-0.5;\n  }\n\n  .expanded {\n    atomic-smart-snippet-answer {\n      height: var(--full-height);\n      mask-image: none;\n    }\n\n    button atomic-icon {\n      @apply top-0 -scale-y-100;\n    }\n  }\n}\n","import {InlineLink} from '@coveo/headless';\nimport {\n  h,\n  Component,\n  State,\n  Prop,\n  Element,\n  Watch,\n  Event,\n  EventEmitter,\n} from '@stencil/core';\nimport ArrowDown from '../../../../images/arrow-down.svg';\nimport {listenOnce} from '../../../../utils/event-utils';\nimport {InitializeBindings} from '../../../../utils/initialization-utils';\nimport {AnyBindings} from '../../interface/bindings';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-smart-snippet-expandable-answer',\n  styleUrl: 'atomic-smart-snippet-expandable-answer.pcss',\n  shadow: true,\n})\nexport class AtomicSmartSnippetExpandableAnswer {\n  @InitializeBindings() public bindings!: AnyBindings;\n  public error!: Error;\n  @Element() public host!: HTMLElement;\n\n  @Prop({reflect: true}) expanded!: boolean;\n  @Prop() htmlContent!: string;\n  /**\n   * The maximum height (in pixels) a snippet can have before the component truncates it and displays a \"show more\" button.\n   */\n  @Prop({reflect: true}) maximumHeight = 250;\n  /**\n   * When the answer is partly hidden, how much of its height (in pixels) should be visible.\n   */\n  @Prop({reflect: true}) collapsedHeight = 180;\n  /**\n   * Sets the style of the snippet.\n   *\n   * Example:\n   * ```ts\n   * expandableAnswer.snippetStyle = `\n   *   b {\n   *     color: blue;\n   *   }\n   * `;\n   * ```\n   */\n  @Prop() snippetStyle?: string;\n\n  @State() fullHeight?: number;\n\n  @Event() expand!: EventEmitter;\n  @Event() collapse!: EventEmitter;\n  @Event() selectInlineLink!: EventEmitter<InlineLink>;\n  @Event() beginDelayedSelectInlineLink!: EventEmitter<InlineLink>;\n  @Event() cancelPendingSelectInlineLink!: EventEmitter<InlineLink>;\n\n  private validateProps() {\n    if (this.maximumHeight < this.collapsedHeight) {\n      throw 'maximumHeight must be equal or greater than collapsedHeight';\n    }\n  }\n\n  public initialize() {\n    this.validateProps();\n  }\n\n  @Watch('fullHeight')\n  public fullHeightUpdated() {\n    this.host.style.setProperty('--full-height', `${this.fullHeight}px`);\n    this.host.style.setProperty(\n      '--collapsed-size',\n      `${this.showButton ? this.collapsedHeight : this.fullHeight}px`\n    );\n  }\n\n  private establishInitialHeight() {\n    const answerElement = document.createElement('atomic-smart-snippet-answer');\n    answerElement.htmlContent = this.htmlContent;\n    answerElement.innerStyle = this.snippetStyle;\n    answerElement.style.visibility = 'hidden';\n    answerElement.style.position = 'absolute';\n    return new Promise<number>((resolve) => {\n      listenOnce(answerElement, 'answerSizeUpdated', (event) => {\n        answerElement.remove();\n        resolve((event as CustomEvent<{height: number}>).detail.height);\n      });\n      this.host.parentElement!.appendChild(answerElement);\n    });\n  }\n\n  private get showButton() {\n    return this.fullHeight! > this.maximumHeight;\n  }\n\n  private get isExpanded() {\n    return this.expanded || !this.showButton;\n  }\n\n  public async componentWillLoad() {\n    this.fullHeight = await this.establishInitialHeight();\n  }\n\n  public renderAnswer() {\n    return (\n      <div part=\"truncated-answer\">\n        <atomic-smart-snippet-answer\n          exportparts=\"answer\"\n          htmlContent={this.htmlContent}\n          innerStyle={this.snippetStyle}\n          onAnswerSizeUpdated={(e) => (this.fullHeight = e.detail.height)}\n          onSelectInlineLink={(e) => this.selectInlineLink.emit(e.detail)}\n          onBeginDelayedSelectInlineLink={(e) =>\n            this.beginDelayedSelectInlineLink.emit(e.detail)\n          }\n          onCancelPendingSelectInlineLink={(e) =>\n            this.cancelPendingSelectInlineLink.emit(e.detail)\n          }\n        ></atomic-smart-snippet-answer>\n      </div>\n    );\n  }\n\n  public renderButton() {\n    if (!this.showButton) {\n      return;\n    }\n    return (\n      <button\n        onClick={() =>\n          this.isExpanded ? this.collapse.emit() : this.expand.emit()\n        }\n        class=\"text-primary mb-4 hover:underline\"\n        part={this.isExpanded ? 'show-less-button' : 'show-more-button'}\n      >\n        {this.bindings.i18n.t(this.isExpanded ? 'show-less' : 'show-more')}\n        <atomic-icon\n          icon={ArrowDown}\n          class=\"ml-2 w-3 align-baseline\"\n        ></atomic-icon>\n      </button>\n    );\n  }\n\n  public render() {\n    return (\n      <div class={this.isExpanded ? 'expanded' : ''}>\n        {this.renderAnswer()}\n        {this.renderButton()}\n      </div>\n    );\n  }\n}\n"],"version":3}