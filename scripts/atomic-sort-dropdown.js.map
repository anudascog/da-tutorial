{"file":"atomic-sort-dropdown.js","mappings":"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","names":["AtomicSortDropdown"],"sources":["src/components/common/sort/container.tsx","src/components/common/sort/stencil-guard.tsx","src/components/common/sort/stencil-label.tsx","src/components/common/sort/stencil-select.tsx","src/components/search/atomic-sort-dropdown/atomic-sort-dropdown.pcss?tag=atomic-sort-dropdown&encapsulation=shadow","src/components/search/atomic-sort-dropdown/atomic-sort-dropdown.tsx"],"sourcesContent":["import {FunctionalComponent, h} from '@stencil/core';\n\nexport const SortContainer: FunctionalComponent = (_, children) => {\n  return (\n    <div class=\"text-on-background flex flex-wrap items-center\">{children}</div>\n  );\n};\n","import {Fragment, FunctionalComponent, h} from '@stencil/core';\n\ninterface SortGuardProps {\n  hasError: boolean;\n  firstSearchExecuted: boolean;\n  hasResults: boolean;\n}\nexport const SortGuard: FunctionalComponent<SortGuardProps> = (\n  {hasError, firstSearchExecuted, hasResults},\n  children\n) => {\n  if (hasError) {\n    return;\n  }\n\n  if (!firstSearchExecuted) {\n    return (\n      <div\n        part=\"placeholder\"\n        aria-hidden\n        class=\"bg-neutral my-2 h-6 w-44 animate-pulse rounded\"\n      ></div>\n    );\n  }\n\n  if (!hasResults) {\n    return;\n  }\n\n  return <Fragment>{children}</Fragment>;\n};\n","import {FunctionalComponent, h} from '@stencil/core';\nimport {i18n} from 'i18next';\n\ninterface SortLabelProps {\n  id: string;\n  i18n: i18n;\n}\n\nexport const SortLabel: FunctionalComponent<SortLabelProps> = ({id, i18n}) => {\n  return (\n    <label\n      class=\"m-2 cursor-pointer text-sm font-bold\"\n      part=\"label\"\n      htmlFor={id}\n    >\n      {i18n.t('with-colon', {\n        text: i18n.t('sort-by'),\n      })}\n    </label>\n  );\n};\n","import {FunctionalComponent, h} from '@stencil/core';\nimport {i18n} from 'i18next';\nimport ArrowBottomIcon from '../../../images/arrow-bottom-rounded.svg';\n\ninterface SortSelectProps {\n  id: string;\n  i18n: i18n;\n  onSelect: (opt: Event) => void;\n}\nexport const SortSelect: FunctionalComponent<SortSelectProps> = (\n  {i18n, id, onSelect},\n  children\n) => {\n  return (\n    <div class=\"relative\" part=\"select-parent\">\n      <select\n        id={id}\n        class=\"btn-outline-neutral h-10 grow cursor-pointer appearance-none pr-24 pl-3\"\n        part=\"select\"\n        aria-label={i18n.t('sort-by')}\n        onChange={(option) => onSelect(option)}\n      >\n        {children}\n      </select>\n      <div\n        part=\"select-separator\"\n        class=\"border-neutral pointer-events-none absolute top-px right-0 bottom-px flex w-10 items-center justify-center border-l\"\n      >\n        <atomic-icon class=\"w-2.5\" icon={ArrowBottomIcon}></atomic-icon>\n      </div>\n    </div>\n  );\n};\n","@import '../../../global/global.pcss';\n\nselect:hover + div,\nselect:focus-visible + div {\n  @apply border-primary-light text-primary-light;\n}\n","import {Schema, StringValue} from '@coveo/bueno';\nimport {\n  Sort,\n  buildSort,\n  SortState,\n  parseCriterionExpression,\n  buildSearchStatus,\n  SearchStatus,\n  SearchStatusState,\n  TabManager,\n  TabManagerState,\n  buildTabManager,\n  loadSortCriteriaActions,\n} from '@coveo/headless';\nimport {Component, h, State, Element} from '@stencil/core';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {shouldDisplayOnCurrentTab} from '../../../utils/tab-utils';\nimport {randomID} from '../../../utils/utils';\nimport {SortContainer} from '../../common/sort/container';\nimport {SortGuard} from '../../common/sort/stencil-guard';\nimport {SortLabel} from '../../common/sort/stencil-label';\nimport {SortOption} from '../../common/sort/stencil-option';\nimport {SortSelect} from '../../common/sort/stencil-select';\nimport {Bindings} from '../atomic-search-interface/atomic-search-interface';\n\n/**\n * The `atomic-sort-dropdown` component renders a dropdown that the end user can interact with to select the criteria to use when sorting query results.\n *\n * @slot default - The `atomic-sort-expression` of the dropdown are slotted in.\n *\n * @part label - The \"Sort by\" label of the `<select>` element.\n * @part select-parent - The `<select>` element parent.\n * @part select - The `<select>` element of the dropdown list.\n * @part select-separator - The element separating the select from the icon.\n * @part placeholder - The dropdown placeholder for while the search interface is initializing.\n */\n@Component({\n  tag: 'atomic-sort-dropdown',\n  styleUrl: 'atomic-sort-dropdown.pcss',\n  shadow: true,\n})\nexport class AtomicSortDropdown implements InitializableComponent {\n  @InitializeBindings() public bindings!: Bindings;\n  private sort!: Sort;\n  public searchStatus!: SearchStatus;\n  private id!: string;\n\n  @Element() host!: HTMLElement;\n\n  @State() @BindStateToController('sort') public sortState!: SortState;\n  @BindStateToController('searchStatus')\n  @State()\n  private searchStatusState!: SearchStatusState;\n  public tabManager!: TabManager;\n  @BindStateToController('tabManager')\n  @State()\n  public tabManagerState!: TabManagerState;\n  @State() public error!: Error;\n\n  connectedCallback(): void {\n    this.id ||= randomID('atomic-sort-dropdown-');\n  }\n\n  public initialize() {\n    this.buildOptions();\n    this.searchStatus = buildSearchStatus(this.bindings.engine);\n    this.sort = buildSort(this.bindings.engine, {\n      initialState: {\n        criterion: this.bindings.store.state.sortOptions[0]?.criteria,\n      },\n    });\n    this.tabManager = buildTabManager(this.bindings.engine);\n  }\n\n  private buildOptions() {\n    const sortExpressionElements = Array.from(\n      this.host.querySelectorAll('atomic-sort-expression')\n    );\n\n    if (!sortExpressionElements.length) {\n      this.error = new Error(\n        'The \"atomic-sort-dropdown\" element requires at least one \"atomic-sort-expression\" child.'\n      );\n      return;\n    }\n\n    this.bindings.store.state.sortOptions = sortExpressionElements.map(\n      ({expression, label, tabsIncluded, tabsExcluded}) => {\n        new Schema({\n          label: new StringValue({emptyAllowed: false, required: true}),\n        }).validate({label});\n\n        return {\n          tabs: {\n            included: tabsIncluded,\n            excluded: tabsExcluded,\n          },\n          criteria: parseCriterionExpression(expression),\n          expression,\n          label,\n        };\n      }\n    );\n  }\n\n  private get options() {\n    return this.bindings.store.state.sortOptions.filter(({tabs}) =>\n      shouldDisplayOnCurrentTab(\n        [...tabs.included],\n        [...tabs.excluded],\n        this.tabManagerState?.activeTab\n      )\n    );\n  }\n\n  private select(e: Event) {\n    const select = e.composedPath()[0] as HTMLSelectElement;\n    const option = this.options.find(\n      (option) => option.expression === select.value\n    );\n    option && this.sort.sortBy(option.criteria);\n  }\n\n  public componentShouldUpdate(): void {\n    if (\n      this.options.some(\n        (option) =>\n          option.expression.trim().replace(/\\s*,\\s*/g, ',') ===\n          this.sortState.sortCriteria.replace(/@/g, '')\n      )\n    ) {\n      return;\n    }\n\n    const action = loadSortCriteriaActions(\n      this.bindings.engine\n    ).updateSortCriterion(this.options[0]?.criteria);\n\n    this.bindings.engine.dispatch(action);\n  }\n\n  public render() {\n    const {hasError, hasResults, firstSearchExecuted} = this.searchStatusState;\n    const {\n      bindings: {i18n},\n      id,\n    } = this;\n\n    return [\n      <SortGuard\n        firstSearchExecuted={firstSearchExecuted}\n        hasError={hasError}\n        hasResults={hasResults}\n      >\n        <SortContainer>\n          <SortLabel i18n={i18n} id={id} />\n          <SortSelect i18n={i18n} id={id} onSelect={(evt) => this.select(evt)}>\n            {this.options.map(({label, criteria, expression}) => (\n              <SortOption\n                i18n={i18n}\n                label={label}\n                selected={this.sort.isSortedBy(criteria)}\n                value={expression}\n              />\n            ))}\n          </SortSelect>\n        </SortContainer>\n      </SortGuard>,\n      <slot></slot>,\n    ];\n  }\n}\n"],"version":3}