{"version":3,"names":["getAnalyticsConfig","searchEngineConfig","enabled","store","analytics","analyticsMode","getNextAnalyticsConfig","getLegacyAnalyticsConfig","analyticsClientMiddleware","event","payload","augmentAnalytics","defaultConfiguration","augmentAnalyticsConfigWithDocument","immutableConfiguration","augmentAnalyticsConfigWithAtomicVersion","config","result","augmentWithExternalMiddleware","augmentAnalyticsWithAtomicVersion","augmentAnalyticsWithFacetTitles","allFacets","getAllFacets","getAtomicFacetLabelOrOriginalTitle","facetId","originalTitle","label","facetState","map","analyticsFacetState","id","title","customData","facetTitle","createSearchStore","createBaseStore","loadingFlags","iconAssetsPath","resultList","undefined","mobileBreakpoint","DEFAULT_MOBILE_BREAKPOINT","facets","numericFacets","dateFacets","categoryFacets","facetElements","fieldsToInclude","sortOptions","unsetLoadingFlag","loadingFlag","setLoadingFlag","isMobile","window","matchMedia","makeDesktopQuery","state","matches","registerFacet","facetType","data","getFacetElements","waitUntilAppLoaded","callback","getUniqueIDFromEngine","engine","search","response","searchUid","hasLoadingFlag","indexOf","addFieldsToInclude","fields","currentFields","atomicSearchInterfaceCss","AtomicSearchInterfaceStyle0","FirstSearchExecutedFlag","AtomicSearchInterface","constructor","hostRef","this","unsubscribeUrlManager","unsubscribeSearchStatus","initialized","relevanceInspectorIsOpen","language","reflectStateInUrl","scrollContainer","languageAssetsPath","enableRelevanceInspector","onHashChange","urlManager","synchronize","fragment","initRelevanceInspector","commonInterfaceHelper","CommonAtomicInterfaceHelper","promise","componentWillLoadCalledPromise","resolve","componentWillLoadResolver","Promise","withResolvers","i18Initialized","i18n","i18next","createInstance","connectedCallback","updateMobileBreakpoint","componentWillLoad","CspNonce","setNonce","initAriaLive","initFieldsToInclude","updateSearchConfiguration","updatedProp","newValue","engineIsCreated","loadSearchConfigurationActions","dispatch","updateSearchHub","searchHub","updatePipeline","pipeline","toggleAnalytics","onAnalyticsChange","updateLanguage","locale","onLanguageChange","updateIconAssetsPath","disconnectedCallback","removeEventListener","handleInitialization","onComponentInitializing","scrollToTop","scrollContainerElement","document","querySelector","bindings","logger","warn","scrollIntoView","behavior","closeRelevanceInspector","initialize","options","internalInitialization","initEngine","initializeWithSearchEngine","console","mismatchedInterfaceAndEnginePropError","executeFirstSearch","error","host","safeStorage","SafeStorage","standaloneSearchBoxData","getParsedJSON","StorageItems","STANDALONE_SEARCH_BOX_DATA","removeItem","updateQuery","loadQueryActions","value","enableQuerySyntax","q","executeFirstSearchAfterStandaloneSearchBoxRedirect","interfaceElement","createStyleElement","styleTag","createElement","setAttribute","createScriptElement","EcommerceDefaultFieldsToInclude","concat","registerFieldsToInclude","loadFieldActions","breakpoint","searchConfig","getSearchConfiguration","analyticsConfig","buildSearchEngine","configuration","loggerOptions","level","logLevel","searchConfigFromProps","timezone","location","hash","slice","initUrlManager","buildUrlManager","initialState","subscribe","updateHash","addEventListener","Array","from","children","some","element","tagName","ariaLive","prepend","e","altKey","initSearchStatus","searchStatus","buildSearchStatus","hasNoResultsAfterInitialSearch","hasResults","firstSearchExecuted","hasError","classList","toggle","noResultsSelector","errorSelector","firstSearchExecutedSelector","newFragment","history","replaceState","info","pushState","all","onInitialization","markParentAsReady","render","h","key","open","__decorate","ArrayProp"],"sources":["src/components/search/atomic-search-interface/analytics-config.ts","src/components/search/atomic-search-interface/store.ts","src/components/search/atomic-search-interface/atomic-search-interface.pcss?tag=atomic-search-interface&encapsulation=shadow","src/components/search/atomic-search-interface/atomic-search-interface.tsx"],"sourcesContent":["import {\n  AnalyticsConfiguration,\n  SearchEngineConfiguration,\n} from '@coveo/headless';\nimport {\n  AnalyticsPayload,\n  augmentAnalyticsWithAtomicVersion,\n  augmentWithExternalMiddleware,\n  augmentAnalyticsConfigWithDocument,\n  augmentAnalyticsConfigWithAtomicVersion,\n  getNextAnalyticsConfig,\n} from '../../common/interface/analytics-config';\nimport {createSearchStore} from './store';\n\nexport function getAnalyticsConfig(\n  searchEngineConfig: SearchEngineConfiguration,\n  enabled: boolean,\n  store: ReturnType<typeof createSearchStore>\n): AnalyticsConfiguration {\n  switch (searchEngineConfig.analytics?.analyticsMode) {\n    case 'next':\n      return getNextAnalyticsConfig(searchEngineConfig, enabled);\n    case 'legacy':\n    default:\n      return getLegacyAnalyticsConfig(searchEngineConfig, enabled, store);\n  }\n}\n\nfunction getLegacyAnalyticsConfig(\n  searchEngineConfig: SearchEngineConfiguration,\n  enabled: boolean,\n  store: ReturnType<typeof createSearchStore>\n): AnalyticsConfiguration {\n  const analyticsClientMiddleware = (\n    event: string,\n    payload: AnalyticsPayload\n  ) => augmentAnalytics(event, payload, store, searchEngineConfig);\n\n  const defaultConfiguration: AnalyticsConfiguration = {\n    analyticsClientMiddleware,\n    enabled,\n    ...augmentAnalyticsConfigWithDocument(),\n  };\n\n  const immutableConfiguration: AnalyticsConfiguration = {\n    ...augmentAnalyticsConfigWithAtomicVersion(),\n  };\n\n  if (searchEngineConfig.analytics) {\n    return {\n      ...defaultConfiguration,\n      ...searchEngineConfig.analytics,\n      analyticsClientMiddleware,\n      ...immutableConfiguration,\n    };\n  }\n\n  return {\n    ...defaultConfiguration,\n    ...immutableConfiguration,\n  };\n}\n\nfunction augmentAnalytics(\n  event: string,\n  payload: AnalyticsPayload,\n  store: ReturnType<typeof createSearchStore>,\n  config: SearchEngineConfiguration\n) {\n  let result = augmentWithExternalMiddleware(event, payload, config);\n  result = augmentAnalyticsWithAtomicVersion(result);\n  result = augmentAnalyticsWithFacetTitles(result, store);\n  return result;\n}\n\nfunction augmentAnalyticsWithFacetTitles(\n  payload: AnalyticsPayload,\n  store: ReturnType<typeof createSearchStore>\n) {\n  const allFacets = store.getAllFacets();\n  const getAtomicFacetLabelOrOriginalTitle = (\n    facetId: string,\n    originalTitle: string\n  ) => (allFacets[facetId] ? allFacets[facetId].label() : originalTitle);\n\n  if (payload.facetState) {\n    payload.facetState = payload.facetState.map(\n      (analyticsFacetState: {id: string; title: string}) => {\n        const {id, title: originalTitle} = analyticsFacetState;\n        return {\n          ...analyticsFacetState,\n          title: getAtomicFacetLabelOrOriginalTitle(id, originalTitle),\n        };\n      }\n    );\n  }\n\n  if (\n    payload.customData &&\n    payload.customData.facetTitle &&\n    payload.customData.facetId &&\n    payload.customData.facetTitle\n  ) {\n    payload.customData.facetTitle = getAtomicFacetLabelOrOriginalTitle(\n      payload.customData.facetId,\n      payload.customData.facetTitle\n    );\n  }\n  return payload;\n}\n","import {\n  NumericFacetValue,\n  DateFacetValue,\n  SortCriterion,\n  SearchEngine,\n} from '@coveo/headless';\nimport {DEFAULT_MOBILE_BREAKPOINT} from '../../../utils/replace-breakpoint';\nimport {\n  FacetInfo,\n  FacetStore,\n  FacetType,\n  FacetValueFormat,\n} from '../../common/facets/facet-common-store';\nimport {\n  BaseStore,\n  createBaseStore,\n  getFacetElements,\n  registerFacet,\n  ResultListInfo,\n  setLoadingFlag,\n  unsetLoadingFlag,\n  waitUntilAppLoaded,\n} from '../../common/interface/store';\nimport {makeDesktopQuery} from '../atomic-layout/search-layout';\n\nexport interface SortDropdownOption {\n  tabs: {included: string[] | string; excluded: string[] | string};\n  expression: string;\n  criteria: SortCriterion[];\n  label: string;\n}\n\ninterface FacetInfoMap {\n  [facetId: string]:\n    | FacetInfo\n    | (FacetInfo & FacetValueFormat<NumericFacetValue>)\n    | (FacetInfo & FacetValueFormat<DateFacetValue>);\n}\n\ninterface Data {\n  loadingFlags: string[];\n  iconAssetsPath: string;\n  resultList: ResultListInfo | undefined;\n  mobileBreakpoint: string;\n  facets: FacetStore<FacetInfo>;\n  numericFacets: FacetStore<FacetInfo & FacetValueFormat<NumericFacetValue>>;\n  dateFacets: FacetStore<FacetInfo & FacetValueFormat<DateFacetValue>>;\n  categoryFacets: FacetStore<FacetInfo>;\n  facetElements: HTMLElement[];\n  fieldsToInclude: string[];\n  sortOptions: SortDropdownOption[];\n}\n\nexport type SearchStore = BaseStore<Data> & {\n  unsetLoadingFlag(loadingFlag: string): void;\n  setLoadingFlag(flag: string): void;\n  isMobile(): boolean;\n  registerFacet<T extends FacetType, U extends string>(\n    facetType: T,\n    data: Data[T][U] & {facetId: U; element: HTMLElement}\n  ): void;\n  getFacetElements(): HTMLElement[];\n  waitUntilAppLoaded(callback: () => void): void;\n  getUniqueIDFromEngine(engine: SearchEngine): string;\n  hasLoadingFlag(loadingFlag: string): boolean;\n  getAllFacets(): FacetInfoMap;\n  addFieldsToInclude(fields: string[]): void;\n};\n\nexport function createSearchStore(): SearchStore {\n  const store = createBaseStore<Data>({\n    loadingFlags: [],\n    iconAssetsPath: '',\n    resultList: undefined,\n    mobileBreakpoint: DEFAULT_MOBILE_BREAKPOINT,\n    facets: {},\n    numericFacets: {},\n    dateFacets: {},\n    categoryFacets: {},\n    facetElements: [],\n    fieldsToInclude: [],\n    sortOptions: [],\n  });\n\n  return {\n    ...store,\n\n    unsetLoadingFlag(loadingFlag: string) {\n      unsetLoadingFlag(store, loadingFlag);\n    },\n\n    setLoadingFlag(loadingFlag: string) {\n      setLoadingFlag(store, loadingFlag);\n    },\n\n    isMobile() {\n      return !window.matchMedia(makeDesktopQuery(store.state.mobileBreakpoint))\n        .matches;\n    },\n\n    registerFacet<T extends FacetType, U extends string>(\n      facetType: T,\n      data: Data[T][U] & {facetId: U; element: HTMLElement}\n    ) {\n      registerFacet(store, facetType, data);\n    },\n\n    getFacetElements() {\n      return getFacetElements(store);\n    },\n\n    waitUntilAppLoaded(callback: () => void) {\n      waitUntilAppLoaded(store, callback);\n    },\n\n    getUniqueIDFromEngine(engine: SearchEngine): string {\n      return engine.state.search.response.searchUid;\n    },\n\n    hasLoadingFlag(loadingFlag: string) {\n      return store.state.loadingFlags.indexOf(loadingFlag) !== -1;\n    },\n\n    getAllFacets() {\n      return {\n        ...store.state.facets,\n        ...store.state.dateFacets,\n        ...store.state.categoryFacets,\n        ...store.state.numericFacets,\n      };\n    },\n\n    addFieldsToInclude(fields) {\n      const currentFields = store.state.fieldsToInclude;\n      store.state.fieldsToInclude = [...currentFields, ...fields];\n    },\n  };\n}\n","@import '../../../global/global.pcss';\n\n:host {\n  display: block;\n  height: inherit;\n  width: inherit;\n  & > slot {\n    height: inherit;\n  }\n}\n","import {markParentAsReady} from '@/src/utils/init-queue';\nimport {\n  LogLevel,\n  Unsubscribe,\n  buildUrlManager,\n  UrlManager,\n  buildSearchEngine,\n  SearchEngine,\n  SearchEngineConfiguration,\n  SearchStatus,\n  buildSearchStatus,\n  loadSearchConfigurationActions,\n  loadQueryActions,\n  EcommerceDefaultFieldsToInclude,\n  loadFieldActions,\n} from '@coveo/headless';\nimport {\n  Component,\n  Prop,\n  h,\n  Listen,\n  Method,\n  Watch,\n  Element,\n  State,\n  setNonce,\n} from '@stencil/core';\nimport i18next, {i18n} from 'i18next';\nimport {InitializeEvent} from '../../../utils/initialization-utils';\nimport {\n  SafeStorage,\n  StandaloneSearchBoxData,\n  StorageItems,\n} from '../../../utils/local-storage-utils';\nimport {ArrayProp} from '../../../utils/props-utils';\nimport {\n  StencilBaseAtomicInterface,\n  CommonAtomicInterfaceHelper,\n  mismatchedInterfaceAndEnginePropError,\n} from '../../common/interface/interface-common-stencil';\nimport {\n  errorSelector,\n  firstSearchExecutedSelector,\n  noResultsSelector,\n} from '../atomic-layout/search-layout';\nimport {getAnalyticsConfig} from './analytics-config';\nimport type {Bindings as _Bindings} from './interfaces';\nimport {createSearchStore, SearchStore} from './store';\n\nconst FirstSearchExecutedFlag = 'firstSearchExecuted';\nexport type InitializationOptions = SearchEngineConfiguration;\nexport type Bindings = _Bindings;\n\n/**\n * The `atomic-search-interface` component is the parent to all other atomic components in a search page. It handles the headless search engine and localization configurations.\n */\n@Component({\n  tag: 'atomic-search-interface',\n  styleUrl: 'atomic-search-interface.pcss',\n  shadow: true,\n  assetsDirs: ['lang'],\n})\nexport class AtomicSearchInterface\n  implements StencilBaseAtomicInterface<SearchEngine>\n{\n  private urlManager!: UrlManager;\n  private searchStatus!: SearchStatus;\n  private unsubscribeUrlManager: Unsubscribe = () => {};\n  private unsubscribeSearchStatus: Unsubscribe = () => {};\n  private initialized = false;\n  private store: SearchStore;\n  private commonInterfaceHelper: CommonAtomicInterfaceHelper<SearchEngine>;\n\n  @Element() public host!: HTMLAtomicSearchInterfaceElement;\n\n  @State() public error?: Error;\n  @State() relevanceInspectorIsOpen = false;\n\n  /**\n   * A list of non-default fields to include in the query results.\n   *\n   * Specify the property as an array using a JSON string representation:\n   * ```html\n   * <atomic-search-interface fields-to-include='[\"fieldA\", \"fieldB\"]'></atomic-search-interface>\n   * ```\n   */\n  @ArrayProp()\n  @Prop({mutable: true})\n  public fieldsToInclude: string[] | string = '[]';\n\n  /**\n   * The search interface [query pipeline](https://docs.coveo.com/en/180/).\n   *\n   * If the search interface is initialized using [`initializeWithSearchEngine`](https://docs.coveo.com/en/atomic/latest/reference/components/atomic-search-interface/#initializewithsearchengine), the query pipeline should instead be configured in the target engine.\n   */\n  @Prop({reflect: true, mutable: true}) public pipeline?: string;\n\n  /**\n   * The search interface [search hub](https://docs.coveo.com/en/1342/).\n   *\n   * If the search interface is initialized using [`initializeWithSearchEngine`](https://docs.coveo.com/en/atomic/latest/reference/components/atomic-search-interface/#initializewithsearchengine, the search hub should instead be configured in the target engine.\n   */\n  @Prop({reflect: true, mutable: true}) public searchHub?: string;\n\n  /**\n   * Whether analytics should be enabled.\n   */\n  @Prop({reflect: true}) public analytics = true;\n\n  /**\n   * The [tz database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) identifier of the time zone to use to correctly interpret dates in the query expression, facets, and result items.\n   * By default, the timezone will be [guessed](https://day.js.org/docs/en/timezone/guessing-user-timezone).\n   *\n   * Example: \"America/Montreal\"\n   */\n  @Prop({reflect: true}) public timezone?: string;\n\n  /**\n   * The severity level of the messages to log in the console.\n   */\n  @Prop({reflect: true}) public logLevel?: LogLevel;\n\n  /**\n   * The search interface i18next instance.\n   */\n  @Prop() public i18n: i18n;\n\n  /**\n   * The search interface language.\n   */\n  @Prop({reflect: true}) public language = 'en';\n\n  /**\n   * The search interface headless engine.\n   */\n  @Prop({mutable: true}) public engine?: SearchEngine;\n\n  /**\n   * Whether the state should be reflected in the URL parameters.\n   */\n  @Prop({reflect: true}) public reflectStateInUrl = true;\n\n  /**\n   * The CSS selector for the container where the interface will scroll back to.\n   */\n  @Prop({reflect: true}) public scrollContainer = 'atomic-search-interface';\n\n  /**\n   * The language assets path. By default, this will be a relative URL pointing to `./lang`.\n   *\n   * Example: \"/mypublicpath/languages\"\n   *\n   */\n  @Prop({reflect: true}) public languageAssetsPath = './lang';\n\n  /**\n   * The icon assets path. By default, this will be a relative URL pointing to `./assets`.\n   *\n   * Example: \"/mypublicpath/icons\"\n   *\n   */\n  @Prop({reflect: true}) public iconAssetsPath = './assets';\n\n  /**\n   * Whether the relevance inspector shortcut should be enabled for this interface.\n   *\n   * The relevance inspector can be opened by holding the Alt key (Option on Mac) while over the interface, and performing a double click.\n   *\n   * The relevance inspector allows to troubleshoot and debug queries.\n   */\n  @Prop({reflect: true}) public enableRelevanceInspector = true;\n\n  /**\n   * The value to set the [nonce](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce) attribute to on inline script and style elements generated by this interface and its child components.\n   * If your application is served with a Content Security Policy (CSP) that doesn't include the `script-src: 'unsafe-inline'` or `style-src: 'unsafe-inline'` directives,\n   * you should ensure that your application server generates a new nonce on every page load and uses the generated value to set this prop and serve the corresponding CSP response headers\n   * (i.e., script-src 'nonce-<YOUR_GENERATED_NONCE>' and style-src 'nonce-<YOUR_GENERATED_NONCE>').\n   * Otherwise you may see console errors such as\n   *  - Refused to execute inline script because it violates the following Content Security Policy directive: [...]\n   *  - Refused to apply inline style because it violates the following Content Security Policy directive: [...].\n   * @example:\n   * ```html\n   * <script nonce=\"<YOUR_GENERATED_NONCE>\">\n   *  import {setNonce} from '@coveo/atomic';\n   *  setNonce('<YOUR_GENERATED_NONCE>');\n   * </script>\n   * ```\n   */\n  @Prop({reflect: true}) public CspNonce?: string;\n\n  private i18Initialized: Promise<void>;\n  private componentWillLoadCalledPromise: Promise<void>;\n  private componentWillLoadResolver: () => void;\n  public constructor() {\n    this.initRelevanceInspector();\n    this.commonInterfaceHelper = new CommonAtomicInterfaceHelper(\n      this,\n      'CoveoAtomic'\n    );\n    this.store = createSearchStore();\n    ({\n      promise: this.componentWillLoadCalledPromise,\n      resolve: this.componentWillLoadResolver,\n    } = Promise.withResolvers<void>());\n    const {promise, resolve} = Promise.withResolvers<void>();\n    this.i18Initialized = promise;\n    this.i18n = i18next.createInstance(undefined, resolve);\n  }\n\n  public connectedCallback() {\n    this.store.setLoadingFlag(FirstSearchExecutedFlag);\n    this.updateMobileBreakpoint();\n  }\n\n  componentWillLoad() {\n    if (this.CspNonce) {\n      setNonce(this.CspNonce);\n    }\n    this.initAriaLive();\n    this.initFieldsToInclude();\n    this.componentWillLoadResolver();\n  }\n\n  public updateSearchConfiguration(\n    updatedProp: 'searchHub' | 'pipeline',\n    newValue: string | undefined\n  ) {\n    if (!this.commonInterfaceHelper.engineIsCreated(this.engine)) {\n      return;\n    }\n\n    if (this.engine.state[updatedProp] === newValue) {\n      return;\n    }\n\n    const {updateSearchConfiguration} = loadSearchConfigurationActions(\n      this.engine\n    );\n    this.engine.dispatch(\n      updateSearchConfiguration({\n        [updatedProp]: newValue,\n      })\n    );\n  }\n\n  @Watch('searchHub')\n  public updateSearchHub() {\n    this.updateSearchConfiguration('searchHub', this.searchHub ?? 'default');\n  }\n\n  @Watch('pipeline')\n  public updatePipeline() {\n    this.updateSearchConfiguration('pipeline', this.pipeline);\n  }\n\n  @Watch('analytics')\n  public toggleAnalytics() {\n    if (!this.commonInterfaceHelper.engineIsCreated(this.engine)) {\n      return;\n    }\n\n    this.commonInterfaceHelper.onAnalyticsChange();\n  }\n\n  @Watch('language')\n  public updateLanguage() {\n    if (!this.commonInterfaceHelper.engineIsCreated(this.engine)) {\n      return;\n    }\n\n    const {updateSearchConfiguration} = loadSearchConfigurationActions(\n      this.engine\n    );\n    this.engine.dispatch(\n      updateSearchConfiguration({\n        locale: this.language,\n      })\n    );\n    return this.commonInterfaceHelper.onLanguageChange();\n  }\n\n  @Watch('iconAssetsPath')\n  public updateIconAssetsPath() {\n    this.store.state.iconAssetsPath = this.iconAssetsPath;\n  }\n\n  public disconnectedCallback() {\n    this.unsubscribeUrlManager();\n    this.unsubscribeSearchStatus();\n    window.removeEventListener('hashchange', this.onHashChange);\n  }\n\n  @Listen('atomic/initializeComponent')\n  public handleInitialization(event: InitializeEvent) {\n    this.commonInterfaceHelper.onComponentInitializing(event);\n  }\n\n  @Listen('atomic/scrollToTop')\n  public scrollToTop() {\n    const scrollContainerElement = document.querySelector(this.scrollContainer);\n    if (!scrollContainerElement) {\n      this.bindings.engine.logger.warn(\n        `Could not find the scroll container with the selector \"${this.scrollContainer}\". This will prevent UX interactions that require a scroll from working correctly. Please check the CSS selector in the scrollContainer option`\n      );\n      return;\n    }\n\n    scrollContainerElement.scrollIntoView({behavior: 'smooth'});\n  }\n\n  @Listen('atomic/relevanceInspector/close')\n  public closeRelevanceInspector() {\n    this.relevanceInspectorIsOpen = false;\n  }\n\n  /**\n   * Initializes the connection with the headless search engine using options for `accessToken` (required), `organizationId` (required), `environment` (defaults to `prod`), and `renewAccessToken`.\n   */\n  @Method() public initialize(options: InitializationOptions) {\n    return this.internalInitialization(() => this.initEngine(options));\n  }\n\n  /**\n   * Initializes the connection with an already preconfigured [headless search engine](https://docs.coveo.com/en/headless/latest/reference/search/), as opposed to the `initialize` method, which will internally create a new search engine instance.\n   * This bypasses the properties set on the component, such as analytics, searchHub, pipeline, language, timezone & logLevel.\n   */\n  @Method() public initializeWithSearchEngine(engine: SearchEngine) {\n    if (this.pipeline && this.pipeline !== engine.state.pipeline) {\n      console.warn(\n        mismatchedInterfaceAndEnginePropError('search', 'query pipeline')\n      );\n    }\n    if (this.searchHub && this.searchHub !== engine.state.searchHub) {\n      console.warn(\n        mismatchedInterfaceAndEnginePropError('search', 'search hub')\n      );\n    }\n    return this.internalInitialization(() => (this.engine = engine));\n  }\n\n  /**\n   *\n   * Executes the first search and logs the interface load event to analytics, after initializing connection to the headless search engine.\n   */\n  @Method() public async executeFirstSearch() {\n    if (!this.commonInterfaceHelper.engineIsCreated(this.engine)) {\n      return;\n    }\n\n    if (!this.initialized) {\n      console.error(\n        'You have to wait until the \"initialize\" promise is fulfilled before executing a search.',\n        this.host\n      );\n      return;\n    }\n\n    const safeStorage = new SafeStorage();\n    const standaloneSearchBoxData =\n      safeStorage.getParsedJSON<StandaloneSearchBoxData | null>(\n        StorageItems.STANDALONE_SEARCH_BOX_DATA,\n        null\n      );\n\n    if (!standaloneSearchBoxData) {\n      this.engine.executeFirstSearch();\n      return;\n    }\n\n    safeStorage.removeItem(StorageItems.STANDALONE_SEARCH_BOX_DATA);\n    const {updateQuery} = loadQueryActions(this.engine!);\n    const {value, enableQuerySyntax, analytics} = standaloneSearchBoxData;\n    this.engine!.dispatch(updateQuery({q: value, enableQuerySyntax}));\n    this.engine.executeFirstSearchAfterStandaloneSearchBoxRedirect(analytics);\n  }\n\n  public get bindings(): Bindings {\n    return {\n      engine: this.engine!,\n      i18n: this.i18n,\n      store: this.store,\n      interfaceElement: this.host,\n      createStyleElement: () => {\n        const styleTag = document.createElement('style');\n        if (this.CspNonce) {\n          styleTag.setAttribute('nonce', this.CspNonce);\n        }\n        return styleTag;\n      },\n      createScriptElement: () => {\n        const styleTag = document.createElement('script');\n        if (this.CspNonce) {\n          styleTag.setAttribute('nonce', this.CspNonce);\n        }\n        return styleTag;\n      },\n    };\n  }\n\n  private initFieldsToInclude() {\n    const fields = EcommerceDefaultFieldsToInclude.concat(this.fieldsToInclude);\n    this.store.addFieldsToInclude(fields);\n  }\n\n  public registerFieldsToInclude() {\n    this.engine?.dispatch(\n      loadFieldActions(this.engine!).registerFieldsToInclude(\n        this.store.state.fieldsToInclude\n      )\n    );\n  }\n\n  private updateMobileBreakpoint() {\n    const breakpoint = this.host.querySelector(\n      'atomic-search-layout'\n    )?.mobileBreakpoint;\n    if (breakpoint) {\n      this.store.state.mobileBreakpoint = breakpoint;\n    }\n  }\n\n  private initEngine(options: InitializationOptions) {\n    const searchConfig = this.getSearchConfiguration(options);\n    const analyticsConfig = getAnalyticsConfig(\n      options,\n      this.analytics,\n      this.store\n    );\n    try {\n      this.engine = buildSearchEngine({\n        configuration: {\n          ...options,\n          search: searchConfig,\n          analytics: analyticsConfig,\n        },\n        loggerOptions: {\n          level: this.logLevel,\n        },\n      });\n    } catch (error) {\n      this.error = error as Error;\n      throw error;\n    }\n  }\n\n  private getSearchConfiguration(options: InitializationOptions) {\n    const searchConfigFromProps = {\n      searchHub: this.searchHub ?? 'default',\n      pipeline: this.pipeline,\n      locale: this.language,\n      timezone: this.timezone,\n    };\n\n    if (options.search) {\n      return {\n        ...searchConfigFromProps,\n        ...options.search,\n      };\n    }\n\n    return searchConfigFromProps;\n  }\n\n  private get fragment() {\n    return window.location.hash.slice(1);\n  }\n\n  private initUrlManager() {\n    if (!this.reflectStateInUrl) {\n      return;\n    }\n\n    this.urlManager = buildUrlManager(this.engine!, {\n      initialState: {fragment: this.fragment},\n    });\n\n    this.unsubscribeUrlManager = this.urlManager.subscribe(() =>\n      this.updateHash()\n    );\n\n    window.addEventListener('hashchange', this.onHashChange);\n  }\n\n  private initAriaLive() {\n    if (\n      Array.from(this.host.children).some(\n        (element) => element.tagName === 'ATOMIC-ARIA-LIVE'\n      )\n    ) {\n      return;\n    }\n    const ariaLive = document.createElement('atomic-aria-live');\n    this.host.prepend(ariaLive);\n  }\n\n  private initRelevanceInspector() {\n    if (this.enableRelevanceInspector) {\n      this.host.addEventListener('dblclick', (e) => {\n        if (e.altKey) {\n          this.relevanceInspectorIsOpen = !this.relevanceInspectorIsOpen;\n        }\n      });\n    }\n  }\n\n  private initSearchStatus() {\n    this.searchStatus = buildSearchStatus(this.engine!);\n    this.unsubscribeSearchStatus = this.searchStatus.subscribe(() => {\n      const hasNoResultsAfterInitialSearch =\n        !this.searchStatus.state.hasResults &&\n        this.searchStatus.state.firstSearchExecuted &&\n        !this.searchStatus.state.hasError;\n\n      this.host.classList.toggle(\n        noResultsSelector,\n        hasNoResultsAfterInitialSearch\n      );\n\n      this.host.classList.toggle(\n        errorSelector,\n        this.searchStatus.state.hasError\n      );\n\n      this.host.classList.toggle(\n        firstSearchExecutedSelector,\n        this.searchStatus.state.firstSearchExecuted\n      );\n\n      if (\n        this.searchStatus.state.firstSearchExecuted &&\n        this.store.hasLoadingFlag(FirstSearchExecutedFlag)\n      ) {\n        this.store.unsetLoadingFlag(FirstSearchExecutedFlag);\n      }\n    });\n  }\n\n  private updateHash() {\n    const newFragment = this.urlManager.state.fragment;\n\n    if (!this.searchStatus.state.firstSearchExecuted) {\n      history.replaceState(null, document.title, `#${newFragment}`);\n      this.bindings.engine.logger.info(`History replaceState #${newFragment}`);\n\n      return;\n    }\n\n    history.pushState(null, document.title, `#${newFragment}`);\n    this.bindings.engine.logger.info(`History pushState #${newFragment}`);\n  }\n\n  private onHashChange = () => {\n    this.urlManager.synchronize(this.fragment);\n  };\n\n  private async internalInitialization(initEngine: () => void) {\n    await this.componentWillLoadCalledPromise;\n    await Promise.all([\n      this.commonInterfaceHelper.onInitialization(initEngine),\n      this.i18Initialized,\n    ]);\n    await this.updateLanguage();\n    markParentAsReady(this.host);\n    this.pipeline = this.engine!.state.pipeline;\n    this.searchHub = this.engine!.state.searchHub;\n    this.initSearchStatus();\n    this.initUrlManager();\n    this.initialized = true;\n  }\n\n  public render() {\n    return [\n      this.engine && this.enableRelevanceInspector && (\n        <atomic-relevance-inspector\n          open={this.relevanceInspectorIsOpen}\n          bindings={this.bindings}\n        ></atomic-relevance-inspector>\n      ),\n      <slot></slot>,\n    ];\n  }\n}\n"],"mappings":"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","ignoreList":[]}