{"file":"atomic-insight-user-actions-timeline2.js","mappings":"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","names":["buildInsightUserActions"],"sources":["src/components/insight/user-actions/atomic-insight-user-actions-timeline/atomic-insight-user-actions-timeline.pcss?tag=atomic-insight-user-actions-timeline&encapsulation=shadow","src/components/insight/user-actions/atomic-insight-user-actions-timeline/atomic-insight-user-actions-timeline.tsx"],"sourcesContent":["@import '../../../../global/global.pcss';\n\n.separator {\n  height: 1px;\n  background-color: #e0e1dd;\n}\n","import {\n  buildUserActions as buildInsightUserActions,\n  UserActions as InsightUserActions,\n  UserActionsState as InsightUserActionsState,\n  UserSession as InsightUserSession,\n} from '@coveo/headless/insight';\nimport {Component, h, State, Prop} from '@stencil/core';\nimport ArrowDownIcon from '../../../../images/big-arrow-down.svg';\nimport ArrowUpIcon from '../../../../images/big-arrow-up.svg';\nimport {\n  InitializableComponent,\n  InitializeBindings,\n  BindStateToController,\n} from '../../../../utils/initialization-utils';\nimport {NoItemsContainer} from '../../../common/no-items/container';\nimport {MagnifyingGlass} from '../../../common/no-items/magnifying-glass';\nimport {Button} from '../../../common/stencil-button';\nimport {InsightBindings} from '../../atomic-insight-interface/atomic-insight-interface';\n\n/**\n * @internal\n * This component displays all the actions performed by a user around the time they created a case.\n * The actions are grouped into multiple sessions, including the session during which the case was created,\n * the sessions preceding the case creation and the sessions following the case creation.\n *\n * @component\n * @example\n * <AtomicInsightUserActionsTimeline userId={'123'} caseCreationDate={'2024-08-15T10:00:00Z'} />\n *\n */\n@Component({\n  tag: 'atomic-insight-user-actions-timeline',\n  styleUrl: 'atomic-insight-user-actions-timeline.pcss',\n  shadow: true,\n})\nexport class AtomicInsightUserActionsTimeline\n  implements InitializableComponent<InsightBindings>\n{\n  @InitializeBindings() public bindings!: InsightBindings;\n  public userActions!: InsightUserActions;\n\n  @BindStateToController('userActions')\n  @State()\n  public userActionsState!: InsightUserActionsState;\n  public error!: Error;\n\n  /**\n   * The ID of the user whose actions are being displayed. For example in email format \"someone@company.com\".\n   */\n  @Prop() public userId!: string;\n  /**\n   * The date and time when the case was created. For example \"2024-01-01T00:00:00Z\"\n   */\n  @Prop() public ticketCreationDateTime!: string;\n  /**\n   * The names of custom events to exclude.\n   */\n  @Prop() public excludedCustomActions: string[] = [];\n\n  public initialize() {\n    this.userActions = buildInsightUserActions(this.bindings.engine, {\n      options: {\n        ticketCreationDate: this.ticketCreationDateTime,\n        excludedCustomActions: this.excludedCustomActions,\n      },\n    });\n\n    this.userActions.fetchUserActions(this.userId);\n  }\n\n  @State() followingSessionsAreVisible = false;\n  @State() precedingSessionsAreVisible = false;\n\n  private toggleFollowingSessions() {\n    this.followingSessionsAreVisible = !this.followingSessionsAreVisible;\n  }\n\n  private togglePrecedingSessions() {\n    this.precedingSessionsAreVisible = !this.precedingSessionsAreVisible;\n  }\n\n  private renderSessions(\n    sessions: Array<InsightUserSession> | undefined,\n    renderSeparator?: Function,\n    testId?: string\n  ) {\n    return (\n      <div>\n        {sessions?.map(({actions, start}) => [\n          <div class=\"mt-4\">\n            <atomic-insight-user-actions-session\n              startTimestamp={start}\n              userActions={actions}\n              data-testid={testId}\n            ></atomic-insight-user-actions-session>\n          </div>,\n          renderSeparator ? renderSeparator() : null,\n        ])}\n      </div>\n    );\n  }\n\n  private renderToggleFollowingSessionsButton() {\n    const btnClasses = 'flex items-center text-left p-2 text-sm max-w-full';\n    const iconClasses = 'h-3 w-3 mr-1';\n    const label = this.followingSessionsAreVisible\n      ? this.bindings.i18n.t('hide-following-sessions')\n      : this.bindings.i18n.t('show-following-sessions');\n    const icon = this.followingSessionsAreVisible ? ArrowDownIcon : ArrowUpIcon;\n\n    return (\n      <div class=\"flex justify-center p-2\">\n        <Button\n          style=\"text-primary\"\n          part=\"toggle-following-sessions\"\n          class={btnClasses}\n          ariaLabel={label}\n          onClick={this.toggleFollowingSessions.bind(this)}\n        >\n          <atomic-icon\n            part=\"toggle-following-sessions-icon\"\n            class={iconClasses}\n            icon={icon}\n          ></atomic-icon>\n          <span class=\"truncate\">{label}</span>\n        </Button>\n      </div>\n    );\n  }\n\n  private renderTogglePrecedingSessionsButton() {\n    const btnClasses = 'flex items-center text-left p-2 text-sm max-w-full';\n    const iconClasses = 'h-3 w-3 mr-1';\n    const label = this.precedingSessionsAreVisible\n      ? this.bindings.i18n.t('hide-preceding-sessions')\n      : this.bindings.i18n.t('show-preceding-sessions');\n    const icon = this.precedingSessionsAreVisible ? ArrowUpIcon : ArrowDownIcon;\n\n    return (\n      <div class=\"flex justify-center p-2\">\n        <Button\n          style=\"text-primary\"\n          part=\"toggle-preceding-sessions\"\n          class={btnClasses}\n          ariaLabel={label}\n          onClick={this.togglePrecedingSessions.bind(this)}\n        >\n          <atomic-icon\n            part=\"toggle-preceding-sessions-icon\"\n            class={iconClasses}\n            icon={icon}\n          ></atomic-icon>\n          <span class=\"truncate\">{label}</span>\n        </Button>\n      </div>\n    );\n  }\n\n  private renderFollowingSessionsSection() {\n    if (!this.userActionsState.timeline?.followingSessions?.length) {\n      return null;\n    }\n    return [\n      this.renderToggleFollowingSessionsButton(),\n      <div class=\"separator mx-1 rounded\"></div>,\n      this.followingSessionsAreVisible\n        ? this.renderSessions(\n            this.userActionsState.timeline?.followingSessions,\n            () => <div class=\"separator mx-1 mt-4 rounded\"></div>,\n            'following-session'\n          )\n        : null,\n    ];\n  }\n\n  private renderPrecedingSessionsSection() {\n    if (!this.userActionsState.timeline?.precedingSessions?.length) {\n      return null;\n    }\n    return [\n      <div class=\"separator mx-1 mt-4 rounded\"></div>,\n      this.precedingSessionsAreVisible\n        ? this.renderSessions(\n            this.userActionsState.timeline?.precedingSessions,\n            () => <div class=\"separator mx-1 mt-4 rounded\"></div>,\n            'preceding-session'\n          )\n        : null,\n      this.renderTogglePrecedingSessionsButton(),\n    ];\n  }\n\n  private renderTimeline() {\n    return (\n      <div>\n        {this.renderFollowingSessionsSection()}\n        <div class=\"mt-4\">\n          <atomic-insight-user-actions-session\n            // eslint-disable-next-line @typescript-eslint/no-non-null-asserted-optional-chain\n            startTimestamp={this.userActionsState.timeline?.session?.start!}\n            // eslint-disable-next-line @typescript-eslint/no-non-null-asserted-optional-chain\n            userActions={this.userActionsState?.timeline?.session?.actions!}\n            data-testid=\"active-session\"\n          ></atomic-insight-user-actions-session>\n        </div>\n        {this.renderPrecedingSessionsSection()}\n      </div>\n    );\n  }\n\n  private renderNoUserActionsScreen() {\n    return (\n      <div class=\"my-6 py-3\" data-testid=\"user-actions-error\">\n        <NoItemsContainer>\n          <MagnifyingGlass />\n          <div class=\"my-2 max-w-full text-center text-2xl font-light\">\n            {this.bindings.i18n.t('no-user-actions-available')}\n          </div>\n          <div class=\"text-neutral-dark my-2 text-center text-lg\">\n            {this.bindings.i18n.t('no-user-actions-associated-with-params')}\n          </div>\n        </NoItemsContainer>\n      </div>\n    );\n  }\n\n  render() {\n    const areUserActionsAvailable = this.userActionsState.timeline?.session;\n    const hasError = this.userActionsState.error;\n\n    if (areUserActionsAvailable && !hasError) {\n      return this.renderTimeline();\n    }\n    return this.renderNoUserActionsScreen();\n  }\n}\n"],"version":3}