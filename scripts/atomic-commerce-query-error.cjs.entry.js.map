{"file":"atomic-commerce-query-error.entry.cjs.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,MAAM,2BAA2B,GAAG,qi1DAAqi1D,CAAC;AAC1k1D,uCAAe,2BAA2B;;;;;;;;;;;;MC4C7B,wBAAwB;;;QAU1B,iBAAY,GAAG,KAAK,CAAC;;;4BAAN,KAAK;;IAKtB,UAAU;QACf,IAAI,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,KAAK,iBAAiB,EAAE;YAC7D,IAAI,CAAC,eAAe,GAAGA,4BAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SAClE;aAAM;YACL,IAAI,CAAC,eAAe,GAAGC,oBAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SAC1D;KACF;IAEM,MAAM;QACX,MAAM,EAAC,KAAK,EAAC,GAAG,IAAI,CAAC,oBAAoB,CAAC;QAE1C,MAAM,EACJ,QAAQ,EAAE,EACR,IAAI,EACJ,MAAM,EAAE,EACN,aAAa,EAAE,EAAC,cAAc,EAAE,WAAW,YAAEC,UAAQ,EAAC,GACvD,GACF,GACF,GAAG,IAAI,CAAC;QAET,MAAM,GAAG,GACPA,UAAQ,CAAC,UAAU,IAAIC,8BAAqB,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;QAE5E,MAAM,QAAQ,GAAG,CAACC,uBAAiB,CAAC,KAAK,CAAC,CAAC;QAC3C,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,WAAW,GAAGC,iCAA2B,CAC5C,IAAI,EACJ,cAAc,EACd,GAAG,EACH,KAAK,EAAE,IAAI,CACZ,CAAC;SACH;QACD,QACEC,QAACC,qBAAe,qDAAC,QAAQ,EAAE,QAAQ,IACjCD,QAACE,yBAAmB,uDAClBF,QAACG,oBAAc,qDAAC,SAAS,EAAE,KAAK,EAAE,IAAI,GAAI,EAC1CH,QAACI,qBAAe,qDACd,SAAS,EAAE,KAAK,EAAE,IAAI,EACtB,IAAI,EAAE,IAAI,EACV,cAAc,EAAE,cAAc,GAC9B,EACFJ,QAACK,2BAAqB,qDACpB,IAAI,EAAE,IAAI,EACV,cAAc,EAAE,cAAc,EAC9B,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,KAAK,EAAE,IAAI,GACtB,EACFL,QAACM,wBAAkB,qDACjB,IAAI,EAAEN,QAACO,oBAAc,IAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,GAAI,EAC5D,UAAU,EAAE,OAAO,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,EAC1D,IAAI,EAAE,IAAI,GACV,EACFP,QAACQ,uBAAiB,qDAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,YAAY,GAAI,CACxC,CACN,EAClB;KACH;;AApE4B;IAA5BC,sCAAkB,EAAE;0DAAoC;AAKjD;IAFPC,yCAAqB,CAAC,iBAAiB,CAAC;sEAEwB;AAKvD;IADTC,wCAAc,CAAC,sBAAsB,CAAC;6DACR;;;;;","names":["buildProductListing","buildSearch","commerce","getCommerceApiBaseUrl","isNullOrUndefined","getAriaMessageFromErrorType","h","QueryErrorGuard","QueryErrorContainer","QueryErrorIcon","QueryErrorTitle","QueryErrorDescription","QueryErrorShowMore","QueryErrorLink","QueryErrorDetails","InitializeBindings","BindStateToController","AriaLiveRegion"],"sources":["src/components/commerce/atomic-commerce-query-error/atomic-commerce-query-error.pcss?tag=atomic-commerce-query-error&encapsulation=shadow","src/components/commerce/atomic-commerce-query-error/atomic-commerce-query-error.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n","import {isNullOrUndefined} from '@coveo/bueno';\nimport {\n  Search,\n  ProductListing,\n  SearchState,\n  ProductListingState,\n  buildProductListing,\n  buildSearch,\n  getCommerceApiBaseUrl,\n} from '@coveo/headless/commerce';\nimport {Component, h, State} from '@stencil/core';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {AriaLiveRegion} from '../../../utils/stencil-accessibility-utils';\nimport {QueryErrorContainer} from '../../common/query-error/container';\nimport {QueryErrorDescription} from '../../common/query-error/description';\nimport {QueryErrorDetails} from '../../common/query-error/details';\nimport {QueryErrorGuard} from '../../common/query-error/guard';\nimport {QueryErrorIcon} from '../../common/query-error/icon';\nimport {QueryErrorLink} from '../../common/query-error/link';\nimport {QueryErrorShowMore} from '../../common/query-error/show-more';\nimport {QueryErrorTitle} from '../../common/query-error/title';\nimport {getAriaMessageFromErrorType} from '../../common/query-error/utils';\nimport {CommerceBindings} from '../atomic-commerce-interface/atomic-commerce-interface';\n\n/**\n * The `atomic-commerce-query-error` component handles fatal errors when performing a query on the Commerce API. When the error is known, it displays a link to relevant documentation for debugging purposes. When the error is unknown, it displays a small text area with the JSON content of the error.\n *\n * @part icon - The SVG related to the error.\n * @part title - The title of the error.\n * @part description - A description of the error.\n * @part doc-link - A link to the relevant documentation.\n * @part more-info-btn - A button to request additional error information.\n * @part error-info - Additional error information.\n *\n * @alpha\n */\n@Component({\n  tag: 'atomic-commerce-query-error',\n  styleUrl: 'atomic-commerce-query-error.pcss',\n  shadow: true,\n})\nexport class AtomicCommerceQueryError\n  implements InitializableComponent<CommerceBindings>\n{\n  @InitializeBindings() public bindings!: CommerceBindings;\n  public searchOrListing!: Search | ProductListing;\n\n  @BindStateToController('searchOrListing')\n  @State()\n  private searchOrListingState!: SearchState | ProductListingState;\n  @State() public error!: Error;\n  @State() showMoreInfo = false;\n\n  @AriaLiveRegion('commerce-query-error')\n  protected ariaMessage!: string;\n\n  public initialize() {\n    if (this.bindings.interfaceElement.type === 'product-listing') {\n      this.searchOrListing = buildProductListing(this.bindings.engine);\n    } else {\n      this.searchOrListing = buildSearch(this.bindings.engine);\n    }\n  }\n\n  public render() {\n    const {error} = this.searchOrListingState;\n\n    const {\n      bindings: {\n        i18n,\n        engine: {\n          configuration: {organizationId, environment, commerce},\n        },\n      },\n    } = this;\n\n    const url =\n      commerce.apiBaseUrl ?? getCommerceApiBaseUrl(organizationId, environment);\n\n    const hasError = !isNullOrUndefined(error);\n    if (hasError) {\n      this.ariaMessage = getAriaMessageFromErrorType(\n        i18n,\n        organizationId,\n        url,\n        error?.type\n      );\n    }\n    return (\n      <QueryErrorGuard hasError={hasError}>\n        <QueryErrorContainer>\n          <QueryErrorIcon errorType={error?.type} />\n          <QueryErrorTitle\n            errorType={error?.type}\n            i18n={i18n}\n            organizationId={organizationId}\n          />\n          <QueryErrorDescription\n            i18n={i18n}\n            organizationId={organizationId}\n            url={url}\n            errorType={error?.type}\n          />\n          <QueryErrorShowMore\n            link={<QueryErrorLink i18n={i18n} errorType={error?.type} />}\n            onShowMore={() => (this.showMoreInfo = !this.showMoreInfo)}\n            i18n={i18n}\n          />\n          <QueryErrorDetails error={error} show={this.showMoreInfo} />\n        </QueryErrorContainer>\n      </QueryErrorGuard>\n    );\n  }\n}\n"],"version":3}