{"file":"atomic-product-image.js","mappings":"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","names":["AtomicProductImage"],"sources":["src/components/common/image-carousel/image-carousel-indicators.tsx","src/components/common/image-carousel/image-carousel.tsx","src/components/commerce/product-template-components/atomic-product-image/atomic-product-image.pcss?tag=atomic-product-image&encapsulation=shadow","src/components/commerce/product-template-components/atomic-product-image/atomic-product-image.tsx"],"sourcesContent":["/* eslint-disable @cspell/spellchecker */\nimport {FunctionalComponent, h} from '@stencil/core';\n\ninterface CarouselIndicatorProps {\n  numberOfImages: number;\n  currentImage: number;\n  navigateToImage: (index: number) => void;\n  maxImagesBeforeAndAfter?: number;\n}\n\nconst CarouselIndicator: FunctionalComponent<CarouselIndicatorProps> = ({\n  numberOfImages,\n  currentImage: currentImage,\n  navigateToImage: navigateToImage,\n  maxImagesBeforeAndAfter = 2,\n}) => {\n  return (\n    <ul\n      part=\"indicators\"\n      class=\"absolute bottom-2 mt-6 mb-1 flex max-w-4/5 items-center justify-center gap-2\"\n    >\n      {Array.from({length: numberOfImages}, (_, index) => {\n        const isActive = index === currentImage % numberOfImages;\n\n        const shouldDisplay =\n          index >= Math.max(0, currentImage - maxImagesBeforeAndAfter) &&\n          index <=\n            Math.min(\n              currentImage + maxImagesBeforeAndAfter,\n              numberOfImages - 1\n            );\n\n        const isLastDisplayed =\n          index ===\n            Math.min(\n              currentImage + maxImagesBeforeAndAfter,\n              numberOfImages - 1\n            ) && index < numberOfImages - 1;\n\n        const isFirstDisplayed =\n          index === Math.max(0, currentImage - maxImagesBeforeAndAfter) &&\n          index > 0;\n\n        return (\n          <li\n            part={`indicator ${isActive ? 'active-indicator' : ''}`}\n            class={`hover:bg-primary-light cursor-pointer rounded-md shadow transition-all duration-200 ease-in-out ${\n              isActive ? 'bg-primary' : 'bg-neutral'\n            } ${isLastDisplayed || isFirstDisplayed ? 'mobile-only:w-2 mobile-only:h-2 h-1 w-1 scale-75 transform' : 'mobile-only:w-3 mobile-only:h-3 h-2 w-2 scale-100 transform'} ${\n              shouldDisplay\n                ? 'pointer-events-auto opacity-80'\n                : 'pointer-events-none hidden opacity-0'\n            }`}\n            onClick={(event) => {\n              event.stopPropagation();\n              navigateToImage(index);\n            }}\n          ></li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default CarouselIndicator;\n","import {h, FunctionalComponent, Fragment} from '@stencil/core';\nimport {JSXBase} from '@stencil/core/internal';\nimport ArrowRight from '../../../images/arrow-right.svg';\nimport {AnyBindings} from '../interface/bindings';\nimport {Button} from '../stencil-button';\nimport CarouselIndicator from './image-carousel-indicators';\n\nexport interface CarouselProps {\n  bindings: AnyBindings;\n  previousImage(): void;\n  nextImage(): void;\n  navigateToImage(index: number): void;\n  numberOfImages: number;\n  currentImage: number;\n}\n\nexport const ImageCarousel: FunctionalComponent<\n  CarouselProps & JSXBase.HTMLAttributes<HTMLHeadingElement>\n> = (props, children) => {\n  const commonPaginationClasses =\n    'w-6 h-6 grid mobile-only:w-10 mobile-only:h-10 justify-center items-center z-1 group rounded-full duration-200 opacity-50 hover:opacity-100 focus:opacity-100 transition-opacity hover:shadow-sm bottom-0 mb-1 absolute';\n  const commonArrowClasses =\n    'w-4 align-middle text-on-background group-hover:text-primary';\n\n  function renderPreviousButton() {\n    return (\n      <Button\n        style=\"text-primary\"\n        ariaLabel={props.bindings.i18n.t('previous')}\n        onClick={(event) => {\n          event?.stopPropagation();\n          props.previousImage();\n        }}\n        part=\"previous-button\"\n        class={`${commonPaginationClasses} left-0 ml-1`}\n      >\n        <atomic-icon\n          icon={ArrowRight}\n          class={`${commonArrowClasses} rotate-180`}\n        ></atomic-icon>\n      </Button>\n    );\n  }\n\n  function renderNextButton() {\n    return (\n      <Button\n        style=\"text-primary\"\n        ariaLabel={props.bindings.i18n.t('next')}\n        onClick={(event) => {\n          event?.stopPropagation();\n          props.nextImage();\n        }}\n        part=\"next-button\"\n        class={`${commonPaginationClasses} right-0 mr-1`}\n      >\n        <atomic-icon icon={ArrowRight} class={commonArrowClasses}></atomic-icon>\n      </Button>\n    );\n  }\n  function renderIndicators() {\n    return (\n      <CarouselIndicator\n        numberOfImages={props.numberOfImages}\n        currentImage={props.currentImage}\n        navigateToImage={props.navigateToImage}\n      />\n    );\n  }\n  return (\n    <Fragment>\n      <div class=\"relative flex w-full min-w-full items-center justify-center\">\n        {renderPreviousButton()}\n        {children}\n        {renderNextButton()}\n        {renderIndicators()}\n      </div>\n    </Fragment>\n  );\n};\n","@import '../../../../global/global.pcss';\n@import '../../../common/item-list/styles/mixins.pcss';\n@import '../../../common/item-list/styles/placeholders.pcss';\n\n:host {\n  @apply atomic-grid-clickable-elements;\n  @apply atomic-grid-display-common;\n  display: grid;\n  place-items: center;\n  grid-template-rows: 100%;\n  width: 100%;\n  height: 100%;\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }\n}\n","import {isNullOrUndefined} from '@coveo/bueno';\nimport {Product, ProductTemplatesHelpers} from '@coveo/headless/commerce';\nimport {Component, h, Prop, Element, State, Method} from '@stencil/core';\nimport {\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {filterProtocol} from '../../../../utils/xss-utils';\nimport {ImageCarousel} from '../../../common/image-carousel/image-carousel';\nimport {CommerceBindings as Bindings} from '../../atomic-commerce-interface/atomic-commerce-interface';\nimport {ProductContext} from '../product-template-decorators';\n\ntype Image = {\n  src: string;\n  alt: string;\n};\n\n/**\n * The `atomic-product-image` component renders an image from a product field.\n * @alpha\n */\n@Component({\n  tag: 'atomic-product-image',\n  styleUrl: 'atomic-product-image.pcss',\n  shadow: true,\n})\nexport class AtomicProductImage implements InitializableComponent<Bindings> {\n  @InitializeBindings() public bindings!: Bindings;\n  @ProductContext() private product!: Product;\n  @Element() private host!: HTMLElement;\n  @State() private useFallback = false;\n  @State() private currentImage = 0;\n  @State() private images: Image[] = [];\n\n  public error!: Error;\n\n  /**\n   * The product field which the component should use. This will look for the field in the product object first, then in the product.additionalFields object.\n   */\n  @Prop({reflect: true}) field: string = 'ec_thumbnails';\n\n  /**\n   * The product field that contains the alt text for the images. This will look for the field in the product object first, then in the product.additionalFields object.\n   * If the product has multiple images, the value of the `imageAltField` will be used as the alt text for every image.\n   *\n   * If the field is not specified, or does not contain a valid value, the alt text will be set to \"Image {index} out of {totalImages} for {productName}\".\n   * @type {string}\n   */\n  @Prop({reflect: true}) imageAltField?: string;\n\n  /**\n   * An fallback image URL that will be used in case the specified image is not available or an error is encountered.\n   */\n  @Prop({reflect: true}) fallback: string =\n    // eslint-disable-next-line @cspell/spellchecker\n    'data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" viewBox=\"0 0 50 50\"%3E%3Crect width=\"50\" height=\"50\" fill=\"none\" stroke=\"none\"%3E%3C/rect%3E%3C/svg%3E';\n\n  /**\n   * Moves to the previous image, when the carousel is activated.\n   */\n  @Method() public async previousImage() {\n    this.currentImage =\n      this.currentImage - 1 < 0\n        ? this.numberOfImages - 1\n        : this.currentImage - 1;\n  }\n\n  /**\n   * Moves to the next image, when the carousel is activated.\n   */\n  @Method() public async nextImage() {\n    this.currentImage = (this.currentImage + 1) % this.numberOfImages;\n  }\n\n  /**\n   * Navigates to the specified image index.\n   *\n   * @param index - The index of the image to navigate to.\n   */\n  @Method() public async navigateToImage(index: number) {\n    this.currentImage = index;\n  }\n\n  private logWarning(message: string) {\n    this.bindings.engine.logger.warn(message, this.host);\n  }\n\n  private handleImageError(event: Event) {\n    const image = event.target as HTMLImageElement;\n    const message = `The image url \"${image.src}\" is not valid or could not be loaded. You might want to add a \"fallback\" property.`;\n    if (this.fallback && image.src !== this.fallback) {\n      this.useFallback = true;\n      image.src = this.fallback;\n    } else if (image.src === this.fallback) {\n      this.logWarning('The fallback image failed to load.');\n    } else {\n      this.logWarning(message);\n    }\n  }\n\n  private handleMissingFallback(message: string) {\n    if (!this.fallback) {\n      this.logWarning(message);\n      this.host.remove();\n      return null;\n    }\n    return this.fallback;\n  }\n\n  private validateUrl(url: string | undefined) {\n    if (!url) {\n      const message = `Image for ${this.product.ec_name} is missing. Please review your indexing. You might want to add a \"fallback\" property.`;\n      return this.handleMissingFallback(message);\n    }\n\n    if (typeof url !== 'string') {\n      const message = `Expected \"${this.field}\" to be a text field. Please review your indexing. You might want to add a \"fallback\" property.`;\n      return this.handleMissingFallback(message);\n    }\n\n    return url;\n  }\n\n  componentWillLoad(): void {\n    const validImages = this.imageUrls.filter(\n      (image) => typeof image === 'string'\n    );\n\n    const validImageAlt = this.imageAlt;\n\n    this.images = validImages.map((url, index) => {\n      const finalUrl = this.useFallback ? this.fallback : url;\n\n      this.validateUrl(finalUrl);\n      let altText;\n\n      if (typeof validImageAlt === 'string') {\n        altText = validImageAlt;\n      } else {\n        altText = this.bindings.i18n.t('image-alt-fallback-multiple', {\n          count: index + 1,\n          max: validImages?.length,\n          itemName: this.product.ec_name,\n        });\n      }\n\n      return {\n        src: filterProtocol(finalUrl),\n        alt: altText,\n      };\n    }) as Image[];\n  }\n\n  private get imageUrls() {\n    const value = ProductTemplatesHelpers.getProductProperty(\n      this.product,\n      this.field\n    );\n\n    return Array.isArray(value) ? value : [value];\n  }\n\n  private get imageAlt() {\n    if (!this.imageAltField) {\n      return null;\n    }\n    const value = ProductTemplatesHelpers.getProductProperty(\n      this.product,\n      this.imageAltField\n    );\n    if (isNullOrUndefined(value)) {\n      return null;\n    }\n    return (value as string).trim();\n  }\n\n  private get numberOfImages() {\n    return this.images?.length ?? 0;\n  }\n\n  private renderCurrentImage(image: Image | null) {\n    if (image === null) {\n      return;\n    }\n\n    return (\n      <img\n        class=\"aspect-square\"\n        alt={image.alt}\n        src={image.src}\n        onError={(image) => this.handleImageError(image)}\n        loading=\"lazy\"\n      />\n    );\n  }\n\n  public render() {\n    const imagesToRender = this.images.map((image: Image) => {\n      return {\n        src: image.src,\n        alt: image.alt,\n      };\n    });\n\n    if (this.images.length === 0) {\n      this.validateUrl(this.fallback);\n      const alt = this.imageAlt\n        ? this.imageAlt\n        : this.bindings.i18n.t('image-not-found-alt', {\n            itemName: this.product.ec_name,\n          });\n      return (\n        <img\n          class=\"aspect-square\"\n          alt={alt}\n          src={this.fallback}\n          loading=\"eager\"\n        />\n      );\n    }\n    if (this.images.length === 1) {\n      return this.renderCurrentImage(imagesToRender[this.currentImage]);\n    }\n\n    return (\n      // TODO - KIT-3612 : handle small/icon image sizes better on mobile\n      <ImageCarousel\n        bindings={this.bindings}\n        currentImage={this.currentImage}\n        navigateToImage={(index) => this.navigateToImage(index)}\n        nextImage={() => this.nextImage()}\n        previousImage={() => this.previousImage()}\n        numberOfImages={this.numberOfImages}\n      >\n        {this.renderCurrentImage(this.images[this.currentImage])}\n      </ImageCarousel>\n    );\n  }\n}\n"],"version":3}