{"version":3,"names":["atomicInsightResultChildrenCss","AtomicInsightResultChildrenStyle0","childTemplateComponent","componentTag","AtomicResultChildren","this","resultTemplateRegistered","templateHasError","showInitialChildren","inheritTemplates","noResultText","toggleShowInitialChildren","foldedResultList","logShowMoreFoldedResults","result","logShowLessFoldedResults","resolveChildTemplates","event","preventDefault","detail","itemTemplateProvider","initialize","childrenTemplates","Array","from","host","querySelectorAll","filter","template","elementHasAncestorTag","length","error","Error","ItemTemplateProvider","includeDefaultTemplate","templateElements","getResultTemplateRegistered","getTemplateHasError","setResultTemplateRegistered","value","setTemplateHasError","bindings","renderChild","child","isLast","content","getTemplateContent","key","uniqueId","children","map","h","interactiveResult","buildInsightInteractiveResult","engine","options","extractUnfoldedItem","store","density","displayConfig","imageSize","classes","trim","componentWillRender","initialChildren","collection","foldedResultListState","results","find","r","loadFullCollection","dispatchEvent","buildCustomEvent","renderCollection","CollectionGuard","isLoadingMoreResults","moreResultsAvailable","hasChildren","numberOfChildren","i18n","t","ShowHideButton","loadAllResults","collapseResults","ChildrenWrapper","i","renderFoldedResult","render","ResultChildrenGuard","__decorate","InitializeBindings","ChildTemplatesContext","FoldedItemListContext","ItemContext","folded","parentName","ItemDisplayConfigContext","FoldedItemListStateContext"],"sources":["src/components/insight/result-templates/atomic-insight-result-children/atomic-insight-result-children.pcss?tag=atomic-insight-result-children&encapsulation=shadow","src/components/insight/result-templates/atomic-insight-result-children/atomic-insight-result-children.tsx"],"sourcesContent":["@import '../../../../components/common/result-children/result-children.pcss';\n\n[part='children-root'] {\n  @apply border-neutral border-l;\n  padding-left: 1rem;\n  margin-top: 1rem;\n}\n","import {\n  buildInteractiveResult as buildInsightInteractiveResult,\n  FoldedResultListState as InsightFoldedResultListState,\n  FoldedResult as InsightFoldedResult,\n  FoldedResultList as InsightFoldedResultList,\n} from '@coveo/headless/insight';\nimport {Component, Element, State, h, Listen, Prop} from '@stencil/core';\nimport {buildCustomEvent} from '../../../../utils/event-utils';\nimport {\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {elementHasAncestorTag} from '../../../../utils/utils';\nimport {extractUnfoldedItem} from '../../../common/interface/item';\nimport {\n  ChildTemplatesContext,\n  ChildTemplatesContextEvent,\n  DisplayConfig,\n  ItemContext,\n  ItemDisplayConfigContext,\n} from '../../../common/item-list/item-decorators';\nimport {\n  FoldedItemListContext,\n  FoldedItemListStateContext,\n} from '../../../common/item-list/item-list-decorators';\nimport {ItemTemplateProvider} from '../../../common/item-list/item-template-provider';\nimport {ItemDisplayImageSize} from '../../../common/layout/display-options';\nimport {ChildrenWrapper} from '../../../common/result-children/children-wrapper';\nimport {CollectionGuard} from '../../../common/result-children/collection-guard';\nimport {ResultChildrenGuard} from '../../../common/result-children/guard';\nimport {ShowHideButton} from '../../../common/result-children/show-hide-button';\nimport {InsightBindings} from '../../atomic-insight-interface/atomic-insight-interface';\n\nconst childTemplateComponent = 'atomic-insight-result-children-template';\nconst componentTag = 'atomic-insight-result-children';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-insight-result-children',\n  styleUrl: 'atomic-insight-result-children.pcss',\n  shadow: true,\n})\nexport class AtomicResultChildren\n  implements InitializableComponent<InsightBindings>\n{\n  @InitializeBindings() public bindings!: InsightBindings;\n  @ChildTemplatesContext()\n  public itemTemplateProvider?: ItemTemplateProvider;\n  @FoldedItemListContext()\n  private foldedResultList!: InsightFoldedResultList;\n  @ItemContext({folded: true, parentName: 'atomic-insight-result'})\n  private result!: InsightFoldedResult;\n  @ItemDisplayConfigContext()\n  private displayConfig!: DisplayConfig;\n  private initialChildren!: InsightFoldedResult[];\n\n  @Element() public host!: HTMLDivElement;\n  @State() public error!: Error;\n  @State() private resultTemplateRegistered = false;\n  @State() private templateHasError = false;\n  @FoldedItemListStateContext()\n  @State()\n  private foldedResultListState!: InsightFoldedResultListState;\n  @State()\n  private showInitialChildren = false;\n\n  /**\n   * Whether to inherit templates defined in a parent atomic-result-children. Only works for the second level of child nesting.\n   */\n  @Prop() inheritTemplates = false;\n  /**\n   * The expected size of the image displayed in the children results.\n   */\n  @Prop({reflect: true}) imageSize?: ItemDisplayImageSize;\n  /**\n   * The non-localized copy for an empty result state. An empty string will result in the component being hidden.\n   */\n  @Prop() public noResultText = 'no-documents-related';\n\n  @Listen('atomic/resolveChildTemplates')\n  public resolveChildTemplates(event: ChildTemplatesContextEvent) {\n    event.preventDefault();\n    event.detail(this.itemTemplateProvider);\n  }\n\n  public initialize() {\n    if (this.inheritTemplates) {\n      return;\n    }\n\n    const childrenTemplates = Array.from(\n      this.host.querySelectorAll(childTemplateComponent)\n    ).filter(\n      (template) => !elementHasAncestorTag(template, childTemplateComponent)\n    );\n\n    if (!childrenTemplates.length) {\n      this.error = new Error(\n        `The \"${componentTag}\" component requires at least one \"${childTemplateComponent}\" component.`\n      );\n      return;\n    }\n\n    this.itemTemplateProvider = new ItemTemplateProvider({\n      includeDefaultTemplate: false,\n      templateElements: childrenTemplates,\n      getResultTemplateRegistered: () => this.resultTemplateRegistered,\n      getTemplateHasError: () => this.templateHasError,\n      setResultTemplateRegistered: (value: boolean) => {\n        this.resultTemplateRegistered = value;\n      },\n      setTemplateHasError: (value: boolean) => {\n        this.templateHasError = value;\n      },\n      bindings: this.bindings,\n    });\n  }\n\n  private renderChild(child: InsightFoldedResult, isLast: boolean) {\n    const content = this.itemTemplateProvider?.getTemplateContent(child.result);\n\n    if (!content) {\n      return;\n    }\n\n    const key =\n      child.result.uniqueId +\n      child.children.map((child) => child.result.uniqueId);\n    return (\n      <atomic-insight-result\n        key={key}\n        content={content}\n        result={child}\n        interactiveResult={buildInsightInteractiveResult(this.bindings.engine, {\n          options: {result: extractUnfoldedItem(child)},\n        })}\n        store={this.bindings.store}\n        density={this.displayConfig.density}\n        imageSize={this.imageSize || this.displayConfig.imageSize}\n        classes={`child-result ${isLast ? 'last-child' : ''}`.trim()}\n      ></atomic-insight-result>\n    );\n  }\n\n  public componentWillRender() {\n    if (this.initialChildren || !this.collection) {\n      return;\n    }\n\n    this.initialChildren = this.collection.children;\n  }\n\n  private get collection() {\n    return this.foldedResultListState.results.find((r) => {\n      return r.result.uniqueId === this.result.result.uniqueId;\n    });\n  }\n\n  private loadFullCollection() {\n    this.host.dispatchEvent(\n      buildCustomEvent('atomic/loadCollection', this.collection)\n    );\n  }\n  private toggleShowInitialChildren = () => {\n    this.showInitialChildren\n      ? this.foldedResultList.logShowMoreFoldedResults(this.result.result)\n      : this.foldedResultList.logShowLessFoldedResults();\n\n    this.showInitialChildren = !this.showInitialChildren;\n  };\n  private renderCollection() {\n    const collection = this.collection!;\n\n    const children = this.showInitialChildren\n      ? this.initialChildren\n      : collection.children;\n\n    return (\n      <CollectionGuard\n        isLoadingMoreResults={collection.isLoadingMoreResults}\n        moreResultsAvailable={collection.moreResultsAvailable}\n        hasChildren={collection.children.length > 0}\n        numberOfChildren={collection.children.length}\n        density={this.displayConfig.density}\n        imageSize={this.imageSize || this.displayConfig.imageSize}\n        noResultText={this.bindings.i18n.t(this.noResultText)}\n      >\n        <ShowHideButton\n          moreResultsAvailable={collection.moreResultsAvailable}\n          loadFullCollection={() => this.loadFullCollection()}\n          showInitialChildren={this.showInitialChildren}\n          toggleShowInitialChildren={this.toggleShowInitialChildren}\n          loadAllResults={this.bindings.i18n.t('load-all-results')}\n          collapseResults={this.bindings.i18n.t('collapse-results')}\n        ></ShowHideButton>\n        <ChildrenWrapper hasChildren={collection.children.length > 0}>\n          {children.map((child, i) =>\n            this.renderChild(child, i === children.length - 1)\n          )}\n        </ChildrenWrapper>\n      </CollectionGuard>\n    );\n  }\n\n  private renderFoldedResult() {\n    if (this.result.children.length === 0) {\n      return;\n    }\n\n    const children = this.result.children;\n\n    return (\n      <ChildrenWrapper hasChildren={children.length > 0}>\n        {children.map((child, i) =>\n          this.renderChild(child, i === children.length - 1)\n        )}\n      </ChildrenWrapper>\n    );\n  }\n\n  public render() {\n    return (\n      <ResultChildrenGuard\n        inheritTemplates={this.inheritTemplates}\n        resultTemplateRegistered={this.resultTemplateRegistered}\n        templateHasError={this.templateHasError}\n      >\n        {this.collection ? this.renderCollection() : this.renderFoldedResult()}\n      </ResultChildrenGuard>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}