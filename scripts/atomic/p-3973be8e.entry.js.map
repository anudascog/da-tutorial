{"version":3,"names":["atomicInsightResultActionCss","AtomicInsightResultActionStyle0","Actions","AtomicInsightResultAction","this","icon","tooltip","tooltipOnClick","action","initialize","actions","loadInsightAnalyticsActions","bindings","engine","onClick","originalTooltip","setTimeout","CopyToClipboard","dispatch","logCopyToClipboard","result","navigator","clipboard","writeText","clickUri","PostToFeed","logFeedItemTextPost","SendAsEmail","logCaseSendEmail","actionClicked","emit","getIcon","CopyIcon","AttachToCase","AttachIcon","Quickview","QuickviewIcon","FeedIcon","EmailIcon","render","h","IconButton","key","partPrefix","style","title","__decorate","InitializeBindings","ResultContext"],"sources":["src/components/insight/atomic-insight-result-action/atomic-insight-result-action.pcss?tag=atomic-insight-result-action","src/components/insight/atomic-insight-result-action/atomic-insight-result-action.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n\n:host {\n  &::part(result-action-button) {\n    @apply flex items-center justify-center;\n    @apply h-8 w-8;\n  }\n}\n","import {Result} from '@coveo/headless';\nimport {\n  InsightAnalyticsActionCreators,\n  loadInsightAnalyticsActions,\n} from '@coveo/headless/insight';\nimport {Component, Event, EventEmitter, Prop, State, h} from '@stencil/core';\nimport AttachIcon from '../../../images/attach.svg';\nimport CopyIcon from '../../../images/copy-dark.svg';\nimport EmailIcon from '../../../images/email.svg';\nimport QuickviewIcon from '../../../images/preview.svg';\nimport FeedIcon from '../../../images/share-post.svg';\nimport {\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {IconButton} from '../../common/iconButton';\nimport {ResultContext} from '../../search/result-template-components/result-template-decorators';\nimport {InsightBindings} from '../atomic-insight-interface/atomic-insight-interface';\n\nexport interface InsightResultActionClickedEvent {\n  action: string;\n  result: Result;\n}\n\nexport enum Actions {\n  CopyToClipboard = 'copyToClipboard',\n  AttachToCase = 'attachToCase',\n  Quickview = 'quickview',\n  PostToFeed = 'postToFeed',\n  SendAsEmail = 'sendAsEmail',\n}\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-insight-result-action',\n  styleUrl: 'atomic-insight-result-action.pcss',\n})\nexport class AtomicInsightResultAction\n  implements InitializableComponent<InsightBindings>\n{\n  @InitializeBindings() public bindings!: InsightBindings;\n  @ResultContext() private result!: Result;\n  @State() public error!: Error;\n\n  @Event({\n    eventName: 'atomicInsightResultActionClicked',\n    composed: true,\n    cancelable: true,\n    bubbles: true,\n  })\n  private actionClicked!: EventEmitter<InsightResultActionClickedEvent>;\n\n  /**\n   * Specify the result action icon to display.\n   */\n  @Prop({mutable: true}) public icon = '';\n\n  /**\n   * The text tooltip to show on the result action icon.\n   */\n  @Prop({mutable: true}) public tooltip = '';\n\n  /**\n   * The text tooltip to show on the result action icon for some time after clicking the button.\n   */\n  @Prop({mutable: true}) public tooltipOnClick = '';\n\n  /**\n   * The type of action to perform when the result action is clicked. This will be sent along the event fired when the button is clicked.\n   */\n  @Prop({mutable: true}) public action: Actions | string = '';\n\n  private actions!: InsightAnalyticsActionCreators;\n\n  public initialize() {\n    this.actions = loadInsightAnalyticsActions(this.bindings.engine);\n  }\n\n  private onClick() {\n    if (this.tooltipOnClick) {\n      const originalTooltip = this.tooltip;\n      this.tooltip = this.tooltipOnClick;\n      setTimeout(() => {\n        this.tooltip = originalTooltip;\n      }, 1000);\n    }\n\n    switch (this.action) {\n      case Actions.CopyToClipboard:\n        this.bindings.engine.dispatch(\n          this.actions.logCopyToClipboard(this.result)\n        );\n        navigator.clipboard.writeText(this.result?.clickUri);\n        break;\n      case Actions.PostToFeed:\n        this.bindings.engine.dispatch(\n          this.actions.logFeedItemTextPost(this.result)\n        );\n        break;\n      case Actions.SendAsEmail:\n        this.bindings.engine.dispatch(\n          this.actions.logCaseSendEmail(this.result)\n        );\n        break;\n    }\n\n    this.actionClicked.emit({action: this.action, result: this.result});\n  }\n\n  private getIcon() {\n    if (this.icon) {\n      return this.icon;\n    }\n\n    switch (this.action) {\n      case Actions.CopyToClipboard:\n        return CopyIcon;\n      case Actions.AttachToCase:\n        return AttachIcon;\n      case Actions.Quickview:\n        return QuickviewIcon;\n      case Actions.PostToFeed:\n        return FeedIcon;\n      case Actions.SendAsEmail:\n        return EmailIcon;\n      default:\n        return QuickviewIcon;\n    }\n  }\n\n  public render() {\n    return (\n      <IconButton\n        partPrefix=\"result-action\"\n        style=\"outline-neutral\"\n        icon={this.getIcon()}\n        title={this.tooltip}\n        onClick={() => this.onClick()}\n      />\n    );\n  }\n}\n"],"mappings":"usEAAA,MAAMA,EAA+B,2k1DACrC,MAAAC,EAAeD,E,2WCuBf,IAAYE,GAAZ,SAAYA,GACVA,EAAA,qCACAA,EAAA,+BACAA,EAAA,yBACAA,EAAA,2BACAA,EAAA,4BACD,EAND,CAAYA,MAAO,K,MAeNC,EAAyB,M,yFAkBNC,KAAAC,KAAO,GAKPD,KAAAE,QAAU,GAKVF,KAAAG,eAAiB,GAKjBH,KAAAI,OAA2B,G,+BAfpB,G,aAKG,G,oBAKO,G,YAKU,E,CAIlD,UAAAC,GACLL,KAAKM,QAAUC,EAA4BP,KAAKQ,SAASC,O,CAGnD,OAAAC,GACN,GAAIV,KAAKG,eAAgB,CACvB,MAAMQ,EAAkBX,KAAKE,QAC7BF,KAAKE,QAAUF,KAAKG,eACpBS,YAAW,KACTZ,KAAKE,QAAUS,CAAe,GAC7B,I,CAGL,OAAQX,KAAKI,QACX,KAAKN,EAAQe,gBACXb,KAAKQ,SAASC,OAAOK,SACnBd,KAAKM,QAAQS,mBAAmBf,KAAKgB,SAEvCC,UAAUC,UAAUC,UAAUnB,KAAKgB,QAAQI,UAC3C,MACF,KAAKtB,EAAQuB,WACXrB,KAAKQ,SAASC,OAAOK,SACnBd,KAAKM,QAAQgB,oBAAoBtB,KAAKgB,SAExC,MACF,KAAKlB,EAAQyB,YACXvB,KAAKQ,SAASC,OAAOK,SACnBd,KAAKM,QAAQkB,iBAAiBxB,KAAKgB,SAErC,MAGJhB,KAAKyB,cAAcC,KAAK,CAACtB,OAAQJ,KAAKI,OAAQY,OAAQhB,KAAKgB,Q,CAGrD,OAAAW,GACN,GAAI3B,KAAKC,KAAM,CACb,OAAOD,KAAKC,I,CAGd,OAAQD,KAAKI,QACX,KAAKN,EAAQe,gBACX,OAAOe,EACT,KAAK9B,EAAQ+B,aACX,OAAOC,EACT,KAAKhC,EAAQiC,UACX,OAAOC,EACT,KAAKlC,EAAQuB,WACX,OAAOY,EACT,KAAKnC,EAAQyB,YACX,OAAOW,EACT,QACE,OAAOF,E,CAIN,MAAAG,GACL,OACEC,EAACC,EAAU,CAAAC,IAAA,2CACTC,WAAW,gBACXC,MAAM,kBACNvC,KAAMD,KAAK2B,UACXc,MAAOzC,KAAKE,QACZQ,QAAS,IAAMV,KAAKU,W,GAjGGgC,EAAA,CAA5BC,K,+BACwBD,EAAA,CAAxBE,K","ignoreList":[]}