{"version":3,"names":["atomicTimeframeFacetCss","AtomicTimeframeFacetStyle0","AtomicTimeframeFacet","this","label","field","tabsIncluded","tabsExcluded","withDatePicker","isCollapsed","headingLevel","filterFacetCount","injectionDepth","dependsOn","sortCriteria","focusTarget","headerFocus","FocusTargetController","initialize","length","console","warn","timeframeFacetCommon","TimeframeFacetCommon","facetId","host","bindings","parseDependsOn","setFacetId","id","buildDependenciesManager","buildFacetConditionsManager","engine","conditions","buildDateRange","getSearchStatusState","searchStatusState","deserializeRelativeDate","initializeFacetForDatePicker","initializeFacetForDateRange","values","initializeFilter","min","max","searchStatus","buildSearchStatus","tabManager","buildTabManager","disconnectedCallback","facetForDatePicker","buildDateFacet","options","numberOfValues","generateAutomaticRanges","tabs","included","excluded","facetForDateRange","currentValues","filter","buildDateFilter","applyDateInput","dispatch","loadDateFacetSetActions","deselectAllDateFacetValues","render","h","FacetPlaceholder","hasError","firstSearchExecuted","onToggleCollapse","__decorate","InitializeBindings","BindStateToController","ArrayProp","MapProp"],"sources":["src/components/search/facets/atomic-timeframe-facet/atomic-timeframe-facet.pcss?tag=atomic-timeframe-facet&encapsulation=shadow","src/components/search/facets/atomic-timeframe-facet/atomic-timeframe-facet.tsx"],"sourcesContent":["@import '../../../common/facets/facet-common.pcss';\n","import {\n  buildDateFacet,\n  buildDateFilter,\n  buildDateRange,\n  buildFacetConditionsManager,\n  buildSearchStatus,\n  DateFacet,\n  DateFacetState,\n  DateFilter,\n  DateFilterState,\n  DateRangeRequest,\n  deserializeRelativeDate,\n  RangeFacetSortCriterion,\n  loadDateFacetSetActions,\n  SearchStatus,\n  SearchStatusState,\n  FacetValueRequest,\n  CategoryFacetValueRequest,\n  buildTabManager,\n  TabManager,\n  TabManagerState,\n} from '@coveo/headless';\nimport {Component, Element, h, Listen, Prop, State} from '@stencil/core';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {ArrayProp, MapProp} from '../../../../utils/props-utils';\nimport {FocusTargetController} from '../../../../utils/stencil-accessibility-utils';\nimport {parseDependsOn} from '../../../common/facets/depends-on';\nimport {FacetPlaceholder} from '../../../common/facets/facet-placeholder/facet-placeholder';\nimport {TimeframeFacetCommon} from '../../../common/facets/timeframe-facet-common';\nimport {Bindings} from '../../atomic-search-interface/atomic-search-interface';\n\n/**\n * A facet is a list of values for a certain field occurring in the results.\n * An `atomic-timeframe-facet` displays a facet of the results for the current query as date intervals.\n *\n * @slot default - The `atomic-timeframe` components defining the timeframes to display.\n *\n * @part facet - The wrapper for the entire facet.\n * @part placeholder - The placeholder shown before the first search is executed.\n *\n * @part label-button - The button that displays the label and allows to expand/collapse the facet.\n * @part label-button-icon - The label button icon.\n * @part clear-button - The button that resets the actively selected facet values.\n * @part clear-button-icon - The clear button icon.\n *\n * @part values - The facet values container.\n * @part value-label - The facet value label, common for all displays.\n * @part value-count - The facet value count, common for all displays.\n * @part value-link - The facet value when display is 'link'.\n * @part value-link-selected - The selected facet value when display is 'link'.\n *\n * @part input-start - The input for the starting value of the custom date range.\n * @part input-end - The input for the ending value of the custom date range.\n * @part input-label - The label for both the start and end input.\n * @part input-apply-button - The apply button for the custom range.\n */\n@Component({\n  tag: 'atomic-timeframe-facet',\n  styleUrl: './atomic-timeframe-facet.pcss',\n  shadow: true,\n})\nexport class AtomicTimeframeFacet implements InitializableComponent {\n  @InitializeBindings() public bindings!: Bindings;\n  public facetForDateRange?: DateFacet;\n  public facetForDatePicker?: DateFacet;\n\n  private timeframeFacetCommon?: TimeframeFacetCommon;\n  public filter?: DateFilter;\n  public searchStatus!: SearchStatus;\n  public tabManager!: TabManager;\n  @Element() private host!: HTMLElement;\n\n  @BindStateToController('facetForDateRange')\n  @State()\n  public facetState!: DateFacetState;\n  @BindStateToController('facetForDatePicker')\n  @State()\n  public facetForDatePickerState?: DateFacetState;\n  @BindStateToController('filter')\n  @State()\n  public filterState?: DateFilterState;\n  @BindStateToController('searchStatus')\n  @State()\n  public searchStatusState!: SearchStatusState;\n  @BindStateToController('tabManager')\n  @State()\n  public tabManagerState!: TabManagerState;\n  @State() public error!: Error;\n\n  /**\n   * Specifies a unique identifier for the facet.\n   */\n  @Prop({mutable: true, reflect: true}) public facetId?: string;\n  /**\n   * The non-localized label for the facet.\n   * Used in the atomic-breadbox component through the bindings store.\n   */\n  @Prop({reflect: true}) public label = 'no-label';\n  /**\n   * The field whose values you want to display in the facet.\n   */\n  @Prop({reflect: true}) public field = 'date';\n  /**\n   * The tabs on which the facet can be displayed. This property should not be used at the same time as `tabs-excluded`.\n   *\n   * Set this property as a stringified JSON array, e.g.,\n   * ```html\n   *  <atomic-timeframe-facet tabs-included='[\"tabIDA\", \"tabIDB\"]'></atomic-timeframe-facet>\n   * ```\n   * If you don't set this property, the facet can be displayed on any tab. Otherwise, the facet can only be displayed on the specified tabs.\n   */\n  @ArrayProp()\n  @Prop({reflect: true, mutable: true})\n  public tabsIncluded: string[] | string = '[]';\n\n  /**\n   * The tabs on which this facet must not be displayed. This property should not be used at the same time as `tabs-included`.\n   *\n   * Set this property as a stringified JSON array, e.g.,\n   * ```html\n   *  <atomic-timeframe-facet tabs-excluded='[\"tabIDA\", \"tabIDB\"]'></atomic-timeframe-facet>\n   * ```\n   * If you don't set this property, the facet can be displayed on any tab. Otherwise, the facet won't be displayed on any of the specified tabs.\n   */\n  @ArrayProp()\n  @Prop({reflect: true, mutable: true})\n  public tabsExcluded: string[] | string = '[]';\n\n  /**\n   * Whether this facet should contain an datepicker allowing users to set custom ranges.\n   */\n  @Prop({reflect: true}) public withDatePicker = false;\n  /**\n   * Specifies whether the facet is collapsed. When the facet is the child of an `atomic-facet-manager` component, the facet manager controls this property.\n   */\n  @Prop({reflect: true, mutable: true}) public isCollapsed = false;\n  /**\n   * The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the heading over the facet, from 1 to 6.\n   */\n  @Prop({reflect: true}) public headingLevel = 0;\n  /**\n   * Whether to exclude the parents of folded results when estimating the result count for each facet value.\n   *\n   *\n   * Note: Resulting count is only an estimation, in some cases this value could be incorrect.\n   */\n  @Prop({reflect: true}) public filterFacetCount = true;\n  /**\n   * The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\n   * Note: A high injectionDepth may negatively impact the facet request performance.\n   * Minimum: `0`\n   * Default: `1000`\n   */\n  @Prop({reflect: true}) public injectionDepth = 1000;\n\n  /**\n   * The required facets and values for this facet to be displayed.\n   * Examples:\n   * ```html\n   * <atomic-facet facet-id=\"abc\" field=\"objecttype\" ...></atomic-facet>\n   *\n   * <!-- To show the facet when any value is selected in the facet with id \"abc\": -->\n   * <atomic-timeframe-facet\n   *   depends-on-abc\n   *   ...\n   * ></atomic-timeframe-facet>\n   *\n   * <!-- To show the facet when value \"doc\" is selected in the facet with id \"abc\": -->\n   * <atomic-timeframe-facet\n   *   depends-on-abc=\"doc\"\n   *   ...\n   * ></atomic-timeframe-facet>\n   * ```\n   */\n  @MapProp() @Prop() public dependsOn: Record<string, string> = {};\n\n  /**\n   * The earliest date to accept from user input when the `withDatepicker` option is enabled.\n   *\n   * This value must be a valid date string in the format `YYYY-MM-DD`.\n   *\n   * If this format is not respected, the date picker ignores this property, behaving as if no `min` value had been set.\n   *\n   * See also [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date#min).\n   */\n  @Prop({reflect: true}) public min?: string;\n\n  /**\n   * The latest date to accept from user input when the `withDatepicker` option is enabled.\n   *\n   * This value must be a valid date string in the format `YYYY-MM-DD`.\n   *\n   * If this format is not respected, the date picker ignores this property, behaving as if no `max` value had been set.\n   *\n   * See also [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date#max).\n   */\n  @Prop({reflect: true}) public max?: string;\n\n  /**\n   * The sort criterion to apply to the returned facet values.\n   * Possible values are 'ascending' and 'descending'.\n   */\n  @Prop({reflect: true}) public sortCriteria: RangeFacetSortCriterion =\n    'descending';\n\n  private headerFocus?: FocusTargetController;\n\n  private get focusTarget(): FocusTargetController {\n    if (!this.headerFocus) {\n      this.headerFocus = new FocusTargetController(this);\n    }\n    return this.headerFocus;\n  }\n\n  public initialize() {\n    if (\n      [...this.tabsIncluded].length > 0 &&\n      [...this.tabsExcluded].length > 0\n    ) {\n      console.warn(\n        'Values for both \"tabs-included\" and \"tabs-excluded\" have been provided. This is could lead to unexpected behaviors.'\n      );\n    }\n    this.timeframeFacetCommon = new TimeframeFacetCommon({\n      facetId: this.facetId,\n      host: this.host,\n      bindings: this.bindings,\n      label: this.label,\n      field: this.field,\n      headingLevel: this.headingLevel,\n      dependsOn: parseDependsOn(this.dependsOn) && this.dependsOn,\n      withDatePicker: this.withDatePicker,\n      setFacetId: (id: string) => (this.facetId = id),\n      buildDependenciesManager: (facetId: string) =>\n        buildFacetConditionsManager(this.bindings.engine, {\n          facetId,\n          conditions: parseDependsOn<\n            FacetValueRequest | CategoryFacetValueRequest\n          >(this.dependsOn),\n        }),\n      buildDateRange,\n      getSearchStatusState: () => this.searchStatusState,\n      deserializeRelativeDate,\n      initializeFacetForDatePicker: () => this.initializeFacetForDatePicker(),\n      initializeFacetForDateRange: (values: DateRangeRequest[]) =>\n        this.initializeFacetForDateRange(values),\n      initializeFilter: () => this.initializeFilter(),\n      min: this.min,\n      max: this.max,\n      sortCriteria: this.sortCriteria,\n    });\n    this.searchStatus = buildSearchStatus(this.bindings.engine);\n    this.tabManager = buildTabManager(this.bindings.engine);\n  }\n\n  public disconnectedCallback() {\n    this.timeframeFacetCommon?.disconnectedCallback();\n  }\n\n  private initializeFacetForDatePicker() {\n    this.facetForDatePicker = buildDateFacet(this.bindings.engine, {\n      options: {\n        facetId: `${this.facetId}_input_range`,\n        numberOfValues: 1,\n        generateAutomaticRanges: true,\n        field: this.field,\n        filterFacetCount: this.filterFacetCount,\n        injectionDepth: this.injectionDepth,\n        tabs: {\n          included: [...this.tabsIncluded],\n          excluded: [...this.tabsExcluded],\n        },\n      },\n    });\n    return this.facetForDatePicker;\n  }\n\n  private initializeFacetForDateRange(values: DateRangeRequest[]) {\n    this.facetForDateRange = buildDateFacet(this.bindings.engine, {\n      options: {\n        facetId: this.facetId,\n        field: this.field,\n        currentValues: values,\n        generateAutomaticRanges: false,\n        sortCriteria: this.sortCriteria,\n        filterFacetCount: this.filterFacetCount,\n        injectionDepth: this.injectionDepth,\n        tabs: {\n          included: [...this.tabsIncluded],\n          excluded: [...this.tabsExcluded],\n        },\n      },\n    });\n    return this.facetForDateRange;\n  }\n\n  private initializeFilter() {\n    this.filter = buildDateFilter(this.bindings.engine, {\n      options: {\n        facetId: `${this.facetId}_input`,\n        field: this.field,\n        tabs: {\n          included: [...this.tabsIncluded],\n          excluded: [...this.tabsExcluded],\n        },\n      },\n    });\n\n    return this.filter;\n  }\n\n  @Listen('atomic/dateInputApply')\n  public applyDateInput() {\n    this.facetId &&\n      this.bindings.engine.dispatch(\n        loadDateFacetSetActions(\n          this.bindings.engine\n        ).deselectAllDateFacetValues(this.facetId)\n      );\n  }\n\n  public render() {\n    if (!this.timeframeFacetCommon) {\n      return (\n        <FacetPlaceholder\n          numberOfValues={5}\n          isCollapsed={this.isCollapsed}\n        ></FacetPlaceholder>\n      );\n    }\n    return this.timeframeFacetCommon.render({\n      hasError: this.searchStatusState.hasError,\n      firstSearchExecuted: this.searchStatusState.firstSearchExecuted,\n      isCollapsed: this.isCollapsed,\n      headerFocus: this.focusTarget,\n      onToggleCollapse: () => (this.isCollapsed = !this.isCollapsed),\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]}