{"version":3,"names":["tabsSelector","refineModalSelector","searchBoxSelector","toggleSelectors","smartSnippetSelectors","generatedAnswerSelector","makeDesktopQuery","mobileBreakpoint","buildInsightLayout","element","widget","id","layoutSelector","hasTabs","Boolean","findSection","querySelector","interfaceStyle","search","sectionSelector","map","toggleSelector","facets","results","join","filter","declaration"],"sources":["src/components/insight/atomic-insight-layout/insight-layout.ts"],"sourcesContent":["import {\n  sectionSelector,\n  findSection,\n} from '../../common/atomic-layout-section/sections';\n\nconst tabsSelector = 'atomic-insight-tabs';\nconst refineModalSelector = 'atomic-insight-refine-modal';\nconst searchBoxSelector = 'atomic-insight-search-box';\nconst toggleSelectors = [\n  'atomic-insight-refine-toggle',\n  'atomic-insight-edit-toggle',\n  'atomic-insight-history-toggle',\n];\nconst smartSnippetSelectors = [\n  'atomic-insight-smart-snippet-suggestions',\n  'atomic-insight-smart-snippet',\n];\nconst generatedAnswerSelector = 'atomic-insight-generated-answer';\n\nexport function makeDesktopQuery(mobileBreakpoint: string) {\n  return `only screen and (min-width: ${mobileBreakpoint})`;\n}\n\nexport function buildInsightLayout(element: HTMLElement, widget: boolean) {\n  const id = element.id;\n  const layoutSelector = `atomic-insight-layout#${id}`;\n\n  const hasTabs = Boolean(\n    findSection(element, 'search')?.querySelector(tabsSelector)\n  );\n\n  const interfaceStyle = widget\n    ? `\n  ${layoutSelector} {\n    display: grid;\n    grid-template-rows: auto auto 8fr 1fr;\n    max-height: 100%;\n    box-sizing: border-box;\n  }\n  ${layoutSelector} ${refineModalSelector} {\n    grid-row-start: 5;\n  }`\n    : '';\n\n  const search = `${sectionSelector('search')} {\n      width: 100%;\n      display: flex;\n      flex-wrap: wrap;\n      grid-gap: 0.5rem;\n      background: var(--atomic-neutral-light);\n      padding-top: 1.5rem;\n      padding-left: 1.5rem;\n      padding-right: 1.5rem;\n      box-sizing: border-box;\n      min-width: 0;\n      ${!hasTabs ? 'padding-bottom: 1.5rem;' : ''}\n    }\n\n    ${sectionSelector('search')} ${searchBoxSelector} {\n      flex-grow: 1;\n      height: 2.6rem;\n    }\n\n    ${toggleSelectors.map(\n      (toggleSelector) => `${sectionSelector('search')} ${toggleSelector} {\n      flex-shrink: 0;\n    }`\n    )}\n\n    ${sectionSelector('search')} ${tabsSelector} {\n      width: 100%;\n    }\n    `;\n\n  const facets = `${sectionSelector('facets')} {\n      display: none;\n    }\n    `;\n\n  const results = `\n    ${sectionSelector('results')} {\n      overflow: auto;\n    }\n\n    ${sectionSelector('results')} ${smartSnippetSelectors.join(',')} {\n      padding: 1.5rem 1.5rem 0px;\n    }\n\n    ${sectionSelector('results')} ${generatedAnswerSelector} {\n      margin-left: 1.5rem;\n      margin-right: 1.5rem;\n    }\n    `;\n\n  return [interfaceStyle, search, facets, results]\n    .filter((declaration) => declaration !== '')\n    .join('\\n\\n');\n}\n"],"mappings":"2CAKA,MAAMA,EAAe,sBACrB,MAAMC,EAAsB,8BAC5B,MAAMC,EAAoB,4BAC1B,MAAMC,EAAkB,CACtB,+BACA,6BACA,iCAEF,MAAMC,EAAwB,CAC5B,2CACA,gCAEF,MAAMC,EAA0B,kC,SAEhBC,EAAiBC,GAC/B,MAAO,+BAA+BA,IACxC,C,SAEgBC,EAAmBC,EAAsBC,GACvD,MAAMC,EAAKF,EAAQE,GACnB,MAAMC,EAAiB,yBAAyBD,IAEhD,MAAME,EAAUC,QACdC,EAAYN,EAAS,WAAWO,cAAchB,IAGhD,MAAMiB,EAAiBP,EACnB,OACFE,mIAMAA,KAAkBX,mCAGhB,GAEJ,MAAMiB,EAAS,GAAGC,EAAgB,6SAW3BN,EAAU,0BAA4B,oBAGzCM,EAAgB,aAAajB,iEAK7BC,EAAgBiB,KACfC,GAAmB,GAAGF,EAAgB,aAAaE,gDAKpDF,EAAgB,aAAanB,uCAKjC,MAAMsB,EAAS,GAAGH,EAAgB,iDAKlC,MAAMI,EAAU,SACZJ,EAAgB,qDAIhBA,EAAgB,cAAcf,EAAsBoB,KAAK,2DAIzDL,EAAgB,cAAcd,4EAMlC,MAAO,CAACY,EAAgBC,EAAQI,EAAQC,GACrCE,QAAQC,GAAgBA,IAAgB,KACxCF,KAAK,OACV,Q","ignoreList":[]}