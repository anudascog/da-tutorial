{"file":"format-common.js","mappings":";;MAIa,yBAAyB,GAAG,CACvC,SAA0B,EAC1B,OAAgB;IAEhB,MAAM,KAAK,GAAG,gBAAgB,CAAC,qBAAqB,EAAE,SAAS,CAAC,CAAC;IAEjE,MAAM,QAAQ,GAAG,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC9C,IAAI,QAAQ,EAAE;QACZ,MAAM,IAAI,KAAK,CACb,oGAAoG,CACrG,CAAC;KACH;AACH,EAAE;MAEW,sBAAsB,GAAoB,CAAC,KAAK,EAAE,SAAS,KACtE,KAAK,CAAC,cAAc,CAAC,SAAS,EAAE;MAErB,wBAAwB,GACnC,CAAC,QAAQ,KAAK,CAAC,KAAK,EAAE,SAAS;IAC7B,OAAO,KAAK,CAAC,cAAc,CAAC,SAAS,EAAE;QACrC,KAAK,EAAE,UAAU;QACjB,QAAQ;KACT,CAAC,CAAC;AACL;;;;","names":[],"sources":["src/components/common/formats/format-common.ts"],"sourcesContent":["import {buildCustomEvent} from '../../../utils/event-utils';\n\nexport type NumberFormatter = (value: number, languages: string[]) => string;\n\nexport const dispatchNumberFormatEvent = (\n  formatter: NumberFormatter,\n  element: Element\n) => {\n  const event = buildCustomEvent('atomic/numberFormat', formatter);\n\n  const canceled = element.dispatchEvent(event);\n  if (canceled) {\n    throw new Error(\n      'The Atomic number format component was not handled, as it is not a child of a compatible component'\n    );\n  }\n};\n\nexport const defaultNumberFormatter: NumberFormatter = (value, languages) =>\n  value.toLocaleString(languages);\n\nexport const defaultCurrencyFormatter: (currency: string) => NumberFormatter =\n  (currency) => (value, languages) => {\n    return value.toLocaleString(languages, {\n      style: 'currency',\n      currency,\n    });\n  };\n"],"version":3}