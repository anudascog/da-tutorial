{"file":"stencil-display-grid.js","mappings":";;AAAA;MAYa,WAAW,GAA0C,CAChE,EAAC,MAAM,EAAE,eAAe,EAAC,EACzB,QAAQ;IAER,IAAI,GAA4B,CAAC;IACjC,QACE,WACE,IAAI,EAAC,8CAA8C,EACnD,GAAG,EAAE,CAAC,OAAO;YACX,GAAG,GAAG,OAAO,CAAC;YACd,MAAM,CAAC,OAAO,CAAC,CAAC;SACjB,EACD,OAAO,EAAE,CAAC,KAAK;YACb,KAAK,CAAC,cAAc,EAAE,CAAC;YACtB,GAAG,EAAE,aAAa,CAAC,eAAe,CAAiB,EAAE,KAAK,EAAE,CAAC;SAC/D,OAEG,QAAQ,CACR,EACN;AACJ;;;;","names":[],"sources":["src/components/common/item-list/stencil-display-grid.tsx"],"sourcesContent":["// The Lit equivalent of this file is grid-layout.ts\nimport {FunctionalComponent, h} from '@stencil/core';\n\nexport interface DisplayGridProps {\n  selectorForItem: string;\n  item: {clickUri: string; title: string};\n  setRef: (element?: HTMLElement) => void;\n  select: () => void;\n  beginDelayedSelect: () => void;\n  cancelPendingSelect: () => void;\n}\n\nexport const DisplayGrid: FunctionalComponent<DisplayGridProps> = (\n  {setRef, selectorForItem},\n  children\n) => {\n  let ref: HTMLElement | undefined;\n  return (\n    <div\n      part=\"result-list-grid-clickable-container outline\"\n      ref={(element) => {\n        ref = element;\n        setRef(element);\n      }}\n      onClick={(event) => {\n        event.preventDefault();\n        (ref?.querySelector(selectorForItem) as HTMLElement)?.click();\n      }}\n    >\n      {...children}\n    </div>\n  );\n};\n"],"version":3}