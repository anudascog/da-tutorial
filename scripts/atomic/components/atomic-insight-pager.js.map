{"file":"atomic-insight-pager.js","mappings":";;;;;;;;AAAA,MAAM,qBAAqB,GAAG,811DAA811D,CAAC;AAC731D,iCAAe,qBAAqB;;;;;;;;;;;;MCyCvBA,oBAAkB;;;;;;;;;QAuBN,kBAAa,GAAG,CAAC,CAAC;QAEjC,mBAAc,GAAG,QAAQ,CAAC,uBAAuB,CAAC,CAAC;;;;6BAFpB,CAAC;;IAIjC,UAAU;QACf,IAAI,CAAC,YAAY,GAAGC,iBAAwB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACnE,IAAI,CAAC,KAAK,GAAGC,UAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YACnD,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,CAAC,aAAa,EAAC;SAC7C,CAAC,CAAC;KACJ;IAEO,MAAM,gCAAgC;QAC5C,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,EAAE,iCAAiC,EAAE,CAAC;QAChF,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;KAC9B;IAEM,MAAM;QACX,QACE,EAAC,IAAI,uDACH,EAAC,eAAe,qDAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,IACvC,EAAC,mBAAmB,qDAClB,IAAI,EAAE,aAAa,EACnB,QAAQ,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,EAC1C,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EACxB,OAAO,EAAE;gBACP,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;gBAC1B,IAAI,CAAC,gCAAgC,EAAE,CAAC;aACzC,GACD,EACF,EAAC,gBAAgB,qDAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,IACvC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,UAAU;YAC3C,QACE,EAAC,eAAe,IACd,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,UAAU,CAAC,EAChD,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,aAAa,EAAE,EAAC,UAAU,EAAC,CAAC,EAC5D,SAAS,EAAE;oBACT,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;oBAClC,IAAI,CAAC,gCAAgC,EAAE,CAAC;iBACzC,EACD,IAAI,EAAE,UAAU,EAChB,SAAS,EAAE,IAAI,CAAC,cAAc,EAC9B,IAAI,EAAE,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,GAC5D,EACF;SACH,CAAC,CACe,EACnB,EAAC,eAAe,qDACd,IAAI,EAAE,cAAc,EACpB,QAAQ,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EACtC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EACxB,OAAO,EAAE;gBACP,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;gBACtB,IAAI,CAAC,gCAAgC,EAAE,CAAC;aACzC,GACD,CACc,CACb,EACP;KACH;;;;;;;;AA9E4B;IAA5B,kBAAkB,EAAE;sDAAmC;AAMjD;IAFN,qBAAqB,CAAC,OAAO,CAAC;wDAEO;AAG/B;IAFN,qBAAqB,CAAC,cAAc,CAAC;+DAEc;;;;;;;;;;;;;;;;;;;;","names":["AtomicInsightPager","buildInsightSearchStatus","buildInsightPager"],"sources":["src/components/insight/atomic-insight-pager/atomic-insight-pager.pcss?tag=atomic-insight-pager&encapsulation=shadow","src/components/insight/atomic-insight-pager/atomic-insight-pager.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n\n[part='page-button'] {\n  @apply bg-transparent;\n}\n\n:host {\n  @apply bg-neutral-light box-content flex h-full items-center justify-center px-6 py-4;\n}\n","import {\n  buildPager as buildInsightPager,\n  buildSearchStatus as buildInsightSearchStatus,\n  Pager as InsightPager,\n  PagerState as InsightPagerState,\n  SearchStatus as InsightSearchStatus,\n  SearchStatusState as InsightSearchStatusState,\n} from '@coveo/headless/insight';\nimport {\n  Component,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  State,\n} from '@stencil/core';\nimport ArrowLeftIcon from '../../../images/arrow-left-rounded.svg';\nimport ArrowRightIcon from '../../../images/arrow-right-rounded.svg';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {randomID} from '../../../utils/utils';\nimport {\n  PagerNextButton,\n  PagerPageButton,\n  PagerPageButtons,\n  PagerPreviousButton,\n} from '../../common/pager/stencil-pager-buttons';\nimport {PagerNavigation} from '../../common/pager/stencil-pager-navigation';\nimport {InsightBindings} from '../atomic-insight-interface/atomic-insight-interface';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-insight-pager',\n  styleUrl: 'atomic-insight-pager.pcss',\n  shadow: true,\n})\nexport class AtomicInsightPager\n  implements InitializableComponent<InsightBindings>\n{\n  @InitializeBindings() public bindings!: InsightBindings;\n  public pager!: InsightPager;\n  public searchStatus!: InsightSearchStatus;\n\n  @BindStateToController('pager')\n  @State()\n  public pagerState!: InsightPagerState;\n  @BindStateToController('searchStatus')\n  @State()\n  public searchStatusState!: InsightSearchStatusState;\n  @State() error!: Error;\n\n  @Event({\n    eventName: 'atomic/scrollToTop',\n  })\n  private scrollToTopEvent!: EventEmitter;\n\n  /**\n   * Specifies how many page buttons to display in the pager.\n   */\n  @Prop({reflect: true}) numberOfPages = 5;\n\n  private radioGroupName = randomID('atomic-insight-pager-');\n\n  public initialize() {\n    this.searchStatus = buildInsightSearchStatus(this.bindings.engine);\n    this.pager = buildInsightPager(this.bindings.engine, {\n      options: {numberOfPages: this.numberOfPages},\n    });\n  }\n\n  private async focusOnFirstResultAndScrollToTop() {\n    await this.bindings.store.state.resultList?.focusOnFirstResultAfterNextSearch();\n    this.scrollToTopEvent.emit();\n  }\n\n  public render() {\n    return (\n      <Host>\n        <PagerNavigation i18n={this.bindings.i18n}>\n          <PagerPreviousButton\n            icon={ArrowLeftIcon}\n            disabled={!this.pagerState.hasPreviousPage}\n            i18n={this.bindings.i18n}\n            onClick={() => {\n              this.pager.previousPage();\n              this.focusOnFirstResultAndScrollToTop();\n            }}\n          />\n          <PagerPageButtons i18n={this.bindings.i18n}>\n            {this.pagerState.currentPages.map((pageNumber) => {\n              return (\n                <PagerPageButton\n                  isSelected={this.pager.isCurrentPage(pageNumber)}\n                  ariaLabel={this.bindings.i18n.t('page-number', {pageNumber})}\n                  onChecked={() => {\n                    this.pager.selectPage(pageNumber);\n                    this.focusOnFirstResultAndScrollToTop();\n                  }}\n                  page={pageNumber}\n                  groupName={this.radioGroupName}\n                  text={pageNumber.toLocaleString(this.bindings.i18n.language)}\n                />\n              );\n            })}\n          </PagerPageButtons>\n          <PagerNextButton\n            icon={ArrowRightIcon}\n            disabled={!this.pagerState.hasNextPage}\n            i18n={this.bindings.i18n}\n            onClick={() => {\n              this.pager.nextPage();\n              this.focusOnFirstResultAndScrollToTop();\n            }}\n          />\n        </PagerNavigation>\n      </Host>\n    );\n  }\n}\n"],"version":3}