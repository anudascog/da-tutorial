{"file":"facet-date-input.js","mappings":"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","names":[],"sources":["src/components/common/facets/facet-date-input/facet-date-input.tsx"],"sourcesContent":["import {\n  buildDateRange,\n  DateFilterRange,\n  DateRangeRequest,\n} from '@coveo/headless';\nimport {Component, h, State, Prop, Event, EventEmitter} from '@stencil/core';\nimport {parseDate} from '../../../../utils/date-utils';\nimport {Button} from '../../../common/stencil-button';\nimport {AnyBindings} from '../../interface/bindings';\n\n/**\n * Internal component made to be integrated in a TimeframeFacet.\n * @internal\n */\n@Component({\n  tag: 'atomic-facet-date-input',\n  shadow: false,\n})\nexport class FacetDateInput {\n  @State() private start?: Date;\n  @State() private end?: Date;\n  private startRef!: HTMLInputElement;\n  private endRef!: HTMLInputElement;\n\n  @Prop() public bindings!: AnyBindings;\n  @Prop() public rangeGetter!: () => DateFilterRange | undefined;\n  @Prop() public rangeSetter!: (range: DateRangeRequest) => void;\n  @Prop() public facetId!: string;\n  @Prop() public label!: string;\n  @Prop() public min?: string;\n  @Prop() public max?: string;\n\n  @Event({\n    eventName: 'atomic/dateInputApply',\n  })\n  private applyInput!: EventEmitter;\n\n  public connectedCallback() {\n    const range = this.rangeGetter();\n    this.start = range ? parseDate(range.start).toDate() : undefined;\n    this.end = range ? parseDate(range.end).toDate() : undefined;\n  }\n  public componentDidUpdate() {\n    if (!this.startRef.value && !this.endRef.value) {\n      this.startRef.min = this.min || this.formattedDateValue('1401-01-01');\n      this.endRef.max = this.max || '';\n      this.startRef.max = this.max || '';\n      this.endRef.min = this.min || '';\n    }\n  }\n\n  private apply() {\n    if (!this.startRef.validity.valid || !this.endRef.validity.valid) {\n      return;\n    }\n\n    this.applyInput.emit({\n      start: this.start,\n      end: this.end,\n    });\n\n    const rangeRequest = buildDateRange({\n      start: this.start!,\n      end: this.end!.setHours(23, 59, 59, 999),\n    });\n\n    this.rangeSetter(rangeRequest);\n  }\n\n  private formattedDateValue(date?: string | Date) {\n    if (!date) {\n      return '';\n    }\n    return parseDate(date).format('YYYY-MM-DD');\n  }\n\n  render() {\n    const label = this.bindings.i18n.t(this.label);\n    const startLabel = this.bindings.i18n.t('start');\n    const endLabel = this.bindings.i18n.t('end');\n    const startAria = this.bindings.i18n.t('date-input-start', {label});\n    const endAria = this.bindings.i18n.t('date-input-end', {label});\n    const apply = this.bindings.i18n.t('apply');\n    const applyAria = this.bindings.i18n.t('date-input-apply', {label});\n\n    const inputClasses = 'input-primary p-2.5';\n    const labelClasses = 'text-neutral-dark self-center';\n\n    const placeholder = 'yyyy-mm-dd';\n    // Fallback for Safari < 14.1, date with format yyyy-mm-dd over 1400 (API limit)\n    const pattern =\n      '^(1[4-9]\\\\d{2}|2\\\\d{3})-(0[1-9]|1[0-2])-(0[1-9]|[12]\\\\d|3[01])$';\n\n    const range = this.rangeGetter();\n\n    return (\n      <form\n        class=\"mt-4 grid grid-cols-[min-content_1fr] gap-2 px-2\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          this.apply();\n          return false;\n        }}\n      >\n        <label\n          part=\"input-label\"\n          class={labelClasses}\n          htmlFor={`${this.facetId}_start`}\n        >\n          {startLabel}:\n        </label>\n        <input\n          id={`${this.facetId}_start`}\n          part=\"input-start\"\n          type=\"date\"\n          ref={(ref) => (this.startRef = ref!)}\n          class={inputClasses}\n          aria-label={startAria}\n          placeholder={placeholder}\n          pattern={pattern}\n          required\n          // API/Index minimum supported date\n          min={this.min || this.formattedDateValue('1401-01-01')}\n          max={this.end ? this.formattedDateValue(this.end) : this.max}\n          value={this.formattedDateValue(range?.start)}\n          onInput={(e) =>\n            (this.start = parseDate(\n              (e.target as HTMLInputElement).value\n            ).toDate())\n          }\n        />\n        <label\n          part=\"input-label\"\n          class={labelClasses}\n          htmlFor={`${this.facetId}_end`}\n        >\n          {endLabel}:\n        </label>\n        <input\n          id={`${this.facetId}_end`}\n          part=\"input-end\"\n          type=\"date\"\n          ref={(ref) => (this.endRef = ref!)}\n          class={inputClasses}\n          aria-label={endAria}\n          placeholder={placeholder}\n          pattern={pattern}\n          required\n          min={this.formattedDateValue(this.start) || this.min}\n          max={this.max}\n          value={this.formattedDateValue(range?.end)}\n          onInput={(e) =>\n            (this.end = parseDate(\n              (e.target as HTMLInputElement).value\n            ).toDate())\n          }\n        />\n        <Button\n          style=\"outline-primary\"\n          type=\"submit\"\n          part=\"input-apply-button\"\n          class=\"col-span-2 truncate p-2.5\"\n          ariaLabel={applyAria}\n          text={apply}\n        ></Button>\n      </form>\n    );\n  }\n}\n"],"version":3}