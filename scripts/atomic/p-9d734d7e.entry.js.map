{"version":3,"names":["atomicProductExcerptCss","AtomicProductExcerptStyle0","AtomicProductExcerpt","constructor","hostRef","this","isExpanded","isTruncated","truncateAfter","isCollapsible","resizeObserver","ResizeObserver","excerptText","scrollHeight","offsetHeight","validateProps","Schema","StringValue","constrainTo","validate","componentDidLoad","hostElement","querySelector","observe","onToggleExpand","e","stopPropagation","disconnectedCallback","disconnect","render","productExcerpt","product","h","Hidden","ExpandableText","showMoreLabel","bindings","i18n","t","showLessLabel","field","__decorate","InitializeBindings","ProductContext"],"sources":["src/components/commerce/product-template-components/atomic-product-excerpt/atomic-product-excerpt.pcss?tag=atomic-product-excerpt","src/components/commerce/product-template-components/atomic-product-excerpt/atomic-product-excerpt.tsx"],"sourcesContent":["@import '../../../common/expandable-text/expandable-text.pcss';\n","import {Schema, StringValue} from '@coveo/bueno';\nimport {Product} from '@coveo/headless/commerce';\nimport {Component, State, h, Element, Prop} from '@stencil/core';\nimport {\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {\n  ExpandableText,\n  TruncateAfter,\n} from '../../../common/expandable-text/expandable-text';\nimport {Hidden} from '../../../common/stencil-hidden';\nimport {CommerceBindings} from '../../atomic-commerce-interface/atomic-commerce-interface';\nimport {ProductContext} from '../product-template-decorators';\n\n/**\n * @alpha\n * The `atomic-product-excerpt` component renders the excerpt of a product generated at query time.\n */\n@Component({\n  tag: 'atomic-product-excerpt',\n  styleUrl: 'atomic-product-excerpt.pcss',\n  shadow: false,\n})\nexport class AtomicProductExcerpt\n  implements InitializableComponent<CommerceBindings>\n{\n  @InitializeBindings() public bindings!: CommerceBindings;\n  @ProductContext() private product!: Product;\n\n  @Element() hostElement!: HTMLElement;\n\n  public error!: Error;\n\n  @State() private isExpanded = false;\n  @State() private isTruncated = false;\n\n  private excerptText!: HTMLDivElement;\n  private resizeObserver: ResizeObserver;\n\n  /**\n   * The number of lines after which the product excerpt should be truncated. A value of \"none\" will disable truncation.\n   */\n  @Prop() public truncateAfter: TruncateAfter = '2';\n\n  /**\n   * Whether the excerpt should be collapsible after being expanded.\n   */\n  @Prop() public isCollapsible = false;\n\n  constructor() {\n    this.resizeObserver = new ResizeObserver(() => {\n      if (\n        this.excerptText &&\n        this.excerptText.scrollHeight > this.excerptText.offsetHeight\n      ) {\n        this.isTruncated = true;\n      } else {\n        this.isTruncated = false;\n      }\n    });\n    this.validateProps();\n  }\n\n  private validateProps() {\n    new Schema({\n      truncateAfter: new StringValue({\n        constrainTo: ['none', '1', '2', '3', '4'],\n      }),\n    }).validate({\n      truncateAfter: this.truncateAfter,\n    });\n  }\n\n  componentDidLoad() {\n    this.excerptText = this.hostElement.querySelector(\n      '.expandable-text'\n    ) as HTMLDivElement;\n    if (this.excerptText) {\n      this.resizeObserver.observe(this.excerptText);\n    }\n  }\n\n  private onToggleExpand(e?: MouseEvent) {\n    if (e) {\n      e.stopPropagation();\n    }\n\n    this.isExpanded = !this.isExpanded;\n  }\n\n  disconnectedCallback() {\n    this.resizeObserver.disconnect();\n  }\n\n  public render() {\n    const productExcerpt = this.product['excerpt'] ?? null;\n\n    if (!productExcerpt) {\n      return <Hidden />;\n    }\n\n    return (\n      <ExpandableText\n        isExpanded={this.isExpanded}\n        isTruncated={this.isTruncated}\n        truncateAfter={this.truncateAfter}\n        onToggleExpand={(e) => this.onToggleExpand(e)}\n        showMoreLabel={this.bindings.i18n.t('show-more')}\n        showLessLabel={this.bindings.i18n.t('show-less')}\n        isCollapsible={this.isCollapsible}\n      >\n        <atomic-product-text field=\"excerpt\"></atomic-product-text>\n      </ExpandableText>\n    );\n  }\n}\n"],"mappings":"obAAA,MAAMA,EAA0B,wUAChC,MAAAC,EAAeD,E,iXCuBFE,EAAoB,MA0B/B,WAAAC,CAAAC,G,UAhBiBC,KAAAC,WAAa,MACbD,KAAAE,YAAc,MAQhBF,KAAAG,cAA+B,IAK/BH,KAAAI,cAAgB,M,gBAdD,M,iBACC,M,mBAQe,I,mBAKf,MAG7BJ,KAAKK,eAAiB,IAAIC,gBAAe,KACvC,GACEN,KAAKO,aACLP,KAAKO,YAAYC,aAAeR,KAAKO,YAAYE,aACjD,CACAT,KAAKE,YAAc,I,KACd,CACLF,KAAKE,YAAc,K,KAGvBF,KAAKU,e,CAGC,aAAAA,GACN,IAAIC,EAAO,CACTR,cAAe,IAAIS,EAAY,CAC7BC,YAAa,CAAC,OAAQ,IAAK,IAAK,IAAK,SAEtCC,SAAS,CACVX,cAAeH,KAAKG,e,CAIxB,gBAAAY,GACEf,KAAKO,YAAcP,KAAKgB,YAAYC,cAClC,oBAEF,GAAIjB,KAAKO,YAAa,CACpBP,KAAKK,eAAea,QAAQlB,KAAKO,Y,EAI7B,cAAAY,CAAeC,GACrB,GAAIA,EAAG,CACLA,EAAEC,iB,CAGJrB,KAAKC,YAAcD,KAAKC,U,CAG1B,oBAAAqB,GACEtB,KAAKK,eAAekB,Y,CAGf,MAAAC,GACL,MAAMC,EAAiBzB,KAAK0B,QAAQ,YAAc,KAElD,IAAKD,EAAgB,CACnB,OAAOE,EAACC,EAAM,K,CAGhB,OACED,EAACE,EAAc,CACb5B,WAAYD,KAAKC,WACjBC,YAAaF,KAAKE,YAClBC,cAAeH,KAAKG,cACpBgB,eAAiBC,GAAMpB,KAAKmB,eAAeC,GAC3CU,cAAe9B,KAAK+B,SAASC,KAAKC,EAAE,aACpCC,cAAelC,KAAK+B,SAASC,KAAKC,EAAE,aACpC7B,cAAeJ,KAAKI,eAEpBuB,EAAA,uBAAqBQ,MAAM,Y,oCArFJC,EAAA,CAA5BC,K,+BACyBD,EAAA,CAAzBE,K","ignoreList":[]}