{"version":3,"names":["atomicCommerceProductListCss","AtomicCommerceProductListStyle0","AtomicCommerceProductList","this","loadingFlag","randomID","resultTemplateRegistered","templateHasError","isAppLoaded","numberOfPlaceholders","display","density","imageSize","setRenderFunction","productRenderingFunction","itemRenderingFunction","focusTarget","nextNewResultTarget","FocusTargetController","initialize","bindings","interfaceElement","type","productListing","buildProductListing","engine","summary","search","buildSearch","productTemplateProvider","ProductTemplateProvider","includeDefaultTemplate","templateElements","Array","from","host","querySelectorAll","getResultTemplateRegistered","getTemplateHasError","setResultTemplateRegistered","value","setTemplateHasError","productListCommon","ItemListCommon","engineSubscribe","subscribe","getCurrentNumberOfItems","productState","products","length","getIsLoading","isLoading","nextNewItemTarget","store","createAppLoadedListener","onSelectChildProduct","event","stopPropagation","child","detail","promoteChildToParent","productListingState","searchState","render","listClasses","computeListDisplayClasses","firstRequestExecuted","hasError","hasProducts","summaryState","h","ItemListGuard","key","hasTemplate","hasItems","DisplayWrapper","ResultsPlaceholdersGuard","displayPlaceholders","renderAsTable","renderAsGrid","renderAsList","getItemListDisplayClasses","logWarningIfNeeded","message","logger","warn","getInteractiveProduct","product","parentController","interactiveProduct","options","getPropsForAtomicProduct","renderingFunction","getResultId","permanentid","responseId","content","getTemplateContent","linkContent","getLinkTemplateContent","getEmptyLinkTemplateContent","map","i","propsForAtomicProduct","DisplayGrid","selectorForItem","item","clickUri","title","ec_name","setRef","element","setNewResultRef","select","warningMessage","beginDelayedSelect","cancelPendingSelect","firstItem","propsForTableColumns","templateContentForFirstItem","DisplayTable","DisplayTableRow","rowIndex","DisplayTableData","renderItem","ref","part","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/commerce/atomic-commerce-product-list/atomic-commerce-product-list.pcss?tag=atomic-commerce-product-list&encapsulation=shadow","src/components/commerce/atomic-commerce-product-list/atomic-commerce-product-list.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n@import '../../../utils/tailwind-utilities/link-style.tw.css';\n@import '../../common/item-list/styles/placeholders.pcss';\n@import '../../common/item-list/styles/table-display.pcss';\n@import '../../common/item-list/styles/list-display.pcss';\n@import '../../common/item-list/styles/grid-display.pcss';\n\n:host {\n  .result-link {\n    @apply link-style;\n  }\n  .result-grid {\n    grid-template-columns: repeat(5, minmax(0, 1fr));\n    justify-items: center;\n    & a {\n      justify-content: center;\n    }\n  }\n\n  .result-list {\n    display: flex;\n    flex-direction: column;\n\n    & .result-item {\n      width: 100%;\n      max-width: 600px;\n      display: flex;\n      flex-wrap: wrap;\n      & .result-detailsÂ  {\n        align-content: center;\n      }\n    }\n  }\n\n  @media (width >= theme(--breakpoint-desktop)) {\n    .result-grid {\n      display: grid;\n    }\n  }\n\n  @media not all and (width >= theme(--breakpoint-desktop)) {\n    .result-grid {\n      display: flex;\n      flex-direction: column;\n    }\n  }\n}\n\natomic-product:not(.hydrated) {\n  visibility: hidden;\n}\n","import {\n  buildProductListing,\n  ProductListingState,\n  ProductListing,\n  buildSearch,\n  SearchState,\n  Search,\n  Product,\n  Summary,\n  ProductListingSummaryState,\n  SearchSummaryState,\n} from '@coveo/headless/commerce';\nimport {\n  Component,\n  Element,\n  Listen,\n  Method,\n  Prop,\n  State,\n  h,\n} from '@stencil/core';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {FocusTargetController} from '../../../utils/stencil-accessibility-utils';\nimport {randomID} from '../../../utils/utils';\nimport {ResultsPlaceholdersGuard} from '../../common/atomic-result-placeholder/stencil-placeholders';\nimport {createAppLoadedListener} from '../../common/interface/store';\nimport {ItemListGuard} from '../../common/item-list/item-list-guard';\nimport {DisplayGrid} from '../../common/item-list/stencil-display-grid';\nimport {\n  DisplayTable,\n  DisplayTableData,\n  DisplayTableRow,\n} from '../../common/item-list/stencil-display-table';\nimport {DisplayWrapper} from '../../common/item-list/stencil-display-wrapper';\nimport {\n  ItemListCommon,\n  ItemRenderingFunction,\n} from '../../common/item-list/stencil-item-list-common';\nimport {\n  ItemDisplayDensity,\n  ItemDisplayImageSize,\n  ItemDisplayLayout,\n  getItemListDisplayClasses,\n} from '../../common/layout/display-options';\nimport {CommerceBindings} from '../atomic-commerce-interface/atomic-commerce-interface';\nimport {ProductTemplateProvider} from '../product-list/product-template-provider';\nimport {SelectChildProductEventArgs} from '../product-template-components/atomic-product-children/select-child-product-event';\n\n/**\n * @alpha\n * The `atomic-commerce-product-list` component is responsible for displaying products.\n *\n * @part result-list - The element containing the list of products.\n *\n * @slot default - The default slot where the product templates are defined.\n */\n@Component({\n  tag: 'atomic-commerce-product-list',\n  styleUrl: 'atomic-commerce-product-list.pcss',\n  shadow: true,\n})\nexport class AtomicCommerceProductList\n  implements InitializableComponent<CommerceBindings>\n{\n  @InitializeBindings() public bindings!: CommerceBindings;\n  public productListing!: ProductListing;\n  public search!: Search;\n  private loadingFlag = randomID('firstProductLoaded-');\n  private itemRenderingFunction: ItemRenderingFunction;\n  private nextNewResultTarget?: FocusTargetController;\n  private productTemplateProvider!: ProductTemplateProvider;\n  private productListCommon!: ItemListCommon;\n\n  @Element() public host!: HTMLDivElement;\n\n  @BindStateToController('productListing')\n  @State()\n  private productListingState!: ProductListingState;\n  @BindStateToController('search')\n  @State()\n  private searchState!: SearchState;\n  public summary!: Summary<ProductListingSummaryState | SearchSummaryState>;\n  @BindStateToController('summary')\n  @State()\n  private summaryState!: SearchSummaryState | ProductListingSummaryState;\n  @State() private resultTemplateRegistered = false;\n  @State() public error!: Error;\n  @State() private templateHasError = false;\n  @State() private isAppLoaded = false;\n\n  /**\n   * The desired number of placeholders to display while the product list is loading.\n   */\n  @Prop({reflect: true}) numberOfPlaceholders = 24;\n\n  /**\n   * The desired layout to use when displaying products. Layouts affect how many products to display per row and how visually distinct they are from each other.\n   */\n  @Prop({reflect: true}) display: ItemDisplayLayout = 'grid'; // TODO KIT-3640 - Support 'table', or use ItemDisplayBasicLayout type.\n\n  /**\n   * The spacing of various elements in the product list, including the gap between products, the gap between parts of a product, and the font sizes of different parts in a product.\n   */\n  @Prop({reflect: true}) density: ItemDisplayDensity = 'normal';\n\n  /**\n   * The expected size of the image displayed for products.\n   */\n  @Prop({reflect: true}) imageSize: ItemDisplayImageSize = 'small';\n\n  /**\n   * Sets a rendering function to bypass the standard HTML template mechanism for rendering products.\n   * You can use this function while working with web frameworks that don't use plain HTML syntax, e.g., React, Angular or Vue.\n   *\n   * Do not use this method if you integrate Atomic in a plain HTML deployment.\n   *\n   * @param productRenderingFunction\n   */\n  @Method() public async setRenderFunction(\n    productRenderingFunction: ItemRenderingFunction\n  ) {\n    this.itemRenderingFunction = productRenderingFunction;\n  }\n\n  public get focusTarget() {\n    if (!this.nextNewResultTarget) {\n      this.nextNewResultTarget = new FocusTargetController(this);\n    }\n    return this.nextNewResultTarget;\n  }\n\n  public initialize() {\n    if (this.bindings.interfaceElement.type === 'product-listing') {\n      this.productListing = buildProductListing(this.bindings.engine);\n      this.summary = this.productListing.summary();\n    } else {\n      this.search = buildSearch(this.bindings.engine);\n      this.summary = this.search.summary();\n    }\n\n    this.productTemplateProvider = new ProductTemplateProvider({\n      includeDefaultTemplate: true,\n      templateElements: Array.from(\n        this.host.querySelectorAll('atomic-product-template')\n      ),\n      getResultTemplateRegistered: () => this.resultTemplateRegistered,\n      getTemplateHasError: () => this.templateHasError,\n      setResultTemplateRegistered: (value: boolean) => {\n        this.resultTemplateRegistered = value;\n      },\n      setTemplateHasError: (value: boolean) => {\n        this.templateHasError = value;\n      },\n    });\n\n    this.productListCommon = new ItemListCommon({\n      engineSubscribe: this.bindings.engine.subscribe,\n      getCurrentNumberOfItems: () => this.productState.products.length,\n      getIsLoading: () => this.productState.isLoading,\n      host: this.host,\n      loadingFlag: this.loadingFlag,\n      nextNewItemTarget: this.focusTarget,\n      store: this.bindings.store,\n    });\n    createAppLoadedListener(this.bindings.store, (isAppLoaded) => {\n      this.isAppLoaded = isAppLoaded;\n    });\n  }\n\n  @Listen('atomic/selectChildProduct')\n  public onSelectChildProduct(event: CustomEvent<SelectChildProductEventArgs>) {\n    event.stopPropagation();\n    const child = event.detail.child;\n\n    if (this.bindings.interfaceElement.type === 'product-listing') {\n      this.productListing.promoteChildToParent(child);\n    } else if (this.bindings.interfaceElement.type === 'search') {\n      this.search.promoteChildToParent(child);\n    }\n  }\n\n  get productState() {\n    return this.bindings.interfaceElement.type === 'product-listing'\n      ? this.productListingState\n      : this.searchState;\n  }\n\n  public render() {\n    const listClasses = this.computeListDisplayClasses();\n\n    const {firstRequestExecuted, hasError, hasProducts} = this.summaryState;\n    return (\n      <ItemListGuard\n        hasError={hasError}\n        hasTemplate={this.resultTemplateRegistered}\n        templateHasError={this.productTemplateProvider.hasError}\n        firstRequestExecuted={firstRequestExecuted}\n        hasItems={hasProducts}\n      >\n        <DisplayWrapper display={this.display} listClasses={listClasses}>\n          <ResultsPlaceholdersGuard\n            density={this.density}\n            display={this.display}\n            imageSize={this.imageSize}\n            displayPlaceholders={!this.isAppLoaded}\n            numberOfPlaceholders={this.numberOfPlaceholders}\n          ></ResultsPlaceholdersGuard>\n          {this.display === 'table'\n            ? this.renderAsTable()\n            : this.display === 'grid'\n              ? this.renderAsGrid()\n              : this.renderAsList()}\n        </DisplayWrapper>\n      </ItemListGuard>\n    );\n  }\n\n  private computeListDisplayClasses() {\n    const displayPlaceholders = !this.isAppLoaded;\n\n    return getItemListDisplayClasses(\n      this.display,\n      this.density,\n      this.imageSize,\n\n      this.productState?.isLoading,\n      displayPlaceholders\n    );\n  }\n\n  private logWarningIfNeeded(message?: string) {\n    if (message) {\n      this.bindings.engine.logger.warn(message);\n    }\n  }\n\n  private getInteractiveProduct(product: Product) {\n    const parentController =\n      this.bindings.interfaceElement.type === 'product-listing'\n        ? this.productListing\n        : this.search;\n\n    return parentController.interactiveProduct({options: {product}});\n  }\n\n  private getPropsForAtomicProduct(product: Product) {\n    return {\n      interactiveProduct: this.getInteractiveProduct(product),\n      product,\n      renderingFunction: this.itemRenderingFunction,\n      loadingFlag: this.loadingFlag,\n      key: this.productListCommon.getResultId(\n        product.permanentid,\n        this.productState.responseId,\n        this.density,\n        this.imageSize\n      ),\n      content: this.productTemplateProvider.getTemplateContent(product),\n      linkContent:\n        this.display === 'grid'\n          ? this.productTemplateProvider.getLinkTemplateContent(product)\n          : this.productTemplateProvider.getEmptyLinkTemplateContent(),\n      store: this.bindings.store,\n      density: this.density,\n      imageSize: this.imageSize,\n      display: this.display,\n    };\n  }\n\n  private renderAsGrid() {\n    return this.productState.products.map((product, i) => {\n      const propsForAtomicProduct = this.getPropsForAtomicProduct(product);\n      const {interactiveProduct} = propsForAtomicProduct;\n      return (\n        <DisplayGrid\n          selectorForItem=\"atomic-product\"\n          item={{\n            ...product,\n            clickUri: product.clickUri,\n            title: product.ec_name ?? 'temp',\n          }}\n          {...propsForAtomicProduct.interactiveProduct}\n          setRef={(element) =>\n            element && this.productListCommon.setNewResultRef(element, i)\n          }\n          select={() => {\n            this.logWarningIfNeeded(interactiveProduct.warningMessage);\n            interactiveProduct.select();\n          }}\n          beginDelayedSelect={() => {\n            this.logWarningIfNeeded(interactiveProduct.warningMessage);\n            interactiveProduct.beginDelayedSelect();\n          }}\n          cancelPendingSelect={() => {\n            this.logWarningIfNeeded(interactiveProduct.warningMessage);\n            interactiveProduct.cancelPendingSelect();\n          }}\n        >\n          <atomic-product {...propsForAtomicProduct}></atomic-product>\n        </DisplayGrid>\n      );\n    });\n  }\n\n  private renderAsTable() {\n    if (this.productState.products.length > 0) {\n      return;\n    }\n    const listClasses = this.computeListDisplayClasses();\n    const firstItem = this.productState.products[0];\n\n    const propsForTableColumns = {\n      firstItem,\n      templateContentForFirstItem:\n        this.productTemplateProvider.getTemplateContent(firstItem),\n    };\n\n    return (\n      <DisplayTable\n        {...propsForTableColumns}\n        listClasses={listClasses}\n        logger={this.bindings.engine.logger}\n        itemRenderingFunction={this.itemRenderingFunction}\n        host={this.host}\n      >\n        {this.productState.products.map((product, i) => {\n          const propsForAtomicProduct = this.getPropsForAtomicProduct(product);\n          return (\n            <DisplayTableRow\n              {...propsForAtomicProduct}\n              rowIndex={i}\n              setRef={(element) =>\n                element && this.productListCommon.setNewResultRef(element, i)\n              }\n            >\n              <DisplayTableData\n                {...propsForTableColumns}\n                {...propsForAtomicProduct}\n                renderItem={(content) => {\n                  return (\n                    <atomic-product\n                      {...this}\n                      {...propsForAtomicProduct}\n                      content={content}\n                    ></atomic-product>\n                  );\n                }}\n              ></DisplayTableData>\n            </DisplayTableRow>\n          );\n        })}\n      </DisplayTable>\n    );\n  }\n\n  private renderAsList() {\n    return this.productState.products.map((product, i) => {\n      const propsForAtomicProduct = this.getPropsForAtomicProduct(product);\n      return (\n        <atomic-product\n          {...propsForAtomicProduct}\n          ref={(element) =>\n            element && this.productListCommon.setNewResultRef(element, i)\n          }\n          part=\"outline\"\n        ></atomic-product>\n      );\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]}