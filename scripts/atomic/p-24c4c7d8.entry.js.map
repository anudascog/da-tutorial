{"version":3,"names":["tabBarCss","AtomicTabBarStyle0","TabBar","this","popoverTabs","getElementWidth","element","parseFloat","window","getComputedStyle","getPropertyValue","hideElement","el","style","visibility","ariaHidden","showElement","updateTabVisibility","tabs","isVisible","tabCount","tabsFromSlot","length","forEach","tab","index","setProperty","String","updatePopoverTabs","overflowingTabs","map","h","Button","part","class","ariaLabel","label","title","onClick","select","tabPopover","toggle","setTabButtonMaxWidth","displayedTabs","popoverWidth","updateTabsDisplay","updatePopoverPosition","setButtonVisibility","render","Host","exportparts","isTab","tagName","test","Array","from","host","querySelectorAll","filter","selectedTab","find","active","slotContentWidth","reduce","total","containerWidth","isOverflow","shadowRoot","querySelector","containerRelativeRightPosition","getBoundingClientRect","right","selectedTabRelativeRightPosition","isBeforeSelectedTab","minimumWidthNeeded","rightPositionLimit","includes","lastDisplayedTab","lastDisplayedTabRightPosition","left","resolveResult","event","stopPropagation","componentWillUpdate","componentDidLoad","resizeObserver","ResizeObserver","observe","disconnectedCallback","disconnect","tabPopoverCss","AtomicTabPopoverStyle0","TabPopover","show","isOpen","popoverId","initialize","initializePopover","popupRef","classList","add","handleKeyDown","e","key","preventDefault","navigatePopover","getTabButtons","slot","children","assignedElements","getCurrentTabIndex","elements","MAX_SHADOW_DEPTH","currentElement","document","activeElement","depth","HTMLButtonElement","indexOf","tabButtons","currentIndex","startIndex","nextIndex","focus","slotElements","hasTabs","closePopoverOnFocusOut","isMovingToSlottedElement","some","relatedTarget","contains","closePopover","renderDropdownButton","bindings","i18n","t","buttonClasses","ref","buttonRef","ariaExpanded","ariaControls","join","icon","ArrowBottomIcon","renderBackdrop","renderPopover","id","componentDidRender","popperInstance","createPopper","placement","modifiers","preventOverflow","componentDidUpdate","forceUpdate","onFocusout","__decorate","InitializeBindings"],"sources":["src/components/common/tabs/tab-bar.pcss?tag=atomic-tab-bar&encapsulation=shadow","src/components/common/tabs/tab-bar.tsx","src/components/common/tabs/tab-popover.pcss?tag=atomic-tab-popover&encapsulation=shadow","src/components/common/tabs/tab-popover.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n\n:host {\n  white-space: nowrap;\n  width: 100%;\n  overflow-x: visible;\n  display: flex;\n  position: relative;\n}\n","import {h, Component, Element, Host, State, Listen} from '@stencil/core';\nimport {Button} from '../stencil-button';\nimport {TabCommonElement} from './tab-common';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-tab-bar',\n  shadow: true,\n  styleUrl: 'tab-bar.pcss',\n})\nexport class TabBar {\n  @Element() private host!: HTMLElement;\n\n  @State()\n  private popoverTabs: (typeof Button)[] = [];\n\n  private resizeObserver: ResizeObserver | undefined;\n\n  private get tabsFromSlot(): TabCommonElement[] {\n    const isTab = (tagName: string) =>\n      /atomic-.+-tab$/i.test(tagName) || /tab-button$/i.test(tagName);\n    return Array.from(this.host.querySelectorAll<TabCommonElement>('*')).filter(\n      (element) => isTab(element.tagName)\n    );\n  }\n\n  private get selectedTab() {\n    return this.tabsFromSlot.find((tab) => tab.active);\n  }\n\n  private get slotContentWidth() {\n    return this.tabsFromSlot.reduce(\n      (total, el) =>\n        total +\n        parseFloat(window.getComputedStyle(el).getPropertyValue('width')),\n      0\n    );\n  }\n\n  private get containerWidth() {\n    return parseFloat(\n      window.getComputedStyle(this.host).getPropertyValue('width')\n    );\n  }\n\n  private get isOverflow() {\n    return this.slotContentWidth > this.containerWidth;\n  }\n\n  private get tabPopover() {\n    return this.host.shadowRoot?.querySelector('atomic-tab-popover');\n  }\n\n  private get popoverWidth() {\n    return this.tabPopover ? this.getElementWidth(this.tabPopover) : 0;\n  }\n\n  private get overflowingTabs() {\n    const containerRelativeRightPosition =\n      this.host.getBoundingClientRect().right;\n    const selectedTabRelativeRightPosition =\n      this.selectedTab?.getBoundingClientRect().right;\n\n    return this.tabsFromSlot.filter((element) => {\n      const isBeforeSelectedTab = selectedTabRelativeRightPosition\n        ? selectedTabRelativeRightPosition >\n          element.getBoundingClientRect().right\n        : false;\n\n      const minimumWidthNeeded = isBeforeSelectedTab\n        ? this.popoverWidth + this.getElementWidth(this.selectedTab)\n        : this.popoverWidth;\n\n      const rightPositionLimit = !this.isOverflow\n        ? containerRelativeRightPosition\n        : containerRelativeRightPosition - minimumWidthNeeded;\n\n      return (\n        element.getBoundingClientRect().right > rightPositionLimit &&\n        !element.active\n      );\n    });\n  }\n\n  private get displayedTabs() {\n    return this.tabsFromSlot.filter((el) => !this.overflowingTabs.includes(el));\n  }\n\n  private get lastDisplayedTab() {\n    const displayedTabs = this.displayedTabs;\n    return displayedTabs[displayedTabs.length - 1];\n  }\n\n  private get lastDisplayedTabRightPosition() {\n    return (\n      this.lastDisplayedTab.getBoundingClientRect().right -\n      this.host.getBoundingClientRect().left\n    );\n  }\n\n  private updatePopoverPosition() {\n    this.tabPopover?.style.setProperty(\n      'left',\n      `${this.displayedTabs.length ? this.lastDisplayedTabRightPosition : 0}px`\n    );\n  }\n\n  private getElementWidth = (element?: Element) => {\n    return element\n      ? parseFloat(window.getComputedStyle(element).getPropertyValue('width'))\n      : 0;\n  };\n\n  private hideElement = (el: HTMLElement) => {\n    el.style.visibility = 'hidden';\n    el.ariaHidden = 'true';\n  };\n\n  private showElement = (el: HTMLElement) => {\n    el.style.visibility = 'visible';\n    el.ariaHidden = 'false';\n  };\n\n  private updateTabVisibility = (\n    tabs: TabCommonElement[],\n    isVisible: boolean\n  ) => {\n    const tabCount = this.tabsFromSlot.length;\n\n    tabs.forEach((tab, index) => {\n      tab.style.setProperty(\n        'order',\n        String(isVisible ? index + 1 : tabCount - tabs.length + index + 1)\n      );\n      if (isVisible) {\n        this.showElement(tab);\n      } else {\n        this.hideElement(tab);\n      }\n    });\n  };\n\n  private updatePopoverTabs = () => {\n    this.popoverTabs = this.overflowingTabs.map((tab) => (\n      <li>\n        <Button\n          part=\"popover-tab\"\n          style=\"text-transparent\"\n          class=\"w-full truncate rounded px-4 py-2 text-left font-semibold\"\n          ariaLabel={tab.label}\n          title={tab.label}\n          onClick={() => {\n            tab.select();\n            this.updatePopoverTabs();\n            this.tabPopover?.toggle();\n          }}\n        >\n          {tab.label}\n        </Button>\n      </li>\n    ));\n  };\n\n  private setTabButtonMaxWidth = () => {\n    this.displayedTabs.forEach((tab) => {\n      tab.style.setProperty('max-width', `calc(100% - ${this.popoverWidth}px)`);\n    });\n  };\n\n  private updateTabsDisplay = () => {\n    this.updateTabVisibility(this.overflowingTabs, false);\n    this.updateTabVisibility(this.displayedTabs, true);\n    this.setTabButtonMaxWidth();\n    this.updatePopoverPosition();\n    this.updatePopoverTabs();\n    this.tabPopover?.setButtonVisibility(!!this.overflowingTabs.length);\n  };\n\n  @Listen('atomic/tabRendered')\n  public resolveResult(event: CustomEvent<{}>) {\n    event.stopPropagation();\n    this.updatePopoverTabs();\n  }\n  public componentWillUpdate() {\n    this.updateTabsDisplay();\n  }\n\n  public componentDidLoad() {\n    this.resizeObserver = new ResizeObserver(() => {\n      this.updateTabsDisplay();\n    });\n    this.resizeObserver.observe(this.host);\n  }\n\n  public disconnectedCallback() {\n    this.resizeObserver?.disconnect();\n  }\n\n  public render = () => {\n    return (\n      <Host class=\"overflow-x-clip overflow-y-visible\">\n        <slot></slot>\n        <atomic-tab-popover exportparts=\"popover-button, value-label, arrow-icon, backdrop overflow-tabs\">\n          {this.popoverTabs}\n        </atomic-tab-popover>\n      </Host>\n    );\n  };\n}\n","@import '../../../global/global.pcss';\n\n:host {\n  position: absolute;\n}\n\n:host(.visibility-hidden) {\n  visibility: hidden;\n}\n\n[part='overflow-tabs'] {\n  flex-direction: column;\n  max-width: 150px;\n\n  button {\n    text-align: start;\n  }\n}\n","import {\n  createPopperLite as createPopper,\n  preventOverflow,\n  Instance as PopperInstance,\n} from '@popperjs/core';\nimport {\n  Component,\n  h,\n  Listen,\n  State,\n  Element,\n  Host,\n  Method,\n} from '@stencil/core';\nimport ArrowBottomIcon from '../../../images/arrow-bottom-rounded.svg';\nimport {\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {Bindings} from '../../search/atomic-search-interface/atomic-search-interface';\nimport {Button} from '../stencil-button';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-tab-popover',\n  shadow: true,\n  styleUrl: 'tab-popover.pcss',\n})\nexport class TabPopover implements InitializableComponent {\n  @Element() private host!: HTMLElement;\n\n  @InitializeBindings() public bindings!: Bindings;\n\n  @State()\n  public show = false;\n\n  @State()\n  public error!: Error;\n\n  @State()\n  private isOpen = false;\n\n  private buttonRef!: HTMLElement;\n  private popupRef!: HTMLElement;\n  private popperInstance?: PopperInstance;\n  public popoverId = 'atomic-tab-popover';\n\n  public initialize() {}\n\n  private initializePopover() {\n    this.popupRef.classList.add('popover-nested');\n  }\n\n  @Listen('keydown')\n  public handleKeyDown(e: KeyboardEvent) {\n    if (!this.isOpen) {\n      return;\n    }\n\n    if (e.key === 'Escape') {\n      this.toggle();\n    } else if (e.key === 'ArrowDown' || e.key === 'ArrowUp') {\n      e.preventDefault();\n      this.navigatePopover(e.key);\n    }\n  }\n\n  private getTabButtons(): HTMLButtonElement[] {\n    const slot = this.popupRef.children[0] as HTMLSlotElement;\n    return Array.from(slot.assignedElements())\n      .map((el) => (el as HTMLElement).querySelector('button'))\n      .filter((el): el is HTMLButtonElement => el !== null);\n  }\n\n  private getCurrentTabIndex(elements: HTMLButtonElement[]): number {\n    const MAX_SHADOW_DEPTH = 3;\n    let currentElement = document.activeElement;\n    let depth = 0;\n\n    while (currentElement?.shadowRoot && depth < MAX_SHADOW_DEPTH) {\n      currentElement = currentElement.shadowRoot.activeElement;\n      depth++;\n    }\n\n    if (!(currentElement instanceof HTMLButtonElement)) {\n      return -1;\n    }\n\n    return elements.indexOf(currentElement);\n  }\n\n  private navigatePopover(key: string): void {\n    const tabButtons = this.getTabButtons();\n    if (!tabButtons.length) {\n      return;\n    }\n\n    const currentIndex = this.getCurrentTabIndex(tabButtons);\n\n    const startIndex = currentIndex > -1 ? currentIndex : -1;\n\n    let nextIndex;\n    if (currentIndex === -1) {\n      nextIndex = key === 'ArrowDown' ? 0 : tabButtons.length - 1;\n    } else {\n      nextIndex =\n        key === 'ArrowDown'\n          ? (startIndex + 1) % tabButtons.length\n          : (startIndex - 1 + tabButtons.length) % tabButtons.length;\n    }\n\n    tabButtons[nextIndex]?.focus();\n  }\n\n  get slotElements() {\n    return this.host.children;\n  }\n\n  get hasTabs() {\n    return !!this.popupRef.children.length;\n  }\n\n  @Method()\n  public async toggle() {\n    this.isOpen = !this.isOpen;\n  }\n\n  @Method()\n  public async setButtonVisibility(isVisible: boolean) {\n    this.show = isVisible;\n  }\n\n  @Method()\n  public async closePopoverOnFocusOut(event: FocusEvent) {\n    const slot = this.popupRef.children[0] as HTMLSlotElement;\n    const assignedElements = slot.assignedElements() as HTMLElement[];\n\n    const isMovingToSlottedElement = assignedElements.some(\n      (element) =>\n        element === event.relatedTarget ||\n        element.contains(event.relatedTarget as Node)\n    );\n\n    if (isMovingToSlottedElement) {\n      return;\n    }\n\n    if (!this.popupRef.contains(event.relatedTarget as Node)) {\n      this.closePopover();\n    }\n  }\n\n  private closePopover() {\n    this.isOpen = false;\n  }\n\n  private renderDropdownButton() {\n    const label = this.bindings?.i18n.t('more');\n    const ariaLabel = this.bindings?.i18n.t('tab-popover', {label});\n    const buttonClasses = [\n      'relative',\n      'pb-1',\n      'mt-1',\n      'group',\n      'mr-6',\n      'font-semibold',\n    ];\n\n    return (\n      <Button\n        ref={(el) => (this.buttonRef = el!)}\n        style=\"text-transparent\"\n        onClick={() => this.toggle()}\n        part=\"popover-button\"\n        ariaExpanded={`${this.isOpen}`}\n        ariaLabel={ariaLabel}\n        ariaControls={this.popoverId}\n        class={`${buttonClasses.join(' ')}`}\n      >\n        <span\n          title={label}\n          part=\"value-label\"\n          class={\n            'group-hover:text-primary-light group-focus:text-primary mr-1.5 truncate'\n          }\n        >\n          {label}\n        </span>\n        <atomic-icon\n          part=\"arrow-icon\"\n          class={`group-hover:text-primary-light group-focus:text-primary ml-auto w-2 ${\n            this.isOpen ? 'rotate-180' : ''\n          }`}\n          icon={ArrowBottomIcon}\n        ></atomic-icon>\n      </Button>\n    );\n  }\n\n  private renderBackdrop() {\n    return (\n      <div\n        part=\"backdrop\"\n        class=\"fixed top-0 right-0 bottom-0 left-0 z-9998 cursor-pointer bg-transparent\"\n        onClick={() => this.toggle()}\n      ></div>\n    );\n  }\n\n  private renderPopover() {\n    return (\n      <div class={`relative ${this.isOpen ? 'z-9999' : ''}`}>\n        {this.renderDropdownButton()}\n        <ul\n          id={this.popoverId}\n          ref={(el) => (this.popupRef = el!)}\n          part=\"overflow-tabs\"\n          class={`bg-background border-neutral absolute rounded-lg border py-2 shadow-lg ${\n            this.isOpen ? 'flex' : 'hidden'\n          }`}\n        >\n          <slot></slot>\n        </ul>\n      </div>\n    );\n  }\n\n  public componentDidRender() {\n    if (this.popperInstance || !this.buttonRef || !this.popupRef) {\n      return;\n    }\n\n    this.popperInstance = createPopper(this.buttonRef, this.popupRef, {\n      placement: 'bottom-end',\n      modifiers: [preventOverflow],\n    });\n    this.initializePopover();\n  }\n\n  public componentDidUpdate() {\n    this.popperInstance?.forceUpdate();\n  }\n\n  public render() {\n    return (\n      <Host\n        onFocusout={(event: FocusEvent) => this.closePopoverOnFocusOut(event)}\n        class={this.show ? '' : 'visibility-hidden'}\n        aria-hidden={!this.show}\n      >\n        {this.renderPopover()}\n        {this.isOpen && this.renderBackdrop()}\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}