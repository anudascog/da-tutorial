{"version":3,"names":["readFromObject","object","key","keys","split","current","k","undefined"],"sources":["src/utils/object-utils.tsx"],"sourcesContent":["export function readFromObject<T extends object>(\n  object: T,\n  key: string\n): string | undefined {\n  const keys = key.split('.');\n  let current: unknown = object;\n\n  for (const k of keys) {\n    if (current && typeof current === 'object' && k in current) {\n      current = (current as Record<string, unknown>)[k];\n    } else {\n      return undefined;\n    }\n  }\n\n  return typeof current === 'string' ? current : undefined;\n}\n"],"mappings":"SAAgBA,EACdC,EACAC,GAEA,MAAMC,EAAOD,EAAIE,MAAM,KACvB,IAAIC,EAAmBJ,EAEvB,IAAK,MAAMK,KAAKH,EAAM,CACpB,GAAIE,UAAkBA,IAAY,UAAYC,KAAKD,EAAS,CAC1DA,EAAWA,EAAoCC,E,KAC1C,CACL,OAAOC,S,EAIX,cAAcF,IAAY,SAAWA,EAAUE,SACjD,Q","ignoreList":[]}