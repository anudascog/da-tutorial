{"version":3,"names":["getAnalyticsConfig","recsConfig","enabled","analytics","analyticsMode","getNextAnalyticsConfig","getLegacyAnalyticsConfig","analyticsClientMiddleware","event","payload","augmentAnalytics","defaultAnalyticsConfig","augmentAnalyticsConfigWithDocument","augmentAnalyticsConfigWithAtomicVersion","result","augmentWithExternalMiddleware","augmentAnalyticsWithAtomicVersion","createRecsStore","store","createBaseStore","loadingFlags","iconAssetsPath","resultList","undefined","unsetLoadingFlag","loadingFlag","setLoadingFlag","getUniqueIDFromEngine","engine","state","recommendation","searchUid","atomicRecsInterfaceCss","AtomicRecsInterfaceStyle0","FirstRecommendationExecutedFlag","AtomicRecsInterface","constructor","hostRef","this","initialized","language","fieldsToInclude","languageAssetsPath","commonInterfaceHelper","CommonAtomicInterfaceHelper","promise","componentWillLoadCalledPromise","resolve","componentWillLoadResolver","Promise","withResolvers","i18Initialized","i18n","i18next","createInstance","bindings","interfaceElement","host","connectedCallback","componentWillLoad","CspNonce","setNonce","initialize","options","internalInitialization","initEngine","initializeWithRecommendationEngine","pipeline","console","warn","mismatchedInterfaceAndEnginePropError","searchHub","getRecommendations","engineIsCreated","error","dispatch","loadRecommendationActions","updateIconAssetsPath","handleInitialization","onComponentInitializing","updateLanguage","updateSearchConfiguration","loadSearchConfigurationActions","locale","onLanguageChange","toggleAnalytics","onAnalyticsChange","registerFieldsToInclude","fields","EcommerceDefaultFieldsToInclude","concat","filter","field","loadFieldActions","all","onInitialization","markParentAsReady","analyticsConfig","buildRecommendationEngine","configuration","timezone","loggerOptions","level","logLevel","render","h","key","__decorate","ArrayProp"],"sources":["src/components/recommendations/atomic-recs-interface/analytics-config.ts","src/components/recommendations/atomic-recs-interface/store.ts","src/components/recommendations/atomic-recs-interface/atomic-recs-interface.pcss?tag=atomic-recs-interface&encapsulation=shadow","src/components/recommendations/atomic-recs-interface/atomic-recs-interface.tsx"],"sourcesContent":["import {\n  AnalyticsConfiguration,\n  RecommendationEngineConfiguration,\n} from '@coveo/headless/recommendation';\nimport {\n  AnalyticsPayload,\n  augmentAnalyticsWithAtomicVersion,\n  augmentWithExternalMiddleware,\n  augmentAnalyticsConfigWithDocument,\n  augmentAnalyticsConfigWithAtomicVersion,\n  getNextAnalyticsConfig,\n} from '../../common/interface/analytics-config';\n\nexport function getAnalyticsConfig(\n  recsConfig: RecommendationEngineConfiguration,\n  enabled: boolean\n): AnalyticsConfiguration {\n  switch (recsConfig.analytics?.analyticsMode) {\n    case 'next':\n      return getNextAnalyticsConfig(recsConfig, enabled);\n    case 'legacy':\n    default:\n      return getLegacyAnalyticsConfig(recsConfig, enabled);\n  }\n}\n\nfunction getLegacyAnalyticsConfig(\n  recsConfig: RecommendationEngineConfiguration,\n  enabled: boolean\n): AnalyticsConfiguration {\n  const analyticsClientMiddleware = (\n    event: string,\n    payload: AnalyticsPayload\n  ) => augmentAnalytics(event, payload, recsConfig);\n\n  const defaultAnalyticsConfig: AnalyticsConfiguration = {\n    analyticsClientMiddleware,\n    enabled,\n    ...augmentAnalyticsConfigWithDocument(),\n    ...augmentAnalyticsConfigWithAtomicVersion(),\n  };\n\n  if (recsConfig.analytics) {\n    return {\n      ...defaultAnalyticsConfig,\n      ...recsConfig.analytics,\n      analyticsClientMiddleware,\n    };\n  }\n  return defaultAnalyticsConfig;\n}\n\nfunction augmentAnalytics(\n  event: string,\n  payload: AnalyticsPayload,\n  recsConfig: RecommendationEngineConfiguration\n) {\n  let result = augmentWithExternalMiddleware(event, payload, recsConfig);\n  result = augmentAnalyticsWithAtomicVersion(result);\n  return result;\n}\n","import {RecommendationEngine} from '@coveo/headless/recommendation';\nimport {\n  BaseStore,\n  createBaseStore,\n  ResultListInfo,\n  setLoadingFlag,\n  unsetLoadingFlag,\n} from '../../common/interface/store';\n\ninterface Data {\n  loadingFlags: string[];\n  iconAssetsPath: string;\n  resultList: ResultListInfo | undefined;\n}\n\nexport type RecsStore = BaseStore<Data> & {\n  unsetLoadingFlag(loadingFlag: string): void;\n  setLoadingFlag(flag: string): void;\n};\n\nexport function createRecsStore(): RecsStore {\n  const store = createBaseStore<Data>({\n    loadingFlags: [],\n    iconAssetsPath: '',\n    resultList: undefined,\n  });\n\n  return {\n    ...store,\n\n    unsetLoadingFlag(loadingFlag: string) {\n      unsetLoadingFlag(store, loadingFlag);\n    },\n\n    setLoadingFlag(loadingFlag: string) {\n      setLoadingFlag(store, loadingFlag);\n    },\n\n    getUniqueIDFromEngine(engine: RecommendationEngine): string {\n      return engine.state.recommendation.searchUid;\n    },\n  };\n}\n","@import '../../../global/global.pcss';\n\n:host {\n  display: block;\n}\n","import {markParentAsReady} from '@/src/utils/init-queue';\nimport {\n  RecommendationEngine,\n  RecommendationEngineConfiguration,\n  loadFieldActions,\n  EcommerceDefaultFieldsToInclude,\n  buildRecommendationEngine,\n  loadRecommendationActions,\n  loadSearchConfigurationActions,\n  LogLevel as RecsLogLevel,\n} from '@coveo/headless/recommendation';\nimport {\n  Component,\n  Element,\n  h,\n  Listen,\n  Method,\n  Prop,\n  Watch,\n  State,\n  setNonce,\n} from '@stencil/core';\nimport i18next, {i18n} from 'i18next';\nimport {InitializeEvent} from '../../../utils/initialization-utils';\nimport {ArrayProp} from '../../../utils/props-utils';\nimport {CommonBindings} from '../../common/interface/bindings';\nimport {\n  StencilBaseAtomicInterface,\n  CommonAtomicInterfaceHelper,\n  mismatchedInterfaceAndEnginePropError,\n} from '../../common/interface/interface-common-stencil';\nimport {getAnalyticsConfig} from './analytics-config';\nimport {createRecsStore, RecsStore} from './store';\n\nconst FirstRecommendationExecutedFlag = 'firstRecommendationExecuted';\nexport type RecsInitializationOptions = RecommendationEngineConfiguration;\nexport type RecsBindings = CommonBindings<\n  RecommendationEngine,\n  RecsStore,\n  HTMLAtomicRecsInterfaceElement\n>;\n\n/**\n * The `atomic-recs-interface` component is the parent to all other atomic components in a recommendation interface. It handles the headless recommendation engine and localization configurations.\n * @slot default - The default slot where you can add child components to the recommendation interface.\n *\n */\n@Component({\n  tag: 'atomic-recs-interface',\n  styleUrl: 'atomic-recs-interface.pcss',\n  shadow: true,\n})\nexport class AtomicRecsInterface\n  implements StencilBaseAtomicInterface<RecommendationEngine>\n{\n  private store = createRecsStore();\n  private commonInterfaceHelper: CommonAtomicInterfaceHelper<RecommendationEngine>;\n  private initialized = false;\n\n  @Element() public host!: HTMLAtomicRecsInterfaceElement;\n\n  @State() public error?: Error;\n\n  /**\n   * The recommendation interface [query pipeline](https://docs.coveo.com/en/180/).\n   *\n   * If the recommendation interface is initialized using [`initializeWithRecommendationEngine`](https://docs.coveo.com/en/atomic/latest/reference/recommendation-components/atomic-recs-interface/#initializewithrecommendationengine), the query pipeline should instead be configured in the target engine.\n   */\n  @Prop({reflect: true, mutable: true}) public pipeline?: string;\n\n  /**\n   * The recommendation interface [search hub](https://docs.coveo.com/en/1342/).\n   *\n   * If the recommendation interface is initialized using [`initializeWithRecommendationEngine`](https://docs.coveo.com/en/atomic/latest/reference/recommendation-components/atomic-recs-interface/#initializewithrecommendationengine), the search hub should instead be configured in the target engine.\n   */\n  @Prop({reflect: true, mutable: true}) public searchHub?: string;\n\n  /**\n   * The [tz database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) identifier of the time zone to use to correctly interpret dates in the query expression, facets, and result items.\n   * By default, the timezone will be [guessed](https://day.js.org/docs/en/timezone/guessing-user-timezone).\n   *\n   * Example: \"America/Montreal\"\n   */\n  @Prop({reflect: true}) public timezone?: string;\n\n  /**\n   * The recommendation interface headless engine.\n   */\n  @Prop({mutable: true}) public engine?: RecommendationEngine;\n\n  /**\n   * Whether analytics should be enabled.\n   */\n  @Prop({reflect: true}) public analytics = true;\n\n  /**\n   * The recommendation interface i18next instance.\n   */\n  @Prop() public i18n: i18n;\n\n  /**\n   * The severity level of the messages to log in the console.\n   */\n  @Prop({reflect: true}) public logLevel?: RecsLogLevel;\n\n  /**\n   * The recommendation interface language.\n   */\n  @Prop({reflect: true}) public language = 'en';\n\n  /**\n   * A list of non-default fields to include in the query results.\n   *\n   * Specify the property as an array using a JSON string representation:\n   * ```html\n   * <atomic-recs-interface fields-to-include='[\"fieldA\", \"fieldB\"]'></atomic-recs-interface>\n   * ```\n   */\n  @ArrayProp()\n  @Prop({mutable: true})\n  public fieldsToInclude: string[] | string = '[]';\n\n  /**\n   * The language assets path. By default, this will be a relative URL pointing to `./lang`.\n   *\n   * Example: \"/mypublicpath/languages\"\n   *\n   */\n  @Prop({reflect: true}) public languageAssetsPath = './lang';\n\n  /**\n   * The icon assets path. By default, this will be a relative URL pointing to `./assets`.\n   *\n   * Example: \"/mypublicpath/icons\"\n   *\n   */\n  @Prop({reflect: true}) public iconAssetsPath = './assets';\n\n  /**\n   * The value to set the [nonce](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce) attribute to on inline script and style elements generated by this interface and its child components.\n   * If your application is served with a Content Security Policy (CSP) that doesn't include the `script-src: 'unsafe-inline'` or `style-src: 'unsafe-inline'` directives,\n   * you should ensure that your application server generates a new nonce on every page load and uses the generated value to set this prop and serve the corresponding CSP response headers\n   * (i.e., script-src 'nonce-<YOUR_GENERATED_NONCE>' and style-src 'nonce-<YOUR_GENERATED_NONCE>').\n   * Otherwise you may see console errors such as\n   *  - Refused to execute inline script because it violates the following Content Security Policy directive: [...]\n   *  - Refused to apply inline style because it violates the following Content Security Policy directive: [...].\n   * @example:\n   * ```html\n   * <script nonce=\"<YOUR_GENERATED_NONCE>\">\n   *  import {setNonce} from '@coveo/atomic';\n   *  setNonce('<YOUR_GENERATED_NONCE>');\n   * </script>\n   * ```\n   */\n  @Prop({reflect: true}) public CspNonce?: string;\n\n  private i18Initialized: Promise<void>;\n  private componentWillLoadCalledPromise: Promise<void>;\n  private componentWillLoadResolver: () => void;\n\n  public constructor() {\n    this.commonInterfaceHelper = new CommonAtomicInterfaceHelper(\n      this,\n      'CoveoAtomicRecs'\n    );\n    ({\n      promise: this.componentWillLoadCalledPromise,\n      resolve: this.componentWillLoadResolver,\n    } = Promise.withResolvers<void>());\n    const {promise, resolve} = Promise.withResolvers<void>();\n    this.i18Initialized = promise;\n    this.i18n = i18next.createInstance(undefined, resolve);\n  }\n\n  public get bindings(): RecsBindings {\n    return {\n      engine: this.engine!,\n      i18n: this.i18n,\n      store: this.store,\n      interfaceElement: this.host,\n    };\n  }\n\n  public connectedCallback() {\n    this.store.setLoadingFlag(FirstRecommendationExecutedFlag);\n  }\n\n  componentWillLoad() {\n    if (this.CspNonce) {\n      setNonce(this.CspNonce);\n    }\n    this.componentWillLoadResolver();\n  }\n\n  /**\n   * Initializes the connection with the headless recommendation engine using options for `accessToken` (required), `organizationId` (required), `environment` (defaults to `prod`), and `renewAccessToken`.\n   */\n  @Method() public initialize(options: RecsInitializationOptions) {\n    return this.internalInitialization(() => this.initEngine(options));\n  }\n\n  /**\n   * Initializes the connection with an already preconfigured headless recommendation engine.\n   * This bypasses the properties set on the component, such as analytics, recommendation, searchHub, language, timezone & logLevel.\n   */\n  @Method() public initializeWithRecommendationEngine(\n    engine: RecommendationEngine\n  ) {\n    if (this.pipeline && this.pipeline !== engine.state.pipeline) {\n      console.warn(\n        mismatchedInterfaceAndEnginePropError(\n          'recommendation',\n          'query pipeline'\n        )\n      );\n    }\n    if (this.searchHub && this.searchHub !== engine.state.searchHub) {\n      console.warn(\n        mismatchedInterfaceAndEnginePropError('recommendation', 'search hub')\n      );\n    }\n    return this.internalInitialization(() => (this.engine = engine));\n  }\n\n  /**\n   *\n   * Fetches new recommendations.\n   */\n  @Method() public async getRecommendations() {\n    if (!this.commonInterfaceHelper.engineIsCreated(this.engine)) {\n      return;\n    }\n\n    if (!this.initialized) {\n      console.error(\n        'You have to wait until the \"initialize\" promise is fulfilled before executing a search.',\n        this.host\n      );\n      return;\n    }\n\n    this.engine!.dispatch(\n      loadRecommendationActions(this.engine!).getRecommendations()\n    );\n  }\n\n  @Watch('iconAssetsPath')\n  public updateIconAssetsPath() {\n    this.store.state.iconAssetsPath = this.iconAssetsPath;\n  }\n\n  @Listen('atomic/initializeComponent')\n  public handleInitialization(event: InitializeEvent) {\n    this.commonInterfaceHelper.onComponentInitializing(event);\n  }\n\n  @Watch('language')\n  public updateLanguage() {\n    if (!this.commonInterfaceHelper.engineIsCreated(this.engine)) {\n      return;\n    }\n\n    const {updateSearchConfiguration} = loadSearchConfigurationActions(\n      this.engine\n    );\n    this.engine.dispatch(\n      updateSearchConfiguration({\n        locale: this.language,\n      })\n    );\n    return this.commonInterfaceHelper.onLanguageChange();\n  }\n\n  @Watch('analytics')\n  public toggleAnalytics() {\n    if (!this.commonInterfaceHelper.engineIsCreated(this.engine)) {\n      return;\n    }\n\n    this.commonInterfaceHelper.onAnalyticsChange();\n  }\n\n  public registerFieldsToInclude() {\n    const fields = EcommerceDefaultFieldsToInclude.concat(\n      [...this.fieldsToInclude].filter((field) => !!field)\n    );\n    this.engine!.dispatch(\n      loadFieldActions(this.engine!).registerFieldsToInclude(fields)\n    );\n  }\n\n  private async internalInitialization(initEngine: () => void) {\n    await this.componentWillLoadCalledPromise;\n    await Promise.all([\n      this.commonInterfaceHelper.onInitialization(initEngine),\n      this.i18Initialized,\n    ]);\n    await this.updateLanguage();\n    markParentAsReady(this.host);\n    this.pipeline = this.engine!.state.pipeline;\n    this.searchHub = this.engine!.state.searchHub;\n    this.store.unsetLoadingFlag(FirstRecommendationExecutedFlag);\n    this.initialized = true;\n  }\n\n  private initEngine(options: RecsInitializationOptions) {\n    const analyticsConfig = getAnalyticsConfig(options, this.analytics);\n    try {\n      this.engine = buildRecommendationEngine({\n        configuration: {\n          pipeline: this.pipeline,\n          searchHub: this.searchHub ?? 'default',\n          locale: this.language,\n          timezone: this.timezone,\n          ...options,\n          analytics: analyticsConfig,\n        },\n        loggerOptions: {\n          level: this.logLevel,\n        },\n      });\n    } catch (error) {\n      this.error = error as Error;\n      throw error;\n    }\n  }\n\n  public render() {\n    return this.engine && <slot></slot>;\n  }\n}\n"],"mappings":"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","ignoreList":[]}