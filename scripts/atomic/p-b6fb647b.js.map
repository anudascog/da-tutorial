{"version":3,"names":["Choices","label","groupName","pageSize","choices","lang","scrollToTopEvent","setItemSize","focusOnFirstResultAfterNextSearch","focusOnNextNewResult","focusOnProperResultDependingOnChoice","choice","then","h","part","role","class","map","isSelected","parts","push","text","toLocaleString","RadioButton","key","style","checked","ariaLabel","onChecked","join","selectWhenFocused","ChoiceIsNaNError","Error","constructor","super","this","name","InitialChoiceNotInChoicesError","initialChoice","Label","_","children","convertChoicesToNumbers","split","parsedChoice","parseInt","isNaN","validateInitialChoice","includes"],"sources":["src/components/common/items-per-page/choices.tsx","src/components/common/items-per-page/error.ts","src/components/common/items-per-page/label.tsx","src/components/common/items-per-page/validate.ts"],"sourcesContent":["import {FunctionalComponent, h} from '@stencil/core';\nimport {RadioButton} from '../stencil-radio-button';\n\ninterface ChoicesProps {\n  label: string;\n  groupName: string;\n  pageSize: number;\n  choices: number[];\n  lang: string;\n  scrollToTopEvent: () => {};\n  setItemSize: (size: number) => void;\n  focusOnFirstResultAfterNextSearch: () => Promise<void> | undefined;\n  focusOnNextNewResult: () => void | undefined;\n}\n\nexport const Choices: FunctionalComponent<ChoicesProps> = ({\n  label,\n  groupName,\n  pageSize,\n  choices,\n  lang,\n  scrollToTopEvent,\n  setItemSize,\n  focusOnFirstResultAfterNextSearch,\n  focusOnNextNewResult,\n}) => {\n  const focusOnProperResultDependingOnChoice = (choice: number) => {\n    if (choice < pageSize) {\n      focusOnFirstResultAfterNextSearch()?.then(() => scrollToTopEvent());\n    } else if (choice > pageSize) {\n      focusOnNextNewResult();\n    }\n  };\n\n  return (\n    <div\n      part=\"buttons\"\n      role=\"radiogroup\"\n      aria-label={label}\n      class=\"flex flex-wrap gap-2\"\n    >\n      {choices.map((choice) => {\n        const isSelected = pageSize === choice;\n        const parts = ['button'];\n        if (isSelected) {\n          parts.push('active-button');\n        }\n        const text = choice.toLocaleString(lang);\n        return (\n          <RadioButton\n            key={'choice'}\n            groupName={groupName}\n            style=\"outline-neutral\"\n            checked={isSelected}\n            ariaLabel={text}\n            onChecked={() => {\n              focusOnProperResultDependingOnChoice(choice);\n              setItemSize(choice);\n            }}\n            class=\"btn-page focus-visible:bg-neutral-light\"\n            part={parts.join(' ')}\n            text={text}\n            selectWhenFocused={false}\n          ></RadioButton>\n        );\n      })}\n    </div>\n  );\n};\n","export class ChoiceIsNaNError extends Error {\n  constructor(choice: string) {\n    super(\n      `The choice value \"${choice}\" from the \"choicesDisplayed\" option is not a number.`\n    );\n    this.name = 'ChoiceIsNaNError';\n  }\n}\n\nexport class InitialChoiceNotInChoicesError extends Error {\n  constructor(initialChoice: number, choices: number[]) {\n    super(\n      `The initial choice value \"${initialChoice}\" is not included in the choices ${choices}.`\n    );\n    this.name = 'InitialChoiceNotInChoicesError';\n  }\n}\n","import {FunctionalComponent, h} from '@stencil/core';\n\nexport const Label: FunctionalComponent = (_, children) => {\n  return (\n    <span\n      part=\"label\"\n      class=\"text-on-background mr-3 self-start text-lg leading-10\"\n      aria-hidden=\"true\"\n    >\n      {children}\n    </span>\n  );\n};\n","import {ChoiceIsNaNError, InitialChoiceNotInChoicesError} from './error';\n\nexport function convertChoicesToNumbers(choices: string) {\n  return choices.split(',').map((choice) => {\n    const parsedChoice = parseInt(choice);\n    if (isNaN(parsedChoice)) {\n      throw new ChoiceIsNaNError(choice);\n    }\n\n    return parsedChoice;\n  });\n}\n\nexport function validateInitialChoice(\n  initialChoice: number,\n  choices: number[]\n): number {\n  if (!choices.includes(initialChoice)) {\n    throw new InitialChoiceNotInChoicesError(initialChoice, choices);\n  }\n\n  return initialChoice;\n}\n"],"mappings":"8EAeaA,EAA6C,EACxDC,QACAC,YACAC,WACAC,UACAC,OACAC,mBACAC,cACAC,oCACAC,2BAEA,MAAMC,EAAwCC,IAC5C,GAAIA,EAASR,EAAU,CACrBK,KAAqCI,MAAK,IAAMN,K,MAC3C,GAAIK,EAASR,EAAU,CAC5BM,G,GAIJ,OACEI,EAAA,OACEC,KAAK,UACLC,KAAK,aAAY,aACLd,EACZe,MAAM,wBAELZ,EAAQa,KAAKN,IACZ,MAAMO,EAAaf,IAAaQ,EAChC,MAAMQ,EAAQ,CAAC,UACf,GAAID,EAAY,CACdC,EAAMC,KAAK,gB,CAEb,MAAMC,EAAOV,EAAOW,eAAejB,GACnC,OACEQ,EAACU,EAAW,CACVC,IAAK,SACLtB,UAAWA,EACXuB,MAAM,kBACNC,QAASR,EACTS,UAAWN,EACXO,UAAW,KACTlB,EAAqCC,GACrCJ,EAAYI,EAAO,EAErBK,MAAM,0CACNF,KAAMK,EAAMU,KAAK,KACjBR,KAAMA,EACNS,kBAAmB,OACN,IAGf,E,MClEGC,UAAyBC,MACpC,WAAAC,CAAYtB,GACVuB,MACE,qBAAqBvB,0DAEvBwB,KAAKC,KAAO,kB,QAIHC,UAAuCL,MAClD,WAAAC,CAAYK,EAAuBlC,GACjC8B,MACE,6BAA6BI,qCAAiDlC,MAEhF+B,KAAKC,KAAO,gC,QCZHG,EAA6B,CAACC,EAAGC,IAE1C5B,EAAA,QACEC,KAAK,QACLE,MAAM,wDAAuD,cACjD,QAEXyB,G,SCPSC,EAAwBtC,GACtC,OAAOA,EAAQuC,MAAM,KAAK1B,KAAKN,IAC7B,MAAMiC,EAAeC,SAASlC,GAC9B,GAAImC,MAAMF,GAAe,CACvB,MAAM,IAAIb,EAAiBpB,E,CAG7B,OAAOiC,CAAY,GAEvB,C,SAEgBG,EACdT,EACAlC,GAEA,IAAKA,EAAQ4C,SAASV,GAAgB,CACpC,MAAM,IAAID,EAA+BC,EAAelC,E,CAG1D,OAAOkC,CACT,Q","ignoreList":[]}