import{r as t,h as e,g as i}from"./p-dc3df5ce.js";import{buildProductListing as r,buildSearch as s,ProductTemplatesHelpers as l}from"@coveo/headless/commerce";import{g as o}from"./p-55d2bcf3.js";import{I as n}from"./p-d6e6dbc3.js";import{t as u}from"./p-cbd58764.js";import{P as a}from"./p-90ee956a.js";import"./p-c9074946.js";import"./p-1580513b.js";import"./p-05de7ca3.js";import"./p-f77160c6.js";import"./p-f284897c.js";import"./p-0462f723.js";import"./p-62386853.js";const p=":host>ul{display:flex;list-style:none;margin:0;padding:0}:host>ul li{display:inline-block}.separator::before{display:inline;content:',\\00a0'}";const h=p;var c=undefined&&undefined.__decorate||function(t,e,i,r){var s=arguments.length,l=s<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,i):r,o;if(typeof Reflect==="object"&&typeof Reflect.decorate==="function")l=Reflect.decorate(t,e,i,r);else for(var n=t.length-1;n>=0;n--)if(o=t[n])l=(s<3?o(l):s>3?o(e,i,l):o(e,i))||l;return s>3&&l&&Object.defineProperty(e,i,l),l};const d=class{constructor(e){t(this,e);this.maxValuesToDisplay=3;this.delimiter=null;this.sortedValues=null;this.error=undefined;this.field=undefined;this.maxValuesToDisplay=3;this.delimiter=null}initialize(){if(this.bindings.interfaceElement.type==="product-listing"){this.searchOrListing=r(this.bindings.engine)}else{this.searchOrListing=s(this.bindings.engine)}this.breadcrumbManager=this.searchOrListing.breadcrumbManager()}get productValues(){const t=l.getProductProperty(this.product,this.field);if(t===null){return null}if(Array.isArray(t)){return t.map((t=>`${t}`.trim()))}if(typeof t!=="string"||t.trim()===""){this.error=new Error(`Could not parse "${t}" from field "${this.field}" as a string array.`);return null}return this.delimiter?t.split(this.delimiter).map((t=>t.trim())):[t]}get facetSelectedValues(){return this.breadcrumbManager.state.facetBreadcrumbs.filter((t=>t.field===this.field)).reduce(((t,e)=>[...t,...e.values.map((({value:t})=>t.value))]),[])}updateSortedValues(){const t=this.productValues;if(t===null){this.sortedValues=null;return}const e=this.facetSelectedValues.filter((e=>t.includes(e)));this.sortedValues=Array.from(new Set([...e,...t]))}getShouldDisplayLabel(t){return this.maxValuesToDisplay>0&&t.length>this.maxValuesToDisplay}getNumberOfValuesToDisplay(t){return Math.min(t.length,this.maxValuesToDisplay)}renderValue(t){const i=o(this.field,t,this.bindings.i18n);const r=u(t);return e("li",{key:t,part:"product-multi-value-text-value"},e("slot",{name:`product-multi-value-text-value-${r}`},i))}renderSeparator(t,i){return e("li",{"aria-hidden":"true",part:"product-multi-value-text-separator",key:`${t}~${i}`,class:"separator"})}renderMoreLabel(t){return e("li",{key:"more-field-values",part:"product-multi-value-text-value-more"},this.bindings.i18n.t("n-more",{value:t}))}renderListItems(t){const e=this.getNumberOfValuesToDisplay(t);const i=[];for(let r=0;r<e;r++){if(r>0){i.push(this.renderSeparator(t[r-1],t[r]))}i.push(this.renderValue(t[r]))}if(this.getShouldDisplayLabel(t)){i.push(this.renderSeparator(t[e-1],"more-field-values"));i.push(this.renderMoreLabel(t.length-e))}return i}componentWillRender(){this.updateSortedValues()}render(){if(this.sortedValues===null){this.host.remove();return}return e("ul",{part:"product-multi-value-text-list"},...this.renderListItems(this.sortedValues))}get host(){return i(this)}};c([n()],d.prototype,"bindings",void 0);c([a()],d.prototype,"product",void 0);d.style=h;export{d as atomic_product_multi_value_text};
//# sourceMappingURL=p-e558f1dd.entry.js.map