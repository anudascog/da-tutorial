{"version":3,"names":["atomicProductDescriptionCss","AtomicProductDescriptionStyle0","AtomicProductDescription","constructor","hostRef","this","isExpanded","isTruncated","truncateAfter","field","isCollapsible","resizeObserver","ResizeObserver","descriptionText","scrollHeight","clientHeight","validateProps","Schema","StringValue","constrainTo","validate","componentDidLoad","hostElement","querySelector","observe","onToggleExpand","e","stopPropagation","disconnectedCallback","disconnect","render","productDescription","product","h","Hidden","ExpandableText","showMoreLabel","bindings","i18n","t","showLessLabel","__decorate","InitializeBindings","ProductContext"],"sources":["src/components/commerce/product-template-components/atomic-product-description/atomic-product-description.pcss?tag=atomic-product-description","src/components/commerce/product-template-components/atomic-product-description/atomic-product-description.tsx"],"sourcesContent":["@import '../../../common/expandable-text/expandable-text.pcss';\n","import {Schema, StringValue} from '@coveo/bueno';\nimport {Product} from '@coveo/headless/commerce';\nimport {Component, State, h, Element, Prop} from '@stencil/core';\nimport {\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {\n  ExpandableText,\n  TruncateAfter,\n} from '../../../common/expandable-text/expandable-text';\nimport {Hidden} from '../../../common/stencil-hidden';\nimport {CommerceBindings} from '../../atomic-commerce-interface/atomic-commerce-interface';\nimport {ProductContext} from '../product-template-decorators';\n\n/**\n * @alpha\n * The `atomic-product-description` component renders the description of a product.\n */\n@Component({\n  tag: 'atomic-product-description',\n  styleUrl: 'atomic-product-description.pcss',\n  shadow: false,\n})\nexport class AtomicProductDescription\n  implements InitializableComponent<CommerceBindings>\n{\n  @InitializeBindings() public bindings!: CommerceBindings;\n  @ProductContext() private product!: Product;\n\n  @Element() hostElement!: HTMLElement;\n\n  public error!: Error;\n\n  @State() private isExpanded = false;\n  @State() private isTruncated = false;\n\n  private descriptionText!: HTMLDivElement;\n  private resizeObserver: ResizeObserver;\n\n  /**\n   * The number of lines after which the product description should be truncated. A value of \"none\" will disable truncation.\n   */\n  @Prop() public truncateAfter: TruncateAfter = '2';\n\n  /**\n   * The name of the description field to use.\n   */\n  @Prop() public field: 'ec_description' | 'ec_shortdesc' = 'ec_shortdesc';\n\n  /**\n   * Whether the description should be collapsible after being expanded.\n   */\n  @Prop() public isCollapsible = true;\n\n  constructor() {\n    this.resizeObserver = new ResizeObserver(() => {\n      if (\n        this.descriptionText &&\n        this.descriptionText.scrollHeight > this.descriptionText.clientHeight\n      ) {\n        this.isTruncated = true;\n      } else {\n        this.isTruncated = false;\n      }\n    });\n    this.validateProps();\n  }\n\n  private validateProps() {\n    new Schema({\n      truncateAfter: new StringValue({\n        constrainTo: ['none', '1', '2', '3', '4'],\n      }),\n      field: new StringValue({\n        constrainTo: ['ec_shortdesc', 'ec_description'],\n      }),\n    }).validate({\n      truncateAfter: this.truncateAfter,\n      field: this.field,\n    });\n  }\n\n  componentDidLoad() {\n    this.descriptionText = this.hostElement.querySelector(\n      '.expandable-text'\n    ) as HTMLDivElement;\n    if (this.descriptionText) {\n      this.resizeObserver.observe(this.descriptionText);\n    }\n  }\n\n  private onToggleExpand(e?: MouseEvent) {\n    if (e) {\n      e.stopPropagation();\n    }\n\n    this.isExpanded = !this.isExpanded;\n  }\n\n  disconnectedCallback() {\n    this.resizeObserver.disconnect();\n  }\n\n  public render() {\n    const productDescription = this.product[this.field] ?? null;\n\n    if (!productDescription) {\n      return <Hidden />;\n    }\n\n    return (\n      <ExpandableText\n        isExpanded={this.isExpanded}\n        isTruncated={this.isTruncated}\n        truncateAfter={this.truncateAfter}\n        onToggleExpand={(e) => this.onToggleExpand(e)}\n        showMoreLabel={this.bindings.i18n.t('show-more')}\n        showLessLabel={this.bindings.i18n.t('show-less')}\n        isCollapsible={this.isCollapsible}\n      >\n        <atomic-product-text field={this.field}></atomic-product-text>\n      </ExpandableText>\n    );\n  }\n}\n"],"mappings":"obAAA,MAAMA,EAA8B,wUACpC,MAAAC,EAAeD,E,iXCuBFE,EAAwB,MA+BnC,WAAAC,CAAAC,G,UArBiBC,KAAAC,WAAa,MACbD,KAAAE,YAAc,MAQhBF,KAAAG,cAA+B,IAK/BH,KAAAI,MAA2C,eAK3CJ,KAAAK,cAAgB,K,gBAnBD,M,iBACC,M,mBAQe,I,WAKY,e,mBAK3B,KAG7BL,KAAKM,eAAiB,IAAIC,gBAAe,KACvC,GACEP,KAAKQ,iBACLR,KAAKQ,gBAAgBC,aAAeT,KAAKQ,gBAAgBE,aACzD,CACAV,KAAKE,YAAc,I,KACd,CACLF,KAAKE,YAAc,K,KAGvBF,KAAKW,e,CAGC,aAAAA,GACN,IAAIC,EAAO,CACTT,cAAe,IAAIU,EAAY,CAC7BC,YAAa,CAAC,OAAQ,IAAK,IAAK,IAAK,OAEvCV,MAAO,IAAIS,EAAY,CACrBC,YAAa,CAAC,eAAgB,sBAE/BC,SAAS,CACVZ,cAAeH,KAAKG,cACpBC,MAAOJ,KAAKI,O,CAIhB,gBAAAY,GACEhB,KAAKQ,gBAAkBR,KAAKiB,YAAYC,cACtC,oBAEF,GAAIlB,KAAKQ,gBAAiB,CACxBR,KAAKM,eAAea,QAAQnB,KAAKQ,gB,EAI7B,cAAAY,CAAeC,GACrB,GAAIA,EAAG,CACLA,EAAEC,iB,CAGJtB,KAAKC,YAAcD,KAAKC,U,CAG1B,oBAAAsB,GACEvB,KAAKM,eAAekB,Y,CAGf,MAAAC,GACL,MAAMC,EAAqB1B,KAAK2B,QAAQ3B,KAAKI,QAAU,KAEvD,IAAKsB,EAAoB,CACvB,OAAOE,EAACC,EAAM,K,CAGhB,OACED,EAACE,EAAc,CACb7B,WAAYD,KAAKC,WACjBC,YAAaF,KAAKE,YAClBC,cAAeH,KAAKG,cACpBiB,eAAiBC,GAAMrB,KAAKoB,eAAeC,GAC3CU,cAAe/B,KAAKgC,SAASC,KAAKC,EAAE,aACpCC,cAAenC,KAAKgC,SAASC,KAAKC,EAAE,aACpC7B,cAAeL,KAAKK,eAEpBuB,EAAA,uBAAqBxB,MAAOJ,KAAKI,Q,oCA9FVgC,EAAA,CAA5BC,K,+BACyBD,EAAA,CAAzBE,K","ignoreList":[]}