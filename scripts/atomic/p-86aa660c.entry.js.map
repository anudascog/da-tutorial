{"version":3,"names":["atomicInsightRefineToggleCss","AtomicInsightRefineToggleStyle0","AtomicInsightRefineToggle","numberOfBreadcrumbs","this","breadcrumbManagerState","facetBreadcrumbs","categoryFacetBreadcrumbs","numericFacetBreadcrumbs","dateFacetBreadcrumbs","staticFilterBreadcrumbs","length","initialize","breadcrumbManager","buildInsightBreadcrumbManager","bindings","engine","searchStatus","buildInsightSearchStatus","enableModal","modalRef","isOpen","loadModal","document","createElement","host","parentElement","insertAdjacentElement","openButton","buttonRef","render","h","IconButton","key","partPrefix","style","title","i18n","t","icon","FilterIcon","disabled","searchStatusState","hasResults","ariaLabel","onClick","store","waitUntilAppLoaded","button","badge","hasBreadcrumbs","toString","undefined","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/insight/atomic-insight-refine-toggle/atomic-insight-refine-toggle.pcss?tag=atomic-insight-refine-toggle&encapsulation=shadow","src/components/insight/atomic-insight-refine-toggle/atomic-insight-refine-toggle.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n","import {\n  buildBreadcrumbManager as buildInsightBreadcrumbManager,\n  buildSearchStatus as buildInsightSearchStatus,\n  BreadcrumbManager as InsightBreadcrumbManager,\n  BreadcrumbManagerState as InsightBreadcrumbManagerState,\n  SearchStatus as InsightSearchStatus,\n  SearchStatusState as InsightSearchStatusState,\n} from '@coveo/headless/insight';\nimport {Component, h, State, Element} from '@stencil/core';\nimport FilterIcon from '../../../images/filter.svg';\nimport {\n  InitializeBindings,\n  BindStateToController,\n} from '../../../utils/initialization-utils';\nimport {IconButton} from '../../common/iconButton';\nimport {InsightBindings} from '../atomic-insight-interface/atomic-insight-interface';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-insight-refine-toggle',\n  styleUrl: 'atomic-insight-refine-toggle.pcss',\n  shadow: true,\n})\nexport class AtomicInsightRefineToggle {\n  @InitializeBindings() public bindings!: InsightBindings;\n  @Element() public host!: HTMLElement;\n\n  @State() public error!: Error;\n\n  @BindStateToController('breadcrumbManager')\n  @State()\n  private breadcrumbManagerState!: InsightBreadcrumbManagerState;\n\n  @BindStateToController('searchStatus')\n  @State()\n  private searchStatusState!: InsightSearchStatusState;\n\n  public breadcrumbManager!: InsightBreadcrumbManager;\n  public searchStatus!: InsightSearchStatus;\n  private modalRef?: HTMLAtomicInsightRefineModalElement;\n  private buttonRef?: HTMLButtonElement;\n\n  private get numberOfBreadcrumbs(): number {\n    return [\n      ...this.breadcrumbManagerState.facetBreadcrumbs,\n      ...this.breadcrumbManagerState.categoryFacetBreadcrumbs,\n      ...this.breadcrumbManagerState.numericFacetBreadcrumbs,\n      ...this.breadcrumbManagerState.dateFacetBreadcrumbs,\n      ...this.breadcrumbManagerState.staticFilterBreadcrumbs,\n    ].length;\n  }\n\n  public initialize() {\n    this.breadcrumbManager = buildInsightBreadcrumbManager(\n      this.bindings.engine\n    );\n    this.searchStatus = buildInsightSearchStatus(this.bindings.engine);\n  }\n\n  private enableModal() {\n    this.modalRef && (this.modalRef.isOpen = true);\n  }\n\n  private loadModal() {\n    if (this.modalRef) {\n      return;\n    }\n\n    this.modalRef = document.createElement('atomic-insight-refine-modal');\n    this.host.parentElement?.insertAdjacentElement(\n      'beforebegin',\n      this.modalRef\n    );\n    this.modalRef.openButton = this.buttonRef;\n  }\n\n  public render() {\n    return (\n      <IconButton\n        partPrefix=\"insight-refine-toggle\"\n        style=\"outline-neutral\"\n        title={this.bindings.i18n.t('filters')}\n        icon={FilterIcon}\n        disabled={\n          !this.searchStatusState.hasResults && !this.numberOfBreadcrumbs\n        }\n        ariaLabel={this.bindings.i18n.t('sort')}\n        onClick={() => {\n          this.bindings.store.waitUntilAppLoaded(() => {\n            this.enableModal();\n          });\n        }}\n        buttonRef={(button?: HTMLButtonElement) => {\n          if (!button) {\n            return;\n          }\n          this.buttonRef = button;\n          this.loadModal();\n        }}\n        badge={\n          this.breadcrumbManagerState.hasBreadcrumbs ? (\n            <slot>{this.numberOfBreadcrumbs.toString()}</slot>\n          ) : undefined\n        }\n      />\n    );\n  }\n}\n"],"mappings":"qaAAA,MAAMA,EAA+B,k60DACrC,MAAAC,EAAeD,E,iXCwBFE,EAAyB,M,qHAmBpC,uBAAYC,GACV,MAAO,IACFC,KAAKC,uBAAuBC,oBAC5BF,KAAKC,uBAAuBE,4BAC5BH,KAAKC,uBAAuBG,2BAC5BJ,KAAKC,uBAAuBI,wBAC5BL,KAAKC,uBAAuBK,yBAC/BC,M,CAGG,UAAAC,GACLR,KAAKS,kBAAoBC,EACvBV,KAAKW,SAASC,QAEhBZ,KAAKa,aAAeC,EAAyBd,KAAKW,SAASC,O,CAGrD,WAAAG,GACNf,KAAKgB,WAAahB,KAAKgB,SAASC,OAAS,K,CAGnC,SAAAC,GACN,GAAIlB,KAAKgB,SAAU,CACjB,M,CAGFhB,KAAKgB,SAAWG,SAASC,cAAc,+BACvCpB,KAAKqB,KAAKC,eAAeC,sBACvB,cACAvB,KAAKgB,UAEPhB,KAAKgB,SAASQ,WAAaxB,KAAKyB,S,CAG3B,MAAAC,GACL,OACEC,EAACC,EAAU,CAAAC,IAAA,2CACTC,WAAW,wBACXC,MAAM,kBACNC,MAAOhC,KAAKW,SAASsB,KAAKC,EAAE,WAC5BC,KAAMC,EACNC,UACGrC,KAAKsC,kBAAkBC,aAAevC,KAAKD,oBAE9CyC,UAAWxC,KAAKW,SAASsB,KAAKC,EAAE,QAChCO,QAAS,KACPzC,KAAKW,SAAS+B,MAAMC,oBAAmB,KACrC3C,KAAKe,aAAa,GAClB,EAEJU,UAAYmB,IACV,IAAKA,EAAQ,CACX,M,CAEF5C,KAAKyB,UAAYmB,EACjB5C,KAAKkB,WAAW,EAElB2B,MACE7C,KAAKC,uBAAuB6C,eAC1BnB,EAAA,YAAO3B,KAAKD,oBAAoBgD,YAC9BC,W,6BA9EiBC,EAAA,CAA5BC,K,+BAOOD,EAAA,CAFPE,EAAsB,sB,6CAMfF,EAAA,CAFPE,EAAsB,iB","ignoreList":[]}