{"file":"initialization-lit-stencil-common-utils-9e0c895f.js","mappings":"MAsBa,2BAA4B,SAAQ,KAAK;IACpD,YAAY,WAAmB;QAC7B,KAAK,CACH,QAAQ,WAAW,0DAA0D,qBAAqB,CAAC,IAAI,CACrG,IAAI,CACL,EAAE,CACJ,CAAC;KACH;CACF;MACY,qBAAqB,GAAG;IACnC,uBAAuB;IACvB,yBAAyB;IACzB,2BAA2B;IAC3B,0CAA0C;IAC1C,4BAA4B;IAC5B,0BAA0B;IAC1B,iBAAiB;EACjB;MACW,mBAAmB,GAAG;;;;","names":[],"sources":["src/utils/initialization-lit-stencil-common-utils.ts"],"sourcesContent":["import type {AnyBindings} from '../components/common/interface/bindings';\nimport {closest} from './dom-utils';\nimport {buildCustomEvent} from './event-utils';\nimport {enqueueOrDispatchInitializationEvent} from './init-queue';\n\nexport function fetchBindings<SpecificBindings extends AnyBindings>(\n  element: Element\n) {\n  return new Promise<SpecificBindings>((resolve, reject) => {\n    const event = buildCustomEvent<InitializeEventHandler>(\n      initializeEventName,\n      (bindings: unknown) => resolve(bindings as SpecificBindings)\n    );\n    const parent = closest(element, initializableElements.join(', '));\n    if (!parent) {\n      reject(new MissingInterfaceParentError(element.nodeName.toLowerCase()));\n      return;\n    }\n    enqueueOrDispatchInitializationEvent(parent, event, element);\n  });\n}\nexport type InitializeEventHandler = (bindings: AnyBindings) => void;\nexport class MissingInterfaceParentError extends Error {\n  constructor(elementName: string) {\n    super(\n      `The \"${elementName}\" element must be the child of the following elements: ${initializableElements.join(\n        ', '\n      )}`\n    );\n  }\n}\nexport const initializableElements = [\n  'atomic-recs-interface',\n  'atomic-search-interface',\n  'atomic-commerce-interface',\n  'atomic-commerce-recommendation-interface',\n  'atomic-relevance-inspector',\n  'atomic-insight-interface',\n  'atomic-external',\n];\nexport const initializeEventName = 'atomic/initializeComponent';\n"],"version":3}