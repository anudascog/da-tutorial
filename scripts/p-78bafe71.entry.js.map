{"version":3,"names":["atomicTabManagerCss","AtomicTabManagerStyle0","AtomicTabManager","this","tabs","clearFiltersOnTabChange","initialize","tabManager","buildTabManager","bindings","engine","tabElements","Array","from","host","querySelectorAll","length","error","Error","forEach","tabElement","name","tabController","buildTab","options","expression","id","push","label","render","h","Host","key","role","part","class","map","tab","active","tabManagerState","activeTab","i18n","t","defaultValue","select","state","isActive","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/search/tabs/atomic-tab-manager/atomic-tab-manager.pcss?tag=atomic-tab-manager&encapsulation=shadow","src/components/search/tabs/atomic-tab-manager/atomic-tab-manager.tsx"],"sourcesContent":["@import '../../../../global/global.pcss';\n\n:host {\n  atomic-tab-bar::part(popover-button) {\n    @apply m-0 px-2 pb-1 text-left text-xl font-normal text-black sm:px-6;\n  }\n\n  atomic-tab-bar::part(value-label) {\n    @apply font-normal;\n  }\n\n  ::part(popover-tab) {\n    @apply font-normal;\n  }\n}\n","import {\n  TabManager,\n  TabManagerState,\n  buildTabManager,\n  Tab,\n  buildTab,\n} from '@coveo/headless';\nimport {Component, h, Element, State, Prop, Host} from '@stencil/core';\nimport {\n  BindStateToController,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {Bindings} from '../../atomic-search-interface/atomic-search-interface';\n\n/**\n * The `atomic-tab-manager` component manages a collection of tabs,\n * allowing users to switch between them. Each child `atomic-tab` represents an\n * individual tab within the manager.\n *\n * @part button-container - The container for the tab button.\n * @part button-container-active - The container for the active tab button.\n * @part tab-button - The tab button.\n * @part tab-button-active - The container for the active tab button.\n * @part dropdown-area - The dropdown area.\n * @part tab-area - The tab area.\n * @slot default\n */\n@Component({\n  tag: 'atomic-tab-manager',\n  styleUrl: 'atomic-tab-manager.pcss',\n  shadow: true,\n})\nexport class AtomicTabManager {\n  @InitializeBindings() public bindings!: Bindings;\n  @BindStateToController('tabManager')\n  @State()\n  private tabManagerState!: TabManagerState;\n  @Element()\n  private host!: HTMLElement;\n  public tabManager!: TabManager;\n\n  private tabs: {label: string; name: string; tabController: Tab}[] = [];\n\n  /**\n   * Whether to clear the filters when the active tab changes.\n   */\n  @Prop() clearFiltersOnTabChange?: boolean = false;\n\n  @State() public error!: Error;\n\n  public initialize() {\n    this.tabManager = buildTabManager(this.bindings.engine);\n\n    const tabElements = Array.from(this.host.querySelectorAll('atomic-tab'));\n\n    if (tabElements.length === 0) {\n      this.error = new Error(\n        'The \"atomic-tab-manager\" element requires at least one \"atomic-tab\" child.'\n      );\n      return;\n    }\n\n    tabElements.forEach((tabElement) => {\n      if (!tabElement.name) {\n        this.error = new Error(\n          'The \"name\" attribute must be defined on all \"atomic-tab\" children.'\n        );\n        return;\n      }\n      const tabController = buildTab(this.bindings.engine, {\n        options: {\n          expression: tabElement.expression,\n          id: tabElement.name,\n          clearFiltersOnTabChange: this.clearFiltersOnTabChange,\n        },\n      });\n\n      this.tabs.push({\n        label: tabElement.label,\n        name: tabElement.name,\n        tabController,\n      });\n    });\n  }\n\n  render() {\n    return (\n      <Host>\n        <atomic-tab-bar>\n          <div\n            role=\"list\"\n            aria-label=\"tab-area\"\n            part=\"tab-area\"\n            class=\"border-neutral mb-2 flex w-full flex-row border-b\"\n          >\n            {this.tabs.map((tab) => (\n              <atomic-tab-button\n                active={this.tabManagerState.activeTab === tab.name}\n                label={this.bindings.i18n.t(tab.label, {\n                  defaultValue: tab.label,\n                })}\n                select={() => {\n                  if (!tab.tabController.state.isActive) {\n                    tab.tabController.select();\n                  }\n                }}\n              ></atomic-tab-button>\n            ))}\n          </div>\n        </atomic-tab-bar>\n      </Host>\n    );\n  }\n}\n"],"mappings":"oQAAA,MAAMA,EAAsB,up2DAC5B,MAAAC,EAAeD,E,iXC+BFE,EAAgB,M,yBASnBC,KAAAC,KAA4D,GAK5DD,KAAAE,wBAAoC,M,4DAAA,M,qBAIrC,UAAAC,GACLH,KAAKI,WAAaC,EAAgBL,KAAKM,SAASC,QAEhD,MAAMC,EAAcC,MAAMC,KAAKV,KAAKW,KAAKC,iBAAiB,eAE1D,GAAIJ,EAAYK,SAAW,EAAG,CAC5Bb,KAAKc,MAAQ,IAAIC,MACf,8EAEF,M,CAGFP,EAAYQ,SAASC,IACnB,IAAKA,EAAWC,KAAM,CACpBlB,KAAKc,MAAQ,IAAIC,MACf,sEAEF,M,CAEF,MAAMI,EAAgBC,EAASpB,KAAKM,SAASC,OAAQ,CACnDc,QAAS,CACPC,WAAYL,EAAWK,WACvBC,GAAIN,EAAWC,KACfhB,wBAAyBF,KAAKE,2BAIlCF,KAAKC,KAAKuB,KAAK,CACbC,MAAOR,EAAWQ,MAClBP,KAAMD,EAAWC,KACjBC,iBACA,G,CAIN,MAAAO,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,4CACHF,EAAA,kBAAAE,IAAA,4CACEF,EAAA,OAAAE,IAAA,2CACEC,KAAK,OAAM,aACA,WACXC,KAAK,WACLC,MAAM,qDAELhC,KAAKC,KAAKgC,KAAKC,GACdP,EAAA,qBACEQ,OAAQnC,KAAKoC,gBAAgBC,YAAcH,EAAIhB,KAC/CO,MAAOzB,KAAKM,SAASgC,KAAKC,EAAEL,EAAIT,MAAO,CACrCe,aAAcN,EAAIT,QAEpBgB,OAAQ,KACN,IAAKP,EAAIf,cAAcuB,MAAMC,SAAU,CACrCT,EAAIf,cAAcsB,Q,sCAtEPG,EAAA,CAA5BC,K,+BAGOD,EAAA,CAFPE,EAAsB,e","ignoreList":[]}