{"file":"atomic-recs-interface.js","mappings":"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","names":["AtomicRecsInterface","i18next"],"sources":["src/components/recommendations/atomic-recs-interface/analytics-config.ts","src/components/recommendations/atomic-recs-interface/store.ts","src/components/recommendations/atomic-recs-interface/atomic-recs-interface.pcss?tag=atomic-recs-interface&encapsulation=shadow","src/components/recommendations/atomic-recs-interface/atomic-recs-interface.tsx"],"sourcesContent":["import {\n  AnalyticsConfiguration,\n  RecommendationEngineConfiguration,\n} from '@coveo/headless/recommendation';\nimport {\n  AnalyticsPayload,\n  augmentAnalyticsWithAtomicVersion,\n  augmentWithExternalMiddleware,\n  augmentAnalyticsConfigWithDocument,\n  augmentAnalyticsConfigWithAtomicVersion,\n  getNextAnalyticsConfig,\n} from '../../common/interface/analytics-config';\n\nexport function getAnalyticsConfig(\n  recsConfig: RecommendationEngineConfiguration,\n  enabled: boolean\n): AnalyticsConfiguration {\n  switch (recsConfig.analytics?.analyticsMode) {\n    case 'next':\n      return getNextAnalyticsConfig(recsConfig, enabled);\n    case 'legacy':\n    default:\n      return getLegacyAnalyticsConfig(recsConfig, enabled);\n  }\n}\n\nfunction getLegacyAnalyticsConfig(\n  recsConfig: RecommendationEngineConfiguration,\n  enabled: boolean\n): AnalyticsConfiguration {\n  const analyticsClientMiddleware = (\n    event: string,\n    payload: AnalyticsPayload\n  ) => augmentAnalytics(event, payload, recsConfig);\n\n  const defaultAnalyticsConfig: AnalyticsConfiguration = {\n    analyticsClientMiddleware,\n    enabled,\n    ...augmentAnalyticsConfigWithDocument(),\n    ...augmentAnalyticsConfigWithAtomicVersion(),\n  };\n\n  if (recsConfig.analytics) {\n    return {\n      ...defaultAnalyticsConfig,\n      ...recsConfig.analytics,\n      analyticsClientMiddleware,\n    };\n  }\n  return defaultAnalyticsConfig;\n}\n\nfunction augmentAnalytics(\n  event: string,\n  payload: AnalyticsPayload,\n  recsConfig: RecommendationEngineConfiguration\n) {\n  let result = augmentWithExternalMiddleware(event, payload, recsConfig);\n  result = augmentAnalyticsWithAtomicVersion(result);\n  return result;\n}\n","import {RecommendationEngine} from '@coveo/headless/recommendation';\nimport {\n  BaseStore,\n  createBaseStore,\n  ResultListInfo,\n  setLoadingFlag,\n  unsetLoadingFlag,\n} from '../../common/interface/store';\n\ninterface Data {\n  loadingFlags: string[];\n  iconAssetsPath: string;\n  resultList: ResultListInfo | undefined;\n}\n\nexport type RecsStore = BaseStore<Data> & {\n  unsetLoadingFlag(loadingFlag: string): void;\n  setLoadingFlag(flag: string): void;\n};\n\nexport function createRecsStore(): RecsStore {\n  const store = createBaseStore<Data>({\n    loadingFlags: [],\n    iconAssetsPath: '',\n    resultList: undefined,\n  });\n\n  return {\n    ...store,\n\n    unsetLoadingFlag(loadingFlag: string) {\n      unsetLoadingFlag(store, loadingFlag);\n    },\n\n    setLoadingFlag(loadingFlag: string) {\n      setLoadingFlag(store, loadingFlag);\n    },\n\n    getUniqueIDFromEngine(engine: RecommendationEngine): string {\n      return engine.state.recommendation.searchUid;\n    },\n  };\n}\n","@import '../../../global/global.pcss';\n\n:host {\n  display: block;\n}\n","import {markParentAsReady} from '@/src/utils/init-queue';\nimport {\n  RecommendationEngine,\n  RecommendationEngineConfiguration,\n  loadFieldActions,\n  EcommerceDefaultFieldsToInclude,\n  buildRecommendationEngine,\n  loadRecommendationActions,\n  loadSearchConfigurationActions,\n  LogLevel as RecsLogLevel,\n} from '@coveo/headless/recommendation';\nimport {\n  Component,\n  Element,\n  h,\n  Listen,\n  Method,\n  Prop,\n  Watch,\n  State,\n  setNonce,\n} from '@stencil/core';\nimport i18next, {i18n} from 'i18next';\nimport {InitializeEvent} from '../../../utils/initialization-utils';\nimport {ArrayProp} from '../../../utils/props-utils';\nimport {CommonBindings} from '../../common/interface/bindings';\nimport {\n  StencilBaseAtomicInterface,\n  CommonAtomicInterfaceHelper,\n  mismatchedInterfaceAndEnginePropError,\n} from '../../common/interface/interface-common-stencil';\nimport {getAnalyticsConfig} from './analytics-config';\nimport {createRecsStore, RecsStore} from './store';\n\nconst FirstRecommendationExecutedFlag = 'firstRecommendationExecuted';\nexport type RecsInitializationOptions = RecommendationEngineConfiguration;\nexport type RecsBindings = CommonBindings<\n  RecommendationEngine,\n  RecsStore,\n  HTMLAtomicRecsInterfaceElement\n>;\n\n/**\n * The `atomic-recs-interface` component is the parent to all other atomic components in a recommendation interface. It handles the headless recommendation engine and localization configurations.\n * @slot default - The default slot where you can add child components to the recommendation interface.\n *\n */\n@Component({\n  tag: 'atomic-recs-interface',\n  styleUrl: 'atomic-recs-interface.pcss',\n  shadow: true,\n})\nexport class AtomicRecsInterface\n  implements StencilBaseAtomicInterface<RecommendationEngine>\n{\n  private store = createRecsStore();\n  private commonInterfaceHelper: CommonAtomicInterfaceHelper<RecommendationEngine>;\n  private initialized = false;\n\n  @Element() public host!: HTMLAtomicRecsInterfaceElement;\n\n  @State() public error?: Error;\n\n  /**\n   * The recommendation interface [query pipeline](https://docs.coveo.com/en/180/).\n   *\n   * If the recommendation interface is initialized using [`initializeWithRecommendationEngine`](https://docs.coveo.com/en/atomic/latest/reference/recommendation-components/atomic-recs-interface/#initializewithrecommendationengine), the query pipeline should instead be configured in the target engine.\n   */\n  @Prop({reflect: true, mutable: true}) public pipeline?: string;\n\n  /**\n   * The recommendation interface [search hub](https://docs.coveo.com/en/1342/).\n   *\n   * If the recommendation interface is initialized using [`initializeWithRecommendationEngine`](https://docs.coveo.com/en/atomic/latest/reference/recommendation-components/atomic-recs-interface/#initializewithrecommendationengine), the search hub should instead be configured in the target engine.\n   */\n  @Prop({reflect: true, mutable: true}) public searchHub?: string;\n\n  /**\n   * The [tz database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) identifier of the time zone to use to correctly interpret dates in the query expression, facets, and result items.\n   * By default, the timezone will be [guessed](https://day.js.org/docs/en/timezone/guessing-user-timezone).\n   *\n   * Example: \"America/Montreal\"\n   */\n  @Prop({reflect: true}) public timezone?: string;\n\n  /**\n   * The recommendation interface headless engine.\n   */\n  @Prop({mutable: true}) public engine?: RecommendationEngine;\n\n  /**\n   * Whether analytics should be enabled.\n   */\n  @Prop({reflect: true}) public analytics = true;\n\n  /**\n   * The recommendation interface i18next instance.\n   */\n  @Prop() public i18n: i18n;\n\n  /**\n   * The severity level of the messages to log in the console.\n   */\n  @Prop({reflect: true}) public logLevel?: RecsLogLevel;\n\n  /**\n   * The recommendation interface language.\n   */\n  @Prop({reflect: true}) public language = 'en';\n\n  /**\n   * A list of non-default fields to include in the query results.\n   *\n   * Specify the property as an array using a JSON string representation:\n   * ```html\n   * <atomic-recs-interface fields-to-include='[\"fieldA\", \"fieldB\"]'></atomic-recs-interface>\n   * ```\n   */\n  @ArrayProp()\n  @Prop({mutable: true})\n  public fieldsToInclude: string[] | string = '[]';\n\n  /**\n   * The language assets path. By default, this will be a relative URL pointing to `./lang`.\n   *\n   * Example: \"/mypublicpath/languages\"\n   *\n   */\n  @Prop({reflect: true}) public languageAssetsPath = './lang';\n\n  /**\n   * The icon assets path. By default, this will be a relative URL pointing to `./assets`.\n   *\n   * Example: \"/mypublicpath/icons\"\n   *\n   */\n  @Prop({reflect: true}) public iconAssetsPath = './assets';\n\n  /**\n   * The value to set the [nonce](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce) attribute to on inline script and style elements generated by this interface and its child components.\n   * If your application is served with a Content Security Policy (CSP) that doesn't include the `script-src: 'unsafe-inline'` or `style-src: 'unsafe-inline'` directives,\n   * you should ensure that your application server generates a new nonce on every page load and uses the generated value to set this prop and serve the corresponding CSP response headers\n   * (i.e., script-src 'nonce-<YOUR_GENERATED_NONCE>' and style-src 'nonce-<YOUR_GENERATED_NONCE>').\n   * Otherwise you may see console errors such as\n   *  - Refused to execute inline script because it violates the following Content Security Policy directive: [...]\n   *  - Refused to apply inline style because it violates the following Content Security Policy directive: [...].\n   * @example:\n   * ```html\n   * <script nonce=\"<YOUR_GENERATED_NONCE>\">\n   *  import {setNonce} from '@coveo/atomic';\n   *  setNonce('<YOUR_GENERATED_NONCE>');\n   * </script>\n   * ```\n   */\n  @Prop({reflect: true}) public CspNonce?: string;\n\n  private i18Initialized: Promise<void>;\n  private componentWillLoadCalledPromise: Promise<void>;\n  private componentWillLoadResolver: () => void;\n\n  public constructor() {\n    this.commonInterfaceHelper = new CommonAtomicInterfaceHelper(\n      this,\n      'CoveoAtomicRecs'\n    );\n    ({\n      promise: this.componentWillLoadCalledPromise,\n      resolve: this.componentWillLoadResolver,\n    } = Promise.withResolvers<void>());\n    const {promise, resolve} = Promise.withResolvers<void>();\n    this.i18Initialized = promise;\n    this.i18n = i18next.createInstance(undefined, resolve);\n  }\n\n  public get bindings(): RecsBindings {\n    return {\n      engine: this.engine!,\n      i18n: this.i18n,\n      store: this.store,\n      interfaceElement: this.host,\n    };\n  }\n\n  public connectedCallback() {\n    this.store.setLoadingFlag(FirstRecommendationExecutedFlag);\n  }\n\n  componentWillLoad() {\n    if (this.CspNonce) {\n      setNonce(this.CspNonce);\n    }\n    this.componentWillLoadResolver();\n  }\n\n  /**\n   * Initializes the connection with the headless recommendation engine using options for `accessToken` (required), `organizationId` (required), `environment` (defaults to `prod`), and `renewAccessToken`.\n   */\n  @Method() public initialize(options: RecsInitializationOptions) {\n    return this.internalInitialization(() => this.initEngine(options));\n  }\n\n  /**\n   * Initializes the connection with an already preconfigured headless recommendation engine.\n   * This bypasses the properties set on the component, such as analytics, recommendation, searchHub, language, timezone & logLevel.\n   */\n  @Method() public initializeWithRecommendationEngine(\n    engine: RecommendationEngine\n  ) {\n    if (this.pipeline && this.pipeline !== engine.state.pipeline) {\n      console.warn(\n        mismatchedInterfaceAndEnginePropError(\n          'recommendation',\n          'query pipeline'\n        )\n      );\n    }\n    if (this.searchHub && this.searchHub !== engine.state.searchHub) {\n      console.warn(\n        mismatchedInterfaceAndEnginePropError('recommendation', 'search hub')\n      );\n    }\n    return this.internalInitialization(() => (this.engine = engine));\n  }\n\n  /**\n   *\n   * Fetches new recommendations.\n   */\n  @Method() public async getRecommendations() {\n    if (!this.commonInterfaceHelper.engineIsCreated(this.engine)) {\n      return;\n    }\n\n    if (!this.initialized) {\n      console.error(\n        'You have to wait until the \"initialize\" promise is fulfilled before executing a search.',\n        this.host\n      );\n      return;\n    }\n\n    this.engine!.dispatch(\n      loadRecommendationActions(this.engine!).getRecommendations()\n    );\n  }\n\n  @Watch('iconAssetsPath')\n  public updateIconAssetsPath() {\n    this.store.state.iconAssetsPath = this.iconAssetsPath;\n  }\n\n  @Listen('atomic/initializeComponent')\n  public handleInitialization(event: InitializeEvent) {\n    this.commonInterfaceHelper.onComponentInitializing(event);\n  }\n\n  @Watch('language')\n  public updateLanguage() {\n    if (!this.commonInterfaceHelper.engineIsCreated(this.engine)) {\n      return;\n    }\n\n    const {updateSearchConfiguration} = loadSearchConfigurationActions(\n      this.engine\n    );\n    this.engine.dispatch(\n      updateSearchConfiguration({\n        locale: this.language,\n      })\n    );\n    return this.commonInterfaceHelper.onLanguageChange();\n  }\n\n  @Watch('analytics')\n  public toggleAnalytics() {\n    if (!this.commonInterfaceHelper.engineIsCreated(this.engine)) {\n      return;\n    }\n\n    this.commonInterfaceHelper.onAnalyticsChange();\n  }\n\n  public registerFieldsToInclude() {\n    const fields = EcommerceDefaultFieldsToInclude.concat(\n      [...this.fieldsToInclude].filter((field) => !!field)\n    );\n    this.engine!.dispatch(\n      loadFieldActions(this.engine!).registerFieldsToInclude(fields)\n    );\n  }\n\n  private async internalInitialization(initEngine: () => void) {\n    await this.componentWillLoadCalledPromise;\n    await Promise.all([\n      this.commonInterfaceHelper.onInitialization(initEngine),\n      this.i18Initialized,\n    ]);\n    await this.updateLanguage();\n    markParentAsReady(this.host);\n    this.pipeline = this.engine!.state.pipeline;\n    this.searchHub = this.engine!.state.searchHub;\n    this.store.unsetLoadingFlag(FirstRecommendationExecutedFlag);\n    this.initialized = true;\n  }\n\n  private initEngine(options: RecsInitializationOptions) {\n    const analyticsConfig = getAnalyticsConfig(options, this.analytics);\n    try {\n      this.engine = buildRecommendationEngine({\n        configuration: {\n          pipeline: this.pipeline,\n          searchHub: this.searchHub ?? 'default',\n          locale: this.language,\n          timezone: this.timezone,\n          ...options,\n          analytics: analyticsConfig,\n        },\n        loggerOptions: {\n          level: this.logLevel,\n        },\n      });\n    } catch (error) {\n      this.error = error as Error;\n      throw error;\n    }\n  }\n\n  public render() {\n    return this.engine && <slot></slot>;\n  }\n}\n"],"version":3}