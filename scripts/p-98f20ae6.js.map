{"version":3,"names":["TemplateProvider","constructor","props","buildManager","this","templateManager","registerResultTemplates","customTemplates","Promise","all","templateElements","map","async","resultTemplateElement","template","getTemplate","setTemplateHasError","templates","length","includeDefaultTemplate","makeDefaultTemplate","concat","filter","registerTemplates","setResultTemplateRegistered","getTemplateContent","item","selectTemplate","getLinkTemplateContent","selectLinkTemplate","getEmptyLinkTemplateContent","document","createDocumentFragment","templatesRegistered","getResultTemplateRegistered","hasError","getTemplateHasError"],"sources":["src/components/common/template-provider/template-provider.ts"],"sourcesContent":["import type {Template, TemplatesManager} from '@coveo/headless';\n\nexport interface TemplateElement<ItemType> extends HTMLElement {\n  getTemplate(): Promise<Template<ItemType, DocumentFragment> | null>;\n}\n\nexport interface TemplateProviderProps<ItemType> {\n  getResultTemplateRegistered(): boolean;\n  setResultTemplateRegistered(value: boolean): void;\n  getTemplateHasError(): boolean;\n  setTemplateHasError(value: boolean): void;\n  templateElements: TemplateElement<ItemType>[];\n  includeDefaultTemplate: boolean;\n}\n\nexport abstract class TemplateProvider<ItemType> {\n  private templateManager: TemplatesManager<\n    ItemType,\n    DocumentFragment,\n    DocumentFragment\n  >;\n\n  protected abstract makeDefaultTemplate(): Template<\n    ItemType,\n    DocumentFragment,\n    DocumentFragment\n  >;\n\n  constructor(\n    private props: TemplateProviderProps<ItemType>,\n    private buildManager: () => TemplatesManager<\n      ItemType,\n      DocumentFragment,\n      DocumentFragment\n    >\n  ) {\n    this.templateManager = this.buildManager();\n    this.registerResultTemplates();\n  }\n\n  private async registerResultTemplates() {\n    const customTemplates = await Promise.all(\n      this.props.templateElements.map(async (resultTemplateElement) => {\n        const template = await resultTemplateElement.getTemplate();\n        if (!template) {\n          this.props.setTemplateHasError(true);\n        }\n        return template;\n      })\n    );\n\n    const templates = (\n      !customTemplates.length && this.props.includeDefaultTemplate\n        ? [this.makeDefaultTemplate()]\n        : []\n    ).concat(\n      customTemplates.filter((template) => template) as Template<\n        ItemType,\n        DocumentFragment,\n        DocumentFragment\n      >[]\n    );\n\n    this.templateManager.registerTemplates(...templates);\n    this.props.setResultTemplateRegistered(true);\n  }\n\n  public getTemplateContent(item: ItemType) {\n    return this.templateManager.selectTemplate(item)!;\n  }\n\n  public getLinkTemplateContent(item: ItemType) {\n    return this.templateManager.selectLinkTemplate(item)!;\n  }\n\n  public getEmptyLinkTemplateContent() {\n    return document.createDocumentFragment();\n  }\n\n  public get templatesRegistered() {\n    return this.props.getResultTemplateRegistered();\n  }\n\n  public get hasError() {\n    return this.props.getTemplateHasError();\n  }\n}\n"],"mappings":"MAesBA,EAapB,WAAAC,CACUC,EACAC,GADAC,KAAAF,QACAE,KAAAD,eAMRC,KAAKC,gBAAkBD,KAAKD,eAC5BC,KAAKE,yB,CAGC,6BAAMA,GACZ,MAAMC,QAAwBC,QAAQC,IACpCL,KAAKF,MAAMQ,iBAAiBC,KAAIC,MAAOC,IACrC,MAAMC,QAAiBD,EAAsBE,cAC7C,IAAKD,EAAU,CACbV,KAAKF,MAAMc,oBAAoB,K,CAEjC,OAAOF,CAAQ,KAInB,MAAMG,IACHV,EAAgBW,QAAUd,KAAKF,MAAMiB,uBAClC,CAACf,KAAKgB,uBACN,IACJC,OACAd,EAAgBe,QAAQR,GAAaA,KAOvCV,KAAKC,gBAAgBkB,qBAAqBN,GAC1Cb,KAAKF,MAAMsB,4BAA4B,K,CAGlC,kBAAAC,CAAmBC,GACxB,OAAOtB,KAAKC,gBAAgBsB,eAAeD,E,CAGtC,sBAAAE,CAAuBF,GAC5B,OAAOtB,KAAKC,gBAAgBwB,mBAAmBH,E,CAG1C,2BAAAI,GACL,OAAOC,SAASC,wB,CAGlB,uBAAWC,GACT,OAAO7B,KAAKF,MAAMgC,6B,CAGpB,YAAWC,GACT,OAAO/B,KAAKF,MAAMkC,qB","ignoreList":[]}