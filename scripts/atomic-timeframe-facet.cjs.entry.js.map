{"file":"atomic-timeframe-facet.entry.cjs.js","mappings":"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","names":["FocusTargetController","TimeframeFacetCommon","parseDependsOn","buildFacetConditionsManager","buildDateRange","deserializeRelativeDate","buildSearchStatus","buildTabManager","buildDateFacet","buildDateFilter","loadDateFacetSetActions","h","FacetPlaceholder","InitializeBindings","BindStateToController","ArrayProp","MapProp"],"sources":["src/components/search/facets/atomic-timeframe-facet/atomic-timeframe-facet.pcss?tag=atomic-timeframe-facet&encapsulation=shadow","src/components/search/facets/atomic-timeframe-facet/atomic-timeframe-facet.tsx"],"sourcesContent":["@import '../../../common/facets/facet-common.pcss';\n","import {\n  buildDateFacet,\n  buildDateFilter,\n  buildDateRange,\n  buildFacetConditionsManager,\n  buildSearchStatus,\n  DateFacet,\n  DateFacetState,\n  DateFilter,\n  DateFilterState,\n  DateRangeRequest,\n  deserializeRelativeDate,\n  RangeFacetSortCriterion,\n  loadDateFacetSetActions,\n  SearchStatus,\n  SearchStatusState,\n  FacetValueRequest,\n  CategoryFacetValueRequest,\n  buildTabManager,\n  TabManager,\n  TabManagerState,\n} from '@coveo/headless';\nimport {Component, Element, h, Listen, Prop, State} from '@stencil/core';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {ArrayProp, MapProp} from '../../../../utils/props-utils';\nimport {FocusTargetController} from '../../../../utils/stencil-accessibility-utils';\nimport {parseDependsOn} from '../../../common/facets/depends-on';\nimport {FacetPlaceholder} from '../../../common/facets/facet-placeholder/facet-placeholder';\nimport {TimeframeFacetCommon} from '../../../common/facets/timeframe-facet-common';\nimport {Bindings} from '../../atomic-search-interface/atomic-search-interface';\n\n/**\n * A facet is a list of values for a certain field occurring in the results.\n * An `atomic-timeframe-facet` displays a facet of the results for the current query as date intervals.\n *\n * @slot default - The `atomic-timeframe` components defining the timeframes to display.\n *\n * @part facet - The wrapper for the entire facet.\n * @part placeholder - The placeholder shown before the first search is executed.\n *\n * @part label-button - The button that displays the label and allows to expand/collapse the facet.\n * @part label-button-icon - The label button icon.\n * @part clear-button - The button that resets the actively selected facet values.\n * @part clear-button-icon - The clear button icon.\n *\n * @part values - The facet values container.\n * @part value-label - The facet value label, common for all displays.\n * @part value-count - The facet value count, common for all displays.\n * @part value-link - The facet value when display is 'link'.\n * @part value-link-selected - The selected facet value when display is 'link'.\n *\n * @part input-start - The input for the starting value of the custom date range.\n * @part input-end - The input for the ending value of the custom date range.\n * @part input-label - The label for both the start and end input.\n * @part input-apply-button - The apply button for the custom range.\n */\n@Component({\n  tag: 'atomic-timeframe-facet',\n  styleUrl: './atomic-timeframe-facet.pcss',\n  shadow: true,\n})\nexport class AtomicTimeframeFacet implements InitializableComponent {\n  @InitializeBindings() public bindings!: Bindings;\n  public facetForDateRange?: DateFacet;\n  public facetForDatePicker?: DateFacet;\n\n  private timeframeFacetCommon?: TimeframeFacetCommon;\n  public filter?: DateFilter;\n  public searchStatus!: SearchStatus;\n  public tabManager!: TabManager;\n  @Element() private host!: HTMLElement;\n\n  @BindStateToController('facetForDateRange')\n  @State()\n  public facetState!: DateFacetState;\n  @BindStateToController('facetForDatePicker')\n  @State()\n  public facetForDatePickerState?: DateFacetState;\n  @BindStateToController('filter')\n  @State()\n  public filterState?: DateFilterState;\n  @BindStateToController('searchStatus')\n  @State()\n  public searchStatusState!: SearchStatusState;\n  @BindStateToController('tabManager')\n  @State()\n  public tabManagerState!: TabManagerState;\n  @State() public error!: Error;\n\n  /**\n   * Specifies a unique identifier for the facet.\n   */\n  @Prop({mutable: true, reflect: true}) public facetId?: string;\n  /**\n   * The non-localized label for the facet.\n   * Used in the atomic-breadbox component through the bindings store.\n   */\n  @Prop({reflect: true}) public label = 'no-label';\n  /**\n   * The field whose values you want to display in the facet.\n   */\n  @Prop({reflect: true}) public field = 'date';\n  /**\n   * The tabs on which the facet can be displayed. This property should not be used at the same time as `tabs-excluded`.\n   *\n   * Set this property as a stringified JSON array, e.g.,\n   * ```html\n   *  <atomic-timeframe-facet tabs-included='[\"tabIDA\", \"tabIDB\"]'></atomic-timeframe-facet>\n   * ```\n   * If you don't set this property, the facet can be displayed on any tab. Otherwise, the facet can only be displayed on the specified tabs.\n   */\n  @ArrayProp()\n  @Prop({reflect: true, mutable: true})\n  public tabsIncluded: string[] | string = '[]';\n\n  /**\n   * The tabs on which this facet must not be displayed. This property should not be used at the same time as `tabs-included`.\n   *\n   * Set this property as a stringified JSON array, e.g.,\n   * ```html\n   *  <atomic-timeframe-facet tabs-excluded='[\"tabIDA\", \"tabIDB\"]'></atomic-timeframe-facet>\n   * ```\n   * If you don't set this property, the facet can be displayed on any tab. Otherwise, the facet won't be displayed on any of the specified tabs.\n   */\n  @ArrayProp()\n  @Prop({reflect: true, mutable: true})\n  public tabsExcluded: string[] | string = '[]';\n\n  /**\n   * Whether this facet should contain an datepicker allowing users to set custom ranges.\n   */\n  @Prop({reflect: true}) public withDatePicker = false;\n  /**\n   * Specifies whether the facet is collapsed. When the facet is the child of an `atomic-facet-manager` component, the facet manager controls this property.\n   */\n  @Prop({reflect: true, mutable: true}) public isCollapsed = false;\n  /**\n   * The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the heading over the facet, from 1 to 6.\n   */\n  @Prop({reflect: true}) public headingLevel = 0;\n  /**\n   * Whether to exclude the parents of folded results when estimating the result count for each facet value.\n   *\n   *\n   * Note: Resulting count is only an estimation, in some cases this value could be incorrect.\n   */\n  @Prop({reflect: true}) public filterFacetCount = true;\n  /**\n   * The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\n   * Note: A high injectionDepth may negatively impact the facet request performance.\n   * Minimum: `0`\n   * Default: `1000`\n   */\n  @Prop({reflect: true}) public injectionDepth = 1000;\n\n  /**\n   * The required facets and values for this facet to be displayed.\n   * Examples:\n   * ```html\n   * <atomic-facet facet-id=\"abc\" field=\"objecttype\" ...></atomic-facet>\n   *\n   * <!-- To show the facet when any value is selected in the facet with id \"abc\": -->\n   * <atomic-timeframe-facet\n   *   depends-on-abc\n   *   ...\n   * ></atomic-timeframe-facet>\n   *\n   * <!-- To show the facet when value \"doc\" is selected in the facet with id \"abc\": -->\n   * <atomic-timeframe-facet\n   *   depends-on-abc=\"doc\"\n   *   ...\n   * ></atomic-timeframe-facet>\n   * ```\n   */\n  @MapProp() @Prop() public dependsOn: Record<string, string> = {};\n\n  /**\n   * The earliest date to accept from user input when the `withDatepicker` option is enabled.\n   *\n   * This value must be a valid date string in the format `YYYY-MM-DD`.\n   *\n   * If this format is not respected, the date picker ignores this property, behaving as if no `min` value had been set.\n   *\n   * See also [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date#min).\n   */\n  @Prop({reflect: true}) public min?: string;\n\n  /**\n   * The latest date to accept from user input when the `withDatepicker` option is enabled.\n   *\n   * This value must be a valid date string in the format `YYYY-MM-DD`.\n   *\n   * If this format is not respected, the date picker ignores this property, behaving as if no `max` value had been set.\n   *\n   * See also [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date#max).\n   */\n  @Prop({reflect: true}) public max?: string;\n\n  /**\n   * The sort criterion to apply to the returned facet values.\n   * Possible values are 'ascending' and 'descending'.\n   */\n  @Prop({reflect: true}) public sortCriteria: RangeFacetSortCriterion =\n    'descending';\n\n  private headerFocus?: FocusTargetController;\n\n  private get focusTarget(): FocusTargetController {\n    if (!this.headerFocus) {\n      this.headerFocus = new FocusTargetController(this);\n    }\n    return this.headerFocus;\n  }\n\n  public initialize() {\n    if (\n      [...this.tabsIncluded].length > 0 &&\n      [...this.tabsExcluded].length > 0\n    ) {\n      console.warn(\n        'Values for both \"tabs-included\" and \"tabs-excluded\" have been provided. This is could lead to unexpected behaviors.'\n      );\n    }\n    this.timeframeFacetCommon = new TimeframeFacetCommon({\n      facetId: this.facetId,\n      host: this.host,\n      bindings: this.bindings,\n      label: this.label,\n      field: this.field,\n      headingLevel: this.headingLevel,\n      dependsOn: parseDependsOn(this.dependsOn) && this.dependsOn,\n      withDatePicker: this.withDatePicker,\n      setFacetId: (id: string) => (this.facetId = id),\n      buildDependenciesManager: (facetId: string) =>\n        buildFacetConditionsManager(this.bindings.engine, {\n          facetId,\n          conditions: parseDependsOn<\n            FacetValueRequest | CategoryFacetValueRequest\n          >(this.dependsOn),\n        }),\n      buildDateRange,\n      getSearchStatusState: () => this.searchStatusState,\n      deserializeRelativeDate,\n      initializeFacetForDatePicker: () => this.initializeFacetForDatePicker(),\n      initializeFacetForDateRange: (values: DateRangeRequest[]) =>\n        this.initializeFacetForDateRange(values),\n      initializeFilter: () => this.initializeFilter(),\n      min: this.min,\n      max: this.max,\n      sortCriteria: this.sortCriteria,\n    });\n    this.searchStatus = buildSearchStatus(this.bindings.engine);\n    this.tabManager = buildTabManager(this.bindings.engine);\n  }\n\n  public disconnectedCallback() {\n    this.timeframeFacetCommon?.disconnectedCallback();\n  }\n\n  private initializeFacetForDatePicker() {\n    this.facetForDatePicker = buildDateFacet(this.bindings.engine, {\n      options: {\n        facetId: `${this.facetId}_input_range`,\n        numberOfValues: 1,\n        generateAutomaticRanges: true,\n        field: this.field,\n        filterFacetCount: this.filterFacetCount,\n        injectionDepth: this.injectionDepth,\n        tabs: {\n          included: [...this.tabsIncluded],\n          excluded: [...this.tabsExcluded],\n        },\n      },\n    });\n    return this.facetForDatePicker;\n  }\n\n  private initializeFacetForDateRange(values: DateRangeRequest[]) {\n    this.facetForDateRange = buildDateFacet(this.bindings.engine, {\n      options: {\n        facetId: this.facetId,\n        field: this.field,\n        currentValues: values,\n        generateAutomaticRanges: false,\n        sortCriteria: this.sortCriteria,\n        filterFacetCount: this.filterFacetCount,\n        injectionDepth: this.injectionDepth,\n        tabs: {\n          included: [...this.tabsIncluded],\n          excluded: [...this.tabsExcluded],\n        },\n      },\n    });\n    return this.facetForDateRange;\n  }\n\n  private initializeFilter() {\n    this.filter = buildDateFilter(this.bindings.engine, {\n      options: {\n        facetId: `${this.facetId}_input`,\n        field: this.field,\n        tabs: {\n          included: [...this.tabsIncluded],\n          excluded: [...this.tabsExcluded],\n        },\n      },\n    });\n\n    return this.filter;\n  }\n\n  @Listen('atomic/dateInputApply')\n  public applyDateInput() {\n    this.facetId &&\n      this.bindings.engine.dispatch(\n        loadDateFacetSetActions(\n          this.bindings.engine\n        ).deselectAllDateFacetValues(this.facetId)\n      );\n  }\n\n  public render() {\n    if (!this.timeframeFacetCommon) {\n      return (\n        <FacetPlaceholder\n          numberOfValues={5}\n          isCollapsed={this.isCollapsed}\n        ></FacetPlaceholder>\n      );\n    }\n    return this.timeframeFacetCommon.render({\n      hasError: this.searchStatusState.hasError,\n      firstSearchExecuted: this.searchStatusState.firstSearchExecuted,\n      isCollapsed: this.isCollapsed,\n      headerFocus: this.focusTarget,\n      onToggleCollapse: () => (this.isCollapsed = !this.isCollapsed),\n    });\n  }\n}\n"],"version":3}